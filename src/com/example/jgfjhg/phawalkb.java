package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phawalkb {

static String TextureName = "walk";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.253206f, 7.656889f, 1.327216f,
 0.868666f, 9.339613f, 1.333642f,
 0.764446f, 8.764758f, 0.032779f,
 0.820442f, 7.822919f, -0.120421f,
 0.491709f, 9.413203f, 1.359523f,
 0.408353f, 9.154655f, -0.074920f,
 0.380701f, 7.643715f, -0.212454f,
 0.422931f, 7.633343f, 1.314528f,
 0.009626f, 7.619499f, 1.588308f,
 -0.042195f, 9.567875f, 1.410749f,
 -0.006456f, 9.308702f, -0.081468f,
 0.045245f, 7.634875f, -0.306381f,
 -0.030501f, 9.677695f, 0.632739f,
 0.479363f, 9.590151f, 0.641614f,
 0.872474f, 9.341373f, 1.130907f,
 0.921707f, 7.649455f, 1.062661f,
 0.416466f, 7.635643f, 0.986779f,
 0.021075f, 7.624442f, 0.979255f,
 0.428931f, 7.390720f, 1.507101f,
 0.765435f, 7.400032f, 1.542758f,
 0.425774f, 7.051547f, 1.513959f,
 0.774203f, 7.060916f, 1.586859f,
 1.217694f, 7.295044f, -0.053939f,
 0.771669f, 7.344687f, 0.991095f,
 0.029473f, 7.354296f, 0.940142f,
 0.053380f, 7.262855f, -0.180037f,
 0.700363f, 4.362339f, 0.108029f,
 0.684600f, 4.362339f, 0.804733f,
 0.033961f, 4.362347f, 0.976895f,
 0.033961f, 4.362347f, -0.297162f,
 0.971581f, 6.389173f, 1.140271f,
 0.997360f, 6.389173f, -0.013032f,
 0.033961f, 6.558653f, -0.168164f,
 0.033961f, 6.484295f, 1.377986f,
 1.920973f, 0.025519f, -0.032371f,
 1.452250f, 0.003320f, 2.204787f,
 -0.302041f, -0.008202f, 2.325896f,
 0.351493f, 0.085379f, -1.063863f,
 1.456073f, 6.753711f, 0.156540f,
 1.408272f, 6.864744f, 0.861143f,
 0.926615f, 6.526742f, 0.996477f,
 0.978374f, 6.401947f, 0.181885f,
 1.814875f, 4.953799f, 0.597723f,
 1.854801f, 5.210041f, 0.848760f,
 1.565413f, 5.297710f, 0.887394f,
 1.519244f, 5.003501f, 0.595671f,
 1.550596f, 3.404609f, 1.822617f,
 1.633572f, 3.933480f, 2.346879f,
 1.071470f, 4.140645f, 2.361754f,
 0.978439f, 3.549830f, 1.771261f,
 0.045239f, 2.399740f, 2.009449f,
 1.177845f, 2.379249f, 1.879898f,
 1.220815f, 2.199392f, 0.513179f,
 0.070090f, 2.171001f, 0.120147f,
 -0.931279f, 9.290272f, 1.096582f,
 -0.882047f, 7.598353f, 1.028336f,
 -0.745860f, 7.778544f, -0.150227f,
 -0.749123f, 8.721877f, 0.003976f,
 -0.411830f, 9.131419f, -0.090528f,
 -0.534560f, 9.561425f, 0.622320f,
 -0.293501f, 7.624614f, -0.225284f,
 -0.374315f, 7.613240f, 0.971731f,
 -0.393093f, 7.610224f, 1.299000f,
 -1.223252f, 7.586729f, 1.280090f,
 -0.935087f, 9.288510f, 1.299318f,
 -0.564156f, 9.383289f, 1.339430f,
 -0.730272f, 7.357656f, 1.514295f,
 -0.392669f, 7.367443f, 1.491466f,
 -0.370584f, 7.028985f, 1.498805f,
 -0.721504f, 7.018541f, 1.558396f,
 -0.712388f, 7.302642f, 0.962855f,
 -1.114839f, 7.228961f, -0.098326f,
 -1.859984f, 3.105431f, 0.056438f,
 -2.418135f, 3.358987f, 0.487272f,
 -2.107360f, 3.473406f, 0.986696f,
 -1.480230f, 3.192215f, 0.502921f,
 -0.903658f, 6.389173f, 1.140271f,
 -0.929437f, 6.389173f, -0.013032f,
 -0.616678f, 4.362339f, 0.804733f,
 -0.632440f, 4.362339f, 0.108029f,
 -1.091108f, 2.382458f, 1.879355f,
 -1.100321f, 2.201544f, 0.462774f,
 -1.527627f, 6.911853f, 0.497175f,
 -0.965858f, 6.857044f, 0.058438f,
 -1.379422f, 6.508773f, 0.921575f,
 -0.728006f, 6.448514f, 0.417752f,
 -1.843274f, 5.176353f, -0.050895f,
 -1.575113f, 5.052242f, -0.258160f,
 -1.700110f, 5.204822f, 0.216720f,
 -1.389551f, 5.063803f, -0.022988f,
 -1.876775f, 0.024674f, 1.567273f,
 -1.490890f, 0.054860f, -0.729799f,
 1.249656f, 4.481594f, 1.847557f,
 1.660455f, 4.357143f, 1.792713f,
 1.603779f, 3.993397f, 1.436355f,
 1.184118f, 4.063951f, 1.433441f,
 -1.953220f, 4.022036f, 0.690652f,
 -1.512367f, 3.821853f, 0.350374f,
 -1.775780f, 3.805442f, 0.016538f,
 -2.156448f, 3.981624f, 0.310761f,
 1.879661f, 0.487369f, -1.451656f,
 1.527247f, 0.034209f, -0.929986f,
 1.933228f, 8.655994f, 4.696635f,
 0.595542f, 7.492186f, 5.959913f,
 1.537279f, 6.836775f, 3.832590f,
 1.184866f, 6.383616f, 4.354260f,
 0.764446f, 8.764758f, 0.032779f,
 0.764446f, 8.764758f, 0.032779f,
 0.872474f, 9.341373f, 1.130907f,
 0.820442f, 7.822919f, -0.120421f,
 0.380701f, 7.643715f, -0.212454f,
 0.764446f, 8.764758f, 0.032779f,
 0.764446f, 8.764758f, 0.032779f,
 0.380701f, 7.643715f, -0.212454f,
 0.380701f, 7.643715f, -0.212454f,
 -0.042195f, 9.567875f, 1.410749f,
 -0.042195f, 9.567875f, 1.410749f,
 0.491709f, 9.413203f, 1.359523f,
 0.491709f, 9.413203f, 1.359523f,
 0.872474f, 9.341373f, 1.130907f,
 0.872474f, 9.341373f, 1.130907f,
 0.491709f, 9.413203f, 1.359523f,
 0.868666f, 9.339613f, 1.333642f,
 1.253206f, 7.656889f, 1.327216f,
 0.868666f, 9.339613f, 1.333642f,
 0.868666f, 9.339613f, 1.333642f,
 0.416466f, 7.635643f, 0.986779f,
 0.422931f, 7.633343f, 1.314528f,
 0.422931f, 7.633343f, 1.314528f,
 0.009626f, 7.619499f, 1.588308f,
 0.422931f, 7.633343f, 1.314528f,
 0.428931f, 7.390720f, 1.507101f,
 0.428931f, 7.390720f, 1.507101f,
 0.425774f, 7.051547f, 1.513959f,
 0.425774f, 7.051547f, 1.513959f,
 0.425774f, 7.051547f, 1.513959f,
 0.774203f, 7.060916f, 1.586859f,
 1.253206f, 7.656889f, 1.327216f,
 0.765435f, 7.400032f, 1.542758f,
 0.765435f, 7.400032f, 1.542758f,
 0.774203f, 7.060916f, 1.586859f,
 0.416466f, 7.635643f, 0.986779f,
 0.771669f, 7.344687f, 0.991095f,
 0.380701f, 7.643715f, -0.212454f,
 0.380701f, 7.643715f, -0.212454f,
 0.771669f, 7.344687f, 0.991095f,
 1.217694f, 7.295044f, -0.053939f,
 0.029473f, 7.354296f, 0.940142f,
 0.416466f, 7.635643f, 0.986779f,
 0.416466f, 7.635643f, 0.986779f,
 0.029473f, 7.354296f, 0.940142f,
 0.771669f, 7.344687f, 0.991095f,
 0.045245f, 7.634875f, -0.306381f,
 0.380701f, 7.643715f, -0.212454f,
 0.053380f, 7.262855f, -0.180037f,
 0.053380f, 7.262855f, -0.180037f,
 0.380701f, 7.643715f, -0.212454f,
 1.217694f, 7.295044f, -0.053939f,
 0.971581f, 6.389173f, 1.140271f,
 0.684600f, 4.362339f, 0.804733f,
 0.700363f, 4.362339f, 0.108029f,
 0.684600f, 4.362339f, 0.804733f,
 0.684600f, 4.362339f, 0.804733f,
 1.177845f, 2.379249f, 1.879898f,
 0.033961f, 4.362347f, 0.976895f,
 0.684600f, 4.362339f, 0.804733f,
 0.684600f, 4.362339f, 0.804733f,
 0.033961f, 4.362347f, -0.297162f,
 0.700363f, 4.362339f, 0.108029f,
 0.700363f, 4.362339f, 0.108029f,
 0.771669f, 7.344687f, 0.991095f,
 1.217694f, 7.295044f, -0.053939f,
 1.217694f, 7.295044f, -0.053939f,
 0.971581f, 6.389173f, 1.140271f,
 0.771669f, 7.344687f, 0.991095f,
 0.771669f, 7.344687f, 0.991095f,
 0.997360f, 6.389173f, -0.013032f,
 0.971581f, 6.389173f, 1.140271f,
 0.971581f, 6.389173f, 1.140271f,
 0.926615f, 6.526742f, 0.996477f,
 1.217694f, 7.295044f, -0.053939f,
 0.997360f, 6.389173f, -0.013032f,
 0.997360f, 6.389173f, -0.013032f,
 0.926615f, 6.526742f, 0.996477f,
 1.565413f, 5.297710f, 0.887394f,
 1.565413f, 5.297710f, 0.887394f,
 1.565413f, 5.297710f, 0.887394f,
 1.249656f, 4.481594f, 1.847557f,
 1.249656f, 4.481594f, 1.847557f,
 1.177845f, 2.379249f, 1.879898f,
 1.452250f, 0.003320f, 2.204787f,
 1.452250f, 0.003320f, 2.204787f,
 -0.931279f, 9.290272f, 1.096582f,
 -0.749123f, 8.721877f, 0.003976f,
 -0.749123f, 8.721877f, 0.003976f,
 -0.745860f, 7.778544f, -0.150227f,
 -0.749123f, 8.721877f, 0.003976f,
 -0.293501f, 7.624614f, -0.225284f,
 -0.293501f, 7.624614f, -0.225284f,
 -0.749123f, 8.721877f, 0.003976f,
 -0.293501f, 7.624614f, -0.225284f,
 -0.564156f, 9.383289f, 1.339430f,
 -0.042195f, 9.567875f, 1.410749f,
 -0.042195f, 9.567875f, 1.410749f,
 -0.935087f, 9.288510f, 1.299318f,
 -0.564156f, 9.383289f, 1.339430f,
 -0.931279f, 9.290272f, 1.096582f,
 -0.931279f, 9.290272f, 1.096582f,
 -0.564156f, 9.383289f, 1.339430f,
 -0.935087f, 9.288510f, 1.299318f,
 -0.935087f, 9.288510f, 1.299318f,
 -1.223252f, 7.586729f, 1.280090f,
 0.009626f, 7.619499f, 1.588308f,
 -0.393093f, 7.610224f, 1.299000f,
 -0.393093f, 7.610224f, 1.299000f,
 -0.374315f, 7.613240f, 0.971731f,
 -0.393093f, 7.610224f, 1.299000f,
 -0.392669f, 7.367443f, 1.491466f,
 -0.392669f, 7.367443f, 1.491466f,
 -0.370584f, 7.028985f, 1.498805f,
 -0.370584f, 7.028985f, 1.498805f,
 -0.370584f, 7.028985f, 1.498805f,
 -0.721504f, 7.018541f, 1.558396f,
 -0.721504f, 7.018541f, 1.558396f,
 -0.730272f, 7.357656f, 1.514295f,
 -0.730272f, 7.357656f, 1.514295f,
 -1.223252f, 7.586729f, 1.280090f,
 -1.114839f, 7.228961f, -0.098326f,
 -0.712388f, 7.302642f, 0.962855f,
 -0.293501f, 7.624614f, -0.225284f,
 -0.293501f, 7.624614f, -0.225284f,
 -0.712388f, 7.302642f, 0.962855f,
 -0.374315f, 7.613240f, 0.971731f,
 -0.712388f, 7.302642f, 0.962855f,
 0.029473f, 7.354296f, 0.940142f,
 -0.374315f, 7.613240f, 0.971731f,
 -0.374315f, 7.613240f, 0.971731f,
 0.029473f, 7.354296f, 0.940142f,
 0.045245f, 7.634875f, -0.306381f,
 0.053380f, 7.262855f, -0.180037f,
 -0.293501f, 7.624614f, -0.225284f,
 -0.293501f, 7.624614f, -0.225284f,
 0.053380f, 7.262855f, -0.180037f,
 -1.114839f, 7.228961f, -0.098326f,
 -0.903658f, 6.389173f, 1.140271f,
 -0.616678f, 4.362339f, 0.804733f,
 -0.632440f, 4.362339f, 0.108029f,
 -0.616678f, 4.362339f, 0.804733f,
 -0.616678f, 4.362339f, 0.804733f,
 -1.091108f, 2.382458f, 1.879355f,
 -0.616678f, 4.362339f, 0.804733f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.362339f, 0.804733f,
 0.045239f, 2.399740f, 2.009449f,
 0.033961f, 4.362347f, 0.976895f,
 0.033961f, 4.362347f, -0.297162f,
 0.070090f, 2.171001f, 0.120147f,
 -0.632440f, 4.362339f, 0.108029f,
 -0.632440f, 4.362339f, 0.108029f,
 0.070090f, 2.171001f, 0.120147f,
 -1.100321f, 2.201544f, 0.462774f,
 -1.114839f, 7.228961f, -0.098326f,
 -0.965858f, 6.857044f, 0.058438f,
 -0.712388f, 7.302642f, 0.962855f,
 -0.965858f, 6.857044f, 0.058438f,
 -1.527627f, 6.911853f, 0.497175f,
 -0.712388f, 7.302642f, 0.962855f,
 -0.712388f, 7.302642f, 0.962855f,
 -1.527627f, 6.911853f, 0.497175f,
 -0.903658f, 6.389173f, 1.140271f,
 -0.903658f, 6.389173f, 1.140271f,
 -1.527627f, 6.911853f, 0.497175f,
 -1.379422f, 6.508773f, 0.921575f,
 -1.379422f, 6.508773f, 0.921575f,
 -0.728006f, 6.448514f, 0.417752f,
 -0.903658f, 6.389173f, 1.140271f,
 -0.903658f, 6.389173f, 1.140271f,
 -0.728006f, 6.448514f, 0.417752f,
 -0.929437f, 6.389173f, -0.013032f,
 -0.728006f, 6.448514f, 0.417752f,
 -0.965858f, 6.857044f, 0.058438f,
 -0.929437f, 6.389173f, -0.013032f,
 -0.929437f, 6.389173f, -0.013032f,
 -0.965858f, 6.857044f, 0.058438f,
 -1.114839f, 7.228961f, -0.098326f,
 -1.527627f, 6.911853f, 0.497175f,
 -1.843274f, 5.176353f, -0.050895f,
 -1.379422f, 6.508773f, 0.921575f,
 -1.379422f, 6.508773f, 0.921575f,
 -1.843274f, 5.176353f, -0.050895f,
 -1.700110f, 5.204822f, 0.216720f,
 -1.953220f, 4.022036f, 0.690652f,
 -1.700110f, 5.204822f, 0.216720f,
 -2.156448f, 3.981624f, 0.310761f,
 -2.156448f, 3.981624f, 0.310761f,
 -1.700110f, 5.204822f, 0.216720f,
 -1.843274f, 5.176353f, -0.050895f,
 -1.490890f, 0.054860f, -0.729799f,
 -1.876775f, 0.024674f, 1.567273f,
 -1.100321f, 2.201544f, 0.462774f,
 -1.100321f, 2.201544f, 0.462774f,
 -1.876775f, 0.024674f, 1.567273f,
 -1.091108f, 2.382458f, 1.879355f,
 1.603779f, 3.993397f, 1.436355f,
 1.633572f, 3.933480f, 2.346879f,
 1.550596f, 3.404609f, 1.822617f,
 1.184118f, 4.063951f, 1.433441f,
 1.603779f, 3.993397f, 1.436355f,
 0.978439f, 3.549830f, 1.771261f,
 0.978439f, 3.549830f, 1.771261f,
 1.603779f, 3.993397f, 1.436355f,
 1.550596f, 3.404609f, 1.822617f,
 1.249656f, 4.481594f, 1.847557f,
 1.184118f, 4.063951f, 1.433441f,
 1.071470f, 4.140645f, 2.361754f,
 1.071470f, 4.140645f, 2.361754f,
 1.184118f, 4.063951f, 1.433441f,
 0.978439f, 3.549830f, 1.771261f,
 -1.512367f, 3.821853f, 0.350374f,
 -2.107360f, 3.473406f, 0.986696f,
 -1.480230f, 3.192215f, 0.502921f,
 -1.512367f, 3.821853f, 0.350374f,
 -1.480230f, 3.192215f, 0.502921f,
 -1.775780f, 3.805442f, 0.016538f,
 -1.775780f, 3.805442f, 0.016538f,
 -1.480230f, 3.192215f, 0.502921f,
 -1.859984f, 3.105431f, 0.056438f,
 -2.156448f, 3.981624f, 0.310761f,
 -1.775780f, 3.805442f, 0.016538f,
 -2.418135f, 3.358987f, 0.487272f,
 -2.418135f, 3.358987f, 0.487272f,
 -1.775780f, 3.805442f, 0.016538f,
 -1.859984f, 3.105431f, 0.056438f,
 -2.156448f, 3.981624f, 0.310761f,
 -2.418135f, 3.358987f, 0.487272f,
 -1.953220f, 4.022036f, 0.690652f,
 1.879661f, 0.487369f, -1.451656f,
 1.527247f, 0.034209f, -0.929986f,
 1.537279f, 6.836775f, 3.832590f,
 1.537279f, 6.836775f, 3.832590f,
 1.527247f, 0.034209f, -0.929986f,
 1.184866f, 6.383616f, 4.354260f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.953532f, 0.279040f, -0.113641f},
{ 0.844121f, -0.305161f, -0.440836f},
{ 0.908636f, 0.145074f, -0.391578f},
{ 0.873743f, -0.281661f, -0.396534f},
{ 0.369051f, 0.390295f, -0.843488f},
{ 0.531414f, 0.811461f, -0.243166f},
{ 0.498319f, 0.146384f, -0.854546f},
{ 0.546102f, -0.831327f, -0.103286f},
{ 0.500784f, 0.011400f, 0.865497f},
{ 0.395000f, 0.077436f, 0.915412f},
{ 0.172130f, -0.091597f, 0.980807f},
{ 0.211909f, 0.326919f, 0.920988f},
{ -0.029563f, 0.440935f, 0.897052f},
{ -0.012179f, -0.224590f, 0.974377f},
{ 0.002313f, 0.500049f, -0.865994f},
{ -0.024799f, 0.986018f, -0.164781f},
{ 0.018690f, 0.011835f, -0.999755f},
{ 0.427707f, 0.346365f, 0.834924f},
{ -0.778729f, 0.217072f, 0.588609f},
{ 0.414285f, -0.845182f, -0.337691f},
{ -0.183221f, -0.847215f, -0.498655f},
{ 0.016942f, -0.896015f, 0.443700f},
{ 0.423000f, 0.668869f, 0.611298f},
{ 0.545009f, 0.629009f, -0.554359f},
{ -0.028083f, 0.358301f, 0.933184f},
{ 0.019612f, -0.100098f, -0.994784f},
{ 0.502687f, -0.864339f, -0.014974f},
{ 0.562925f, -0.235806f, 0.792156f},
{ -0.835202f, -0.548825f, -0.035061f},
{ -0.625947f, 0.140476f, 0.767109f},
{ -0.001843f, -0.033815f, 0.999426f},
{ 0.729579f, -0.120681f, 0.673164f},
{ 0.667477f, -0.095957f, -0.738421f},
{ -0.000701f, 0.037233f, -0.999306f},
{ 0.842091f, 0.159499f, 0.515211f},
{ 0.804052f, -0.070115f, -0.590411f},
{ -0.002651f, -0.124790f, -0.992180f},
{ -0.000361f, 0.141050f, 0.990003f},
{ 0.872421f, 0.277077f, -0.402628f},
{ 0.743816f, 0.304827f, 0.594826f},
{ 0.004291f, 0.297058f, 0.954850f},
{ 0.008068f, 0.271967f, -0.962273f},
{ 0.787783f, 0.385836f, 0.480134f},
{ 0.851505f, 0.111422f, -0.512371f},
{ -0.146656f, -0.232787f, 0.961406f},
{ -0.449027f, -0.511716f, -0.732476f},
{ 0.953887f, 0.207539f, 0.216859f},
{ 0.700536f, -0.324534f, -0.635552f},
{ -0.696136f, 0.075791f, 0.713898f},
{ -0.780700f, -0.287204f, -0.554997f},
{ 0.867240f, 0.310762f, 0.389001f},
{ 0.716771f, -0.493928f, -0.492214f},
{ -0.616614f, 0.711248f, 0.337509f},
{ -0.848008f, -0.095907f, -0.521234f},
{ 0.698481f, 0.222285f, 0.680231f},
{ -0.158493f, 0.087277f, 0.983495f},
{ 0.876215f, 0.362036f, -0.318085f},
{ 0.143395f, 0.459765f, -0.876387f},
{ -0.962785f, 0.224749f, -0.150108f},
{ -0.899847f, 0.093838f, -0.425993f},
{ -0.808128f, -0.351972f, -0.472277f},
{ -0.840695f, -0.330234f, -0.429159f},
{ -0.566858f, 0.780347f, -0.264066f},
{ -0.358217f, 0.369691f, -0.857327f},
{ -0.472958f, 0.118866f, -0.873030f},
{ -0.493855f, -0.860790f, -0.123077f},
{ -0.264929f, 0.313410f, 0.911914f},
{ -0.433263f, 0.053970f, 0.899650f},
{ -0.203831f, -0.102249f, 0.973652f},
{ -0.533163f, -0.017893f, 0.845823f},
{ -0.478054f, 0.320705f, 0.817687f},
{ -0.352649f, -0.866910f, -0.352287f},
{ 0.742258f, 0.260161f, 0.617551f},
{ 0.249700f, -0.834951f, -0.490415f},
{ -0.609315f, 0.484094f, -0.628004f},
{ -0.485599f, 0.635958f, 0.599793f},
{ -0.102624f, -0.708032f, -0.698684f},
{ 0.721478f, -0.570117f, 0.392983f},
{ -0.869355f, -0.491198f, -0.054288f},
{ -0.156595f, -0.279861f, 0.947183f},
{ -0.710782f, -0.127344f, 0.691790f},
{ -0.709058f, -0.072728f, -0.701390f},
{ -0.802233f, -0.078472f, -0.591831f},
{ -0.848058f, 0.150822f, 0.507986f},
{ -0.833353f, 0.311413f, -0.456667f},
{ -0.704198f, 0.328433f, 0.629474f},
{ -0.529195f, 0.370966f, -0.763110f},
{ -0.837259f, 0.518089f, -0.174877f},
{ -0.363029f, -0.320879f, 0.874784f},
{ 0.904976f, -0.424166f, 0.033200f},
{ -0.007461f, -0.012053f, -0.999900f},
{ -0.848340f, 0.238746f, -0.472567f},
{ -0.018277f, -0.155124f, 0.987726f},
{ 0.941037f, -0.250046f, 0.227875f},
{ -0.929725f, 0.207105f, -0.304499f},
{ -0.005834f, -0.145085f, -0.989402f},
{ -0.008209f, 0.417925f, 0.908444f},
{ 0.954461f, 0.044521f, 0.294996f},
{ -0.908292f, 0.213334f, 0.359853f},
{ -0.664854f, 0.437969f, -0.605105f},
{ -0.890578f, 0.279715f, -0.358650f},
{ -0.865353f, 0.290545f, -0.408348f},
{ -0.798233f, 0.338002f, -0.498578f},
{ -0.784607f, 0.336821f, -0.520522f},
{ -0.889873f, 0.262527f, -0.373103f},
{ -0.889873f, 0.262527f, -0.373103f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
51, 50, 35,
35, 50, 36,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
37, 91, 53,
53, 91, 81,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: walk Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86