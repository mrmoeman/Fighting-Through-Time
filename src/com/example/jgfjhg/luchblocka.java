package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class luchblocka {

static String TextureName = "block";

static int Vertices = 350;

static int VertTexts = 202;

static int Normals = 304;

static int Faces = 196;

static int FacesB = 33;

static int SmoothGroups = 94;

static float VertArray[] = new float[]{
 0.078843f, 8.340875f, 2.430741f,
 1.904159f, 8.488041f, 2.175123f,
 -0.565265f, 10.226243f, 2.389405f,
 1.864924f, 10.058576f, 3.014636f,
 0.078843f, 11.261362f, -0.852994f,
 2.818147f, 10.873463f, -0.768576f,
 0.078843f, 9.463926f, -1.583391f,
 2.574045f, 9.333105f, -1.269284f,
 0.078843f, 6.665383f, -1.984683f,
 1.484956f, 6.436835f, -1.883085f,
 1.120089f, 6.230421f, 0.604909f,
 0.078843f, 6.012644f, 0.449384f,
 0.078843f, 10.901624f, 1.985467f,
 1.085087f, 10.987067f, 1.710018f,
 1.085087f, 11.505026f, 0.040234f,
 0.078843f, 11.618749f, -0.326383f,
 0.078843f, 11.990831f, 2.606797f,
 1.491354f, 12.163519f, 2.050090f,
 1.491354f, 12.662495f, 0.441503f,
 0.078843f, 12.858665f, -0.190904f,
 0.078843f, 13.719532f, 2.883308f,
 1.031165f, 13.580443f, 2.595655f,
 1.031165f, 14.144347f, 0.777755f,
 0.078843f, 14.436812f, 0.570961f,
 0.958348f, 3.632559f, -1.075612f,
 1.981475f, 3.569265f, -0.996884f,
 1.867348f, 3.213013f, 0.199878f,
 0.844221f, 3.276307f, 0.121151f,
 0.733040f, -0.025459f, -3.479022f,
 2.545638f, -0.025459f, -3.479022f,
 2.545638f, 1.291012f, -1.331089f,
 0.733078f, 1.291012f, -1.331089f,
 0.778096f, -0.015118f, 1.053026f,
 2.416366f, -0.015118f, 1.053026f,
 2.244411f, 1.218862f, -0.289112f,
 0.998903f, 1.218862f, -0.289112f,
 3.010440f, 8.479430f, 0.856975f,
 2.329774f, 8.412579f, 2.007647f,
 3.435373f, 9.766590f, 1.422316f,
 2.396409f, 9.753071f, 2.457598f,
 2.492860f, 7.324953f, 2.483971f,
 2.837190f, 7.875089f, 2.355659f,
 3.059607f, 7.049878f, 2.825475f,
 3.312594f, 7.454076f, 2.731199f,
 1.345096f, 7.859222f, 4.213600f,
 2.093099f, 9.054305f, 3.934857f,
 2.220760f, 7.434213f, 4.741247f,
 2.838815f, 8.421679f, 4.510930f,
 0.920445f, 8.401916f, 5.400802f,
 1.668448f, 9.596999f, 5.122060f,
 1.796109f, 7.976907f, 5.928448f,
 2.414163f, 8.964372f, 5.698130f,
 0.078843f, 1.374928f, -5.647097f,
 0.078843f, 7.464554f, -3.367929f,
 4.632588f, 7.464556f, -2.939423f,
 6.557657f, 1.425785f, -4.647071f,
 -2.416360f, 8.477201f, 1.922382f,
 -2.667250f, 10.471496f, 1.474855f,
 -0.808397f, 13.580443f, 2.595655f,
 -0.808432f, 14.144347f, 0.777755f,
 -2.033007f, 10.670127f, -1.444937f,
 -2.416360f, 9.333105f, -1.269284f,
 -0.620411f, -0.015118f, 5.053026f,
 -2.258681f, -0.015118f, 5.053026f,
 -2.086726f, 1.218862f, 3.710888f,
 -0.841217f, 1.218862f, 3.710888f,
 -1.169714f, 5.631183f, -1.672378f,
 -1.137356f, 7.014160f, 0.302364f,
 -0.927402f, 10.987067f, 1.710018f,
 -0.927402f, 11.505026f, 0.040234f,
 -1.333669f, 12.163519f, 2.050090f,
 -1.333669f, 12.662495f, 0.441503f,
 -1.954275f, 4.258454f, 0.835745f,
 -0.931986f, 4.297267f, 0.937780f,
 -2.086870f, 4.594001f, 2.036582f,
 -1.064582f, 4.632814f, 2.138617f,
 -2.387953f, -0.025459f, 0.520978f,
 -0.575354f, -0.025459f, 0.520978f,
 -2.387953f, 1.291012f, 2.668910f,
 -0.575393f, 1.291012f, 2.668911f,
 -2.685574f, 8.903961f, -1.068962f,
 -2.148733f, 8.767164f, 0.933572f,
 -3.061724f, 10.309915f, -0.872080f,
 -2.586387f, 10.188790f, 0.901032f,
 -3.680997f, 7.537859f, 0.328165f,
 -3.378798f, 8.122794f, 0.393008f,
 -4.315542f, 7.854175f, 0.432038f,
 -4.093509f, 8.283940f, 0.479679f,
 -3.473157f, 6.662245f, 2.273549f,
 -2.816677f, 7.932923f, 2.414409f,
 -4.453574f, 7.150975f, 2.434042f,
 -3.911142f, 8.200902f, 2.550430f,
 -2.719284f, 7.732456f, 3.768892f,
 -3.375764f, 6.461779f, 3.628032f,
 -4.356181f, 6.950508f, 3.788523f,
 -3.813748f, 8.000435f, 3.904912f,
 -4.474903f, 7.464556f, -3.144160f,
 -6.078575f, 1.374927f, -3.824676f,
 5.598403f, 4.414291f, -4.054411f,
 0.078843f, 4.419741f, -3.644298f,
 -5.276739f, 4.419742f, -3.826963f,
 3.602179f, 8.595522f, -2.314810f,
 0.078843f, 9.586023f, -2.769940f,
 -3.508228f, 8.315418f, -2.917646f,
 1.904159f, 8.488041f, 2.175123f,
 1.120089f, 6.230421f, 0.604909f,
 1.120089f, 6.230421f, 0.604909f,
 0.078843f, 6.012644f, 0.449384f,
 2.818147f, 10.873463f, -0.768576f,
 2.818147f, 10.873463f, -0.768576f,
 1.085087f, 11.505026f, 0.040234f,
 2.818147f, 10.873463f, -0.768576f,
 0.078843f, 11.261362f, -0.852994f,
 1.085087f, 11.505026f, 0.040234f,
 1.085087f, 11.505026f, 0.040234f,
 0.078843f, 11.261362f, -0.852994f,
 0.078843f, 11.618749f, -0.326383f,
 0.078843f, 10.901624f, 1.985467f,
 1.085087f, 10.987067f, 1.710018f,
 1.085087f, 10.987067f, 1.710018f,
 1.085087f, 11.505026f, 0.040234f,
 1.491354f, 12.662495f, 0.441503f,
 1.085087f, 10.987067f, 1.710018f,
 1.085087f, 10.987067f, 1.710018f,
 1.491354f, 12.662495f, 0.441503f,
 1.491354f, 12.163519f, 2.050090f,
 1.491354f, 12.662495f, 0.441503f,
 1.491354f, 12.163519f, 2.050090f,
 1.491354f, 12.163519f, 2.050090f,
 0.078843f, 6.665383f, -1.984683f,
 1.484956f, 6.436835f, -1.883085f,
 1.484956f, 6.436835f, -1.883085f,
 1.484956f, 6.436835f, -1.883085f,
 1.120089f, 6.230421f, 0.604909f,
 1.981475f, 3.569265f, -0.996884f,
 1.981475f, 3.569265f, -0.996884f,
 1.120089f, 6.230421f, 0.604909f,
 0.078843f, 6.012644f, 0.449384f,
 0.844221f, 3.276307f, 0.121151f,
 1.120089f, 6.230421f, 0.604909f,
 1.120089f, 6.230421f, 0.604909f,
 0.844221f, 3.276307f, 0.121151f,
 0.078843f, 6.665383f, -1.984683f,
 1.981475f, 3.569265f, -0.996884f,
 1.981475f, 3.569265f, -0.996884f,
 2.545638f, -0.025459f, -3.479022f,
 0.844221f, 3.276307f, 0.121151f,
 0.733078f, 1.291012f, -1.331089f,
 0.733078f, 1.291012f, -1.331089f,
 2.545638f, -0.025459f, -3.479022f,
 0.733040f, -0.025459f, -3.479022f,
 0.733040f, -0.025459f, -3.479022f,
 2.545638f, -0.025459f, -3.479022f,
 2.416366f, -0.015118f, 1.053026f,
 2.416366f, -0.015118f, 1.053026f,
 2.244411f, 1.218862f, -0.289112f,
 2.545638f, 1.291012f, -1.331089f,
 0.733078f, 1.291012f, -1.331089f,
 0.733078f, 1.291012f, -1.331089f,
 0.778096f, -0.015118f, 1.053026f,
 0.733078f, 1.291012f, -1.331089f,
 0.733078f, 1.291012f, -1.331089f,
 0.778096f, -0.015118f, 1.053026f,
 0.998903f, 1.218862f, -0.289112f,
 1.904159f, 8.488041f, 2.175123f,
 2.574045f, 9.333105f, -1.269284f,
 2.329774f, 8.412579f, 2.007647f,
 2.574045f, 9.333105f, -1.269284f,
 3.010440f, 8.479430f, 0.856975f,
 2.329774f, 8.412579f, 2.007647f,
 2.574045f, 9.333105f, -1.269284f,
 2.818147f, 10.873463f, -0.768576f,
 3.010440f, 8.479430f, 0.856975f,
 3.010440f, 8.479430f, 0.856975f,
 2.818147f, 10.873463f, -0.768576f,
 3.435373f, 9.766590f, 1.422316f,
 2.396409f, 9.753071f, 2.457598f,
 2.818147f, 10.873463f, -0.768576f,
 2.818147f, 10.873463f, -0.768576f,
 2.396409f, 9.753071f, 2.457598f,
 3.435373f, 9.766590f, 1.422316f,
 1.904159f, 8.488041f, 2.175123f,
 2.396409f, 9.753071f, 2.457598f,
 2.396409f, 9.753071f, 2.457598f,
 1.904159f, 8.488041f, 2.175123f,
 2.329774f, 8.412579f, 2.007647f,
 3.010440f, 8.479430f, 0.856975f,
 3.010440f, 8.479430f, 0.856975f,
 2.492860f, 7.324953f, 2.483971f,
 2.492860f, 7.324953f, 2.483971f,
 2.492860f, 7.324953f, 2.483971f,
 1.345096f, 7.859222f, 4.213600f,
 2.093099f, 9.054305f, 3.934857f,
 1.345096f, 7.859222f, 4.213600f,
 1.345096f, 7.859222f, 4.213600f,
 1.345096f, 7.859222f, 4.213600f,
 2.220760f, 7.434213f, 4.741247f,
 2.220760f, 7.434213f, 4.741247f,
 2.838815f, 8.421679f, 4.510930f,
 2.220760f, 7.434213f, 4.741247f,
 2.220760f, 7.434213f, 4.741247f,
 2.093099f, 9.054305f, 3.934857f,
 2.838815f, 8.421679f, 4.510930f,
 2.838815f, 8.421679f, 4.510930f,
 0.078843f, 11.261362f, -0.852994f,
 2.818147f, 10.873463f, -0.768576f,
 2.818147f, 10.873463f, -0.768576f,
 -2.416360f, 8.477201f, 1.922382f,
 -1.137356f, 7.014160f, 0.302364f,
 -1.137356f, 7.014160f, 0.302364f,
 0.078843f, 6.012644f, 0.449384f,
 -2.033007f, 10.670127f, -1.444937f,
 -2.033007f, 10.670127f, -1.444937f,
 0.078843f, 11.261362f, -0.852994f,
 0.078843f, 11.261362f, -0.852994f,
 0.078843f, 11.618749f, -0.326383f,
 0.078843f, 10.901624f, 1.985467f,
 -0.927402f, 10.987067f, 1.710018f,
 -0.927402f, 10.987067f, 1.710018f,
 -1.333669f, 12.163519f, 2.050090f,
 -1.333669f, 12.662495f, 0.441503f,
 -0.927402f, 10.987067f, 1.710018f,
 -0.927402f, 10.987067f, 1.710018f,
 -1.333669f, 12.662495f, 0.441503f,
 -0.927402f, 11.505026f, 0.040234f,
 -0.927402f, 11.505026f, 0.040234f,
 -0.927402f, 11.505026f, 0.040234f,
 -1.333669f, 12.163519f, 2.050090f,
 -1.333669f, 12.163519f, 2.050090f,
 -1.333669f, 12.662495f, 0.441503f,
 0.078843f, 6.665383f, -1.984683f,
 -1.169714f, 5.631183f, -1.672378f,
 -1.169714f, 5.631183f, -1.672378f,
 -1.169714f, 5.631183f, -1.672378f,
 -1.954275f, 4.258454f, 0.835745f,
 -1.137356f, 7.014160f, 0.302364f,
 -1.137356f, 7.014160f, 0.302364f,
 -1.954275f, 4.258454f, 0.835745f,
 -1.137356f, 7.014160f, 0.302364f,
 -1.137356f, 7.014160f, 0.302364f,
 0.078843f, 6.012644f, 0.449384f,
 -1.064582f, 4.632814f, 2.138617f,
 0.078843f, 6.012644f, 0.449384f,
 0.078843f, 6.012644f, 0.449384f,
 0.078843f, 6.665383f, -1.984683f,
 -2.387953f, -0.025459f, 0.520978f,
 -1.954275f, 4.258454f, 0.835745f,
 -1.954275f, 4.258454f, 0.835745f,
 -1.064582f, 4.632814f, 2.138617f,
 -0.575393f, 1.291012f, 2.668911f,
 -0.575393f, 1.291012f, 2.668911f,};

static float VertArrayB[] = new float[]{
 -0.620411f, -0.015118f, 5.053026f,
 -2.258681f, -0.015118f, 5.053026f,
 -0.575354f, -0.025459f, 0.520978f,
 -0.575354f, -0.025459f, 0.520978f,
 -2.258681f, -0.015118f, 5.053026f,
 -2.387953f, -0.025459f, 0.520978f,
 -2.387953f, -0.025459f, 0.520978f,
 -2.258681f, -0.015118f, 5.053026f,
 -2.387953f, 1.291012f, 2.668910f,
 -2.387953f, 1.291012f, 2.668910f,
 -2.258681f, -0.015118f, 5.053026f,
 -2.086726f, 1.218862f, 3.710888f,
 -2.387953f, 1.291012f, 2.668910f,
 -2.086726f, 1.218862f, 3.710888f,
 -0.575393f, 1.291012f, 2.668911f,
 -0.575393f, 1.291012f, 2.668911f,
 -2.086726f, 1.218862f, 3.710888f,
 -0.841217f, 1.218862f, 3.710888f,
 -0.841217f, 1.218862f, 3.710888f,
 -0.620411f, -0.015118f, 5.053026f,
 -0.575393f, 1.291012f, 2.668911f,
 -0.575393f, 1.291012f, 2.668911f,
 -0.620411f, -0.015118f, 5.053026f,
 -0.575354f, -0.025459f, 0.520978f,
 -2.416360f, 8.477201f, 1.922382f,
 -2.148733f, 8.767164f, 0.933572f,
 -2.416360f, 9.333105f, -1.269284f,
 -2.148733f, 8.767164f, 0.933572f,
 -2.685574f, 8.903961f, -1.068962f,
 -2.416360f, 9.333105f, -1.269284f,
 -2.685574f, 8.903961f, -1.068962f,
 -3.061724f, 10.309915f, -0.872080f,
 -2.416360f, 9.333105f, -1.269284f,
 -2.416360f, 9.333105f, -1.269284f,
 -3.061724f, 10.309915f, -0.872080f,
 -2.033007f, 10.670127f, -1.444937f,
 -2.667250f, 10.471496f, 1.474855f,
 -2.033007f, 10.670127f, -1.444937f,
 -2.586387f, 10.188790f, 0.901032f,
 -2.033007f, 10.670127f, -1.444937f,
 -3.061724f, 10.309915f, -0.872080f,
 -2.586387f, 10.188790f, 0.901032f,
 -2.667250f, 10.471496f, 1.474855f,
 -2.148733f, 8.767164f, 0.933572f,
 -2.416360f, 8.477201f, 1.922382f,
 -2.148733f, 8.767164f, 0.933572f,
 -3.378798f, 8.122794f, 0.393008f,
 -2.685574f, 8.903961f, -1.068962f,
 -3.680997f, 7.537859f, 0.328165f,
 -4.315542f, 7.854175f, 0.432038f,
 -2.685574f, 8.903961f, -1.068962f,
 -2.685574f, 8.903961f, -1.068962f,
 -4.315542f, 7.854175f, 0.432038f,
 -3.061724f, 10.309915f, -0.872080f,
 -3.061724f, 10.309915f, -0.872080f,
 -4.093509f, 8.283940f, 0.479679f,
 -2.586387f, 10.188790f, 0.901032f,
 -4.093509f, 8.283940f, 0.479679f,
 -3.378798f, 8.122794f, 0.393008f,
 -2.586387f, 10.188790f, 0.901032f,
 -2.586387f, 10.188790f, 0.901032f,
 -3.378798f, 8.122794f, 0.393008f,
 -2.148733f, 8.767164f, 0.933572f,
 -3.680997f, 7.537859f, 0.328165f,
 -3.473157f, 6.662245f, 2.273549f,
 -4.315542f, 7.854175f, 0.432038f,
 -4.315542f, 7.854175f, 0.432038f,
 -3.473157f, 6.662245f, 2.273549f,
 -4.453574f, 7.150975f, 2.434042f,
 -3.473157f, 6.662245f, 2.273549f,
 -3.375764f, 6.461779f, 3.628032f,
 -2.816677f, 7.932923f, 2.414409f,
 -2.816677f, 7.932923f, 2.414409f,
 -3.375764f, 6.461779f, 3.628032f,
 -2.719284f, 7.732456f, 3.768892f,
 -4.356181f, 6.950508f, 3.788523f,
 -3.375764f, 6.461779f, 3.628032f,
 -4.453574f, 7.150975f, 2.434042f,
 -4.453574f, 7.150975f, 2.434042f,
 -3.375764f, 6.461779f, 3.628032f,
 -3.473157f, 6.662245f, 2.273549f,
 -3.813748f, 8.000435f, 3.904912f,
 -4.356181f, 6.950508f, 3.788523f,
 -3.911142f, 8.200902f, 2.550430f,
 -3.911142f, 8.200902f, 2.550430f,
 -4.356181f, 6.950508f, 3.788523f,
 -4.453574f, 7.150975f, 2.434042f,
 -2.816677f, 7.932923f, 2.414409f,
 -2.719284f, 7.732456f, 3.768892f,
 -3.911142f, 8.200902f, 2.550430f,
 -3.911142f, 8.200902f, 2.550430f,
 -2.719284f, 7.732456f, 3.768892f,
 -3.813748f, 8.000435f, 3.904912f,
 0.078843f, 11.261362f, -0.852994f,
 0.078843f, 9.586023f, -2.769940f,
 -2.033007f, 10.670127f, -1.444937f,
 -2.033007f, 10.670127f, -1.444937f,
 0.078843f, 9.586023f, -2.769940f,
 -3.508228f, 8.315418f, -2.917646f,};

static float[] TextArray = new float[]{
 0.765412f, 0.681378f,
 0.765412f, 0.570335f,
 0.825201f, 0.681378f,
 0.822879f, 0.570299f,
 0.542473f, 0.970289f,
 0.447291f, 0.970289f,
 0.542473f, 0.916457f,
 0.449024f, 0.913521f,
 0.542473f, 0.838197f,
 0.493899f, 0.841133f,
 0.410299f, 0.793373f,
 0.397838f, 0.222717f,
 0.847778f, 0.681378f,
 0.850454f, 0.639527f,
 0.661488f, 0.501265f,
 0.661486f, 0.569087f,
 0.322042f, 0.569516f,
 0.320395f, 0.473878f,
 0.600243f, 0.473879f,
 0.599213f, 0.569510f,
 0.408358f, 0.569764f,
 0.396173f, 0.513666f,
 0.524463f, 0.513667f,
 0.513269f, 0.569764f,
 0.324047f, 0.138784f,
 0.268283f, 0.138970f,
 0.281315f, 0.363513f,
 0.388431f, 0.138763f,
 0.300356f, 0.022362f,
 0.244979f, 0.022659f,
 0.298407f, 0.283420f,
 0.228262f, 0.289756f,
 0.700544f, 0.421993f,
 0.700544f, 0.369959f,
 0.743172f, 0.375421f,
 0.743172f, 0.414980f,
 0.711360f, 0.038998f,
 0.662490f, 0.038998f,
 0.545151f, 0.038998f,
 0.605984f, 0.038998f,
 0.711360f, 0.146332f,
 0.662490f, 0.146332f,
 0.545151f, 0.146332f,
 0.605984f, 0.146332f,
 0.711360f, 0.247785f,
 0.662490f, 0.247785f,
 0.545151f, 0.247785f,
 0.605984f, 0.247785f,
 0.123410f, 0.926820f,
 0.064457f, 0.926366f,
 0.124920f, 0.870927f,
 0.064167f, 0.871384f,
 0.985361f, 0.221742f,
 0.840209f, 0.221742f,
 0.840209f, 0.075484f,
 0.985361f, 0.013481f,
 0.765412f, 0.792421f,
 0.822878f, 0.792457f,
 0.396173f, 0.624501f,
 0.524462f, 0.624500f,
 0.637654f, 0.970289f,
 0.635921f, 0.913521f,
 0.602870f, 0.274197f,
 0.602871f, 0.326231f,
 0.645499f, 0.320769f,
 0.645499f, 0.281210f,
 0.591046f, 0.841133f,
 0.674644f, 0.793372f,
 0.850454f, 0.723230f,
 0.925844f, 0.723230f,
 0.320395f, 0.664289f,
 0.600238f, 0.664291f,
 0.208399f, 0.140511f,
 0.152635f, 0.140325f,
 0.124023f, 0.367959f,
 0.161585f, 0.372104f,
 0.231702f, 0.024200f,
 0.176325f, 0.023903f,
 0.106931f, 0.287866f,
 0.177076f, 0.294203f,
 0.015226f, 0.586251f,
 0.809815f, 0.854360f,
 0.186739f, 0.586251f,
 0.836659f, 0.814916f,
 0.015226f, 0.680055f,
 0.069400f, 0.680055f,
 0.186740f, 0.680055f,
 0.130233f, 0.680055f,
 0.015226f, 0.795038f,
 0.069400f, 0.795038f,
 0.186740f, 0.795038f,
 0.130233f, 0.795038f,
 0.249217f, 0.874910f,
 0.249424f, 0.933539f,
 0.301860f, 0.930908f,
 0.302065f, 0.877358f,
 0.840209f, 0.368000f,
 0.985361f, 0.419507f,
 0.912785f, 0.044483f,
 0.912785f, 0.221742f,
 0.912785f, 0.393753f,
 0.789643f, 0.108579f,
 0.789643f, 0.221742f,
 0.789643f, 0.334905f,
 0.330550f, 0.836015f,
 0.674193f, 0.626883f,
 0.674193f, 0.626883f,
 0.674193f, 0.681378f,
 0.962340f, 0.570236f,
 0.962340f, 0.570236f,
 0.925844f, 0.639527f,
 0.962340f, 0.570236f,
 0.963051f, 0.681379f,
 0.925844f, 0.639527f,
 0.925844f, 0.639527f,
 0.963051f, 0.681379f,
 0.925844f, 0.681379f,
 0.259150f, 0.569083f,
 0.259150f, 0.501261f,
 0.259150f, 0.501261f,
 0.519240f, 0.376645f,
 0.540277f, 0.437890f,
 0.401404f, 0.376641f,
 0.401404f, 0.376641f,
 0.540277f, 0.437890f,
 0.380364f, 0.437885f,
 0.540277f, 0.437890f,
 0.380364f, 0.437885f,
 0.380364f, 0.437885f,
 0.320813f, 0.222669f,
 0.293252f, 0.222819f,
 0.293252f, 0.222819f,
 0.366655f, 0.447487f,
 0.268827f, 0.448535f,
 0.327717f, 0.363533f,
 0.327717f, 0.363533f,
 0.268827f, 0.448535f,
 0.220727f, 0.454545f,
 0.243753f, 0.367658f,
 0.268827f, 0.448535f,
 0.268827f, 0.448535f,
 0.243753f, 0.367658f,
 0.320813f, 0.222669f,
 0.327717f, 0.363533f,
 0.327717f, 0.363533f,
 0.381748f, 0.247125f,
 0.243753f, 0.367658f,
 0.368537f, 0.059658f,
 0.368537f, 0.059658f,
 0.556600f, 0.365850f,
 0.556599f, 0.423421f,
 0.556599f, 0.423421f,
 0.381748f, 0.247125f,
 0.208711f, 0.247418f,
 0.208711f, 0.247418f,
 0.259954f, 0.282383f,
 0.776267f, 0.365854f,
 0.776267f, 0.423423f,
 0.776267f, 0.423423f,
 0.459565f, 0.022649f,
 0.368537f, 0.059658f,
 0.368537f, 0.059658f,
 0.459565f, 0.022649f,
 0.408321f, 0.057613f,
 0.788493f, 0.530101f,
 0.819577f, 0.371917f,
 0.809816f, 0.508397f,
 0.819577f, 0.371917f,
 0.832137f, 0.414748f,
 0.809816f, 0.508397f,
 0.964229f, 0.507208f,
 0.962340f, 0.570236f,
 0.925476f, 0.499804f,
 0.925476f, 0.499804f,
 0.962340f, 0.570236f,
 0.920320f, 0.547872f,
 0.836660f, 0.547841f,
 0.962340f, 0.570236f,
 0.962340f, 0.570236f,
 0.836660f, 0.547841f,
 0.920320f, 0.547872f,
 0.788493f, 0.530101f,
 0.836660f, 0.547841f,
 0.836660f, 0.547841f,
 0.788493f, 0.530101f,
 0.809816f, 0.508397f,
 0.490977f, 0.038998f,
 0.490977f, 0.038998f,
 0.490977f, 0.146332f,
 0.490977f, 0.146332f,
 0.490977f, 0.146332f,
 0.490977f, 0.247785f,
 0.064893f, 0.975472f,
 0.123410f, 0.975472f,
 0.123410f, 0.975472f,
 0.171617f, 0.919755f,
 0.171616f, 0.872795f,
 0.171616f, 0.872795f,
 0.063685f, 0.822293f,
 0.127460f, 0.821833f,
 0.127460f, 0.821833f,
 0.009284f, 0.925250f,
 0.011377f, 0.873096f,
 0.011377f, 0.873096f,
 0.739076f, 0.221742f,
 0.739076f, 0.141674f,
 0.739076f, 0.141674f,
 0.754394f, 0.836011f,
 0.674193f, 0.735873f,
 0.674193f, 0.735873f,
 0.674193f, 0.681378f,
 0.962341f, 0.792524f,
 0.962341f, 0.792524f,
 0.963051f, 0.681379f,
 0.963051f, 0.681379f,
 0.925844f, 0.681379f,
 0.259150f, 0.569083f,
 0.259150f, 0.636906f,
 0.259150f, 0.636906f,
 0.380361f, 0.700279f,
 0.540274f, 0.700278f,
 0.401400f, 0.761524f,
 0.401400f, 0.761524f,
 0.540274f, 0.700278f,
 0.519237f, 0.761523f,
 0.661484f, 0.636909f,
 0.661484f, 0.636909f,
 0.380361f, 0.700279f,
 0.380361f, 0.700279f,
 0.540274f, 0.700278f,
 0.155870f, 0.224211f,
 0.183430f, 0.224360f,
 0.183430f, 0.224360f,
 0.038682f, 0.451933f,
 0.077621f, 0.367980f,
 0.136511f, 0.452982f,
 0.136511f, 0.452982f,
 0.077621f, 0.367980f,
 0.136511f, 0.452982f,
 0.136511f, 0.452982f,
 0.184610f, 0.458992f,
 0.088251f, 0.140305f,
 0.078844f, 0.224258f,
 0.078844f, 0.224258f,
 0.155870f, 0.224211f,
 0.023590f, 0.251572f,
 0.077621f, 0.367980f,
 0.077621f, 0.367980f,
 0.088251f, 0.140305f,
 0.108145f, 0.061199f,
 0.108145f, 0.061199f,};

static float[] TextArrayB = new float[]{
 0.602870f, 0.274197f,
 0.602871f, 0.326231f,
 0.458925f, 0.272771f,
 0.458925f, 0.272771f,
 0.602871f, 0.326231f,
 0.458927f, 0.330342f,
 0.023590f, 0.251572f,
 0.196627f, 0.251865f,
 0.106931f, 0.287866f,
 0.106931f, 0.287866f,
 0.196627f, 0.251865f,
 0.145383f, 0.286830f,
 0.678594f, 0.330337f,
 0.645499f, 0.320769f,
 0.678594f, 0.272767f,
 0.678594f, 0.272767f,
 0.645499f, 0.320769f,
 0.645499f, 0.281210f,
 0.068361f, 0.059155f,
 0.017117f, 0.024190f,
 0.108145f, 0.061199f,
 0.108145f, 0.061199f,
 0.017117f, 0.024190f,
 0.176325f, 0.023903f,
 0.788493f, 0.832655f,
 0.809815f, 0.854360f,
 0.819562f, 0.990842f,
 0.809815f, 0.854360f,
 0.832127f, 0.948011f,
 0.819562f, 0.990842f,
 0.925462f, 0.862950f,
 0.920318f, 0.814883f,
 0.964216f, 0.855555f,
 0.964216f, 0.855555f,
 0.920318f, 0.814883f,
 0.962341f, 0.792524f,
 0.822878f, 0.792457f,
 0.962341f, 0.792524f,
 0.836659f, 0.814916f,
 0.962341f, 0.792524f,
 0.920318f, 0.814883f,
 0.836659f, 0.814916f,
 0.822878f, 0.792457f,
 0.809815f, 0.854360f,
 0.788493f, 0.832655f,
 0.069400f, 0.586251f,
 0.069400f, 0.680055f,
 0.015226f, 0.586251f,
 0.235609f, 0.680055f,
 0.186740f, 0.680055f,
 0.235609f, 0.586251f,
 0.235609f, 0.586251f,
 0.186740f, 0.680055f,
 0.186739f, 0.586251f,
 0.186739f, 0.586251f,
 0.130233f, 0.680055f,
 0.130233f, 0.586251f,
 0.130233f, 0.680055f,
 0.069400f, 0.680055f,
 0.130233f, 0.586251f,
 0.130233f, 0.586251f,
 0.069400f, 0.680055f,
 0.069400f, 0.586251f,
 0.235609f, 0.680055f,
 0.235609f, 0.795038f,
 0.186740f, 0.680055f,
 0.186740f, 0.680055f,
 0.235609f, 0.795038f,
 0.186740f, 0.795038f,
 0.200327f, 0.935933f,
 0.249424f, 0.933539f,
 0.201459f, 0.877993f,
 0.201459f, 0.877993f,
 0.249424f, 0.933539f,
 0.249217f, 0.874910f,
 0.301860f, 0.930908f,
 0.249424f, 0.933539f,
 0.302124f, 0.983361f,
 0.302124f, 0.983361f,
 0.249424f, 0.933539f,
 0.249642f, 0.985999f,
 0.302065f, 0.877358f,
 0.301860f, 0.930908f,
 0.353274f, 0.877965f,
 0.353274f, 0.877965f,
 0.301860f, 0.930908f,
 0.352586f, 0.930336f,
 0.250990f, 0.823806f,
 0.249217f, 0.874910f,
 0.302280f, 0.822266f,
 0.302280f, 0.822266f,
 0.249217f, 0.874910f,
 0.302065f, 0.877358f,
 0.739076f, 0.221742f,
 0.789643f, 0.221742f,
 0.739076f, 0.301810f,
 0.739076f, 0.301810f,
 0.789643f, 0.221742f,
 0.789643f, 0.334905f,};

static float[][] NormArray = new float[][]{
{ 0.159244f, -0.542855f, 0.824591f},
{ -0.076028f, 0.082844f, 0.993658f},
{ -0.024385f, -0.385065f, 0.922567f},
{ -0.213681f, 0.240549f, 0.946824f},
{ 0.223208f, 0.931008f, 0.288795f},
{ 0.223208f, 0.931008f, 0.288795f},
{ 0.223208f, 0.931008f, 0.288795f},
{ 0.223208f, 0.931008f, 0.288794f},
{ 0.071542f, 0.298073f, -0.951858f},
{ 0.112581f, 0.240262f, -0.964158f},
{ 0.117114f, 0.352030f, -0.928633f},
{ 0.129096f, 0.251276f, -0.959268f},
{ 0.000000f, -0.946364f, 0.323104f},
{ 0.000000f, -0.960351f, 0.278793f},
{ 0.000000f, 0.736146f, 0.676823f},
{ 0.000000f, 0.736147f, 0.676822f},
{ 0.119516f, 0.152642f, -0.981028f},
{ 0.094173f, 0.141310f, -0.985476f},
{ 0.921104f, -0.379702f, 0.085984f},
{ 0.972097f, -0.203248f, 0.117122f},
{ 0.922254f, -0.374685f, 0.095181f},
{ 0.982834f, -0.127262f, 0.133575f},
{ 0.010235f, -0.457767f, 0.889013f},
{ -0.048242f, -0.417393f, 0.907445f},
{ -0.094806f, 0.769557f, 0.631502f},
{ 0.222080f, 0.335703f, 0.915415f},
{ 0.545968f, 0.780086f, 0.305590f},
{ 0.447938f, 0.841462f, 0.302147f},
{ 0.473418f, 0.830698f, 0.292945f},
{ 0.437350f, 0.858917f, 0.266432f},
{ 0.140427f, 0.903607f, -0.404690f},
{ 0.174929f, 0.881963f, -0.437653f},
{ 0.148480f, 0.898798f, -0.412450f},
{ 0.285686f, 0.792959f, -0.538145f},
{ 0.269494f, -0.477160f, 0.836475f},
{ 0.348061f, -0.406008f, 0.844992f},
{ 0.338078f, -0.290131f, 0.895281f},
{ 0.381354f, -0.295245f, 0.876013f},
{ 0.949115f, -0.300789f, -0.093304f},
{ 0.949115f, -0.300789f, -0.093303f},
{ 0.949115f, -0.300789f, -0.093303f},
{ 0.949116f, -0.300789f, -0.093303f},
{ 0.350681f, 0.101720f, -0.930954f},
{ 0.388546f, 0.258633f, -0.884387f},
{ 0.403063f, 0.145336f, -0.903558f},
{ 0.424411f, 0.256367f, -0.868419f},
{ 0.335500f, -0.194534f, 0.921736f},
{ 0.265331f, -0.152285f, 0.952055f},
{ 0.956829f, 0.277604f, 0.086111f},
{ 0.956829f, 0.277603f, 0.086111f},
{ 0.956829f, 0.277604f, 0.086111f},
{ 0.956829f, 0.277604f, 0.086111f},
{ 0.379914f, 0.360438f, -0.851909f},
{ 0.312577f, 0.412966f, -0.855427f},
{ 0.023698f, -0.280730f, -0.959494f},
{ 0.029416f, -0.281678f, -0.959058f},
{ 0.044179f, -0.284083f, -0.957781f},
{ 0.055919f, -0.285951f, -0.956611f},
{ 0.967898f, 0.223606f, 0.114777f},
{ 0.963550f, 0.216990f, 0.156481f},
{ -0.097460f, -0.337516f, 0.936261f},
{ -0.059824f, -0.449526f, 0.891262f},
{ -0.950618f, -0.299771f, -0.080389f},
{ -0.986468f, -0.134805f, -0.093317f},
{ -0.952147f, -0.290003f, -0.096516f},
{ -0.983200f, -0.126637f, -0.131458f},
{ 0.097760f, 0.542266f, -0.834500f},
{ 0.057733f, 0.553598f, -0.830780f},
{ 0.010737f, 0.565640f, -0.824582f},
{ 0.000000f, 0.568201f, -0.822890f},
{ 0.994505f, 0.100238f, -0.030216f},
{ 0.994587f, 0.088591f, -0.054298f},
{ -0.018706f, -0.616161f, 0.787398f},
{ 0.000000f, -0.623047f, 0.782184f},
{ -0.998724f, 0.047144f, -0.018126f},
{ -0.999096f, 0.036252f, -0.022201f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.997819f, 0.017447f, 0.063662f},
{ 0.862197f, 0.423114f, 0.278551f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069078f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069079f},
{ -0.998095f, 0.044185f, 0.043053f},
{ -0.867985f, 0.428427f, 0.251102f},
{ -0.273013f, -0.920671f, -0.278978f},
{ -0.357104f, -0.891989f, -0.277189f},
{ -0.381927f, -0.870966f, -0.309110f},
{ -0.431727f, -0.856761f, -0.282087f},
{ 0.969846f, -0.078716f, -0.230656f},
{ 0.959415f, -0.101564f, -0.263072f},
{ 0.941835f, -0.133708f, -0.308332f},
{ 0.927172f, -0.156612f, -0.340329f},
{ 0.670147f, 0.544771f, 0.504110f},
{ 0.505479f, 0.691318f, 0.516305f},
{ 0.555464f, -0.381167f, 0.739034f},
{ 0.413860f, -0.348803f, 0.840866f},
{ 0.525931f, -0.375103f, 0.763345f},
{ 0.298076f, -0.317032f, 0.900356f},
{ -0.784311f, 0.375771f, -0.493613f},
{ -0.914784f, 0.216011f, -0.341335f},
{ 0.953967f, -0.230841f, -0.191467f},
{ 0.135079f, -0.949625f, -0.282784f},
{ 0.930259f, -0.285441f, -0.230526f},
{ -0.265274f, -0.916873f, -0.298284f},
{ 0.862279f, 0.269870f, 0.428539f},
{ -0.109389f, -0.160339f, -0.980982f},
{ 0.666953f, 0.744632f, -0.026420f},
{ -0.697343f, -0.201018f, 0.687971f},
{ -0.224670f, 0.483754f, 0.845876f},
{ -0.689151f, -0.199563f, 0.696595f},
{ -0.738805f, 0.324677f, -0.590553f},
{ -0.738805f, 0.324677f, -0.590553f},
{ -0.432481f, -0.901603f, -0.008492f},
{ -0.432481f, -0.901603f, -0.008492f},
{ 0.805806f, -0.403193f, 0.433719f},
{ 0.805806f, -0.403193f, 0.433720f},
{ 0.805806f, -0.403193f, 0.433720f},
{ 0.805805f, -0.403193f, 0.433720f},
{ 0.714592f, 0.677018f, -0.176082f},
{ 0.713126f, 0.677875f, -0.178706f},
{ 0.795869f, -0.390140f, 0.463015f},
{ 0.795869f, -0.390140f, 0.463015f},
{ 0.795869f, -0.390140f, 0.463015f},
{ 0.795869f, -0.390140f, 0.463015f},
{ 0.520473f, 0.831559f, -0.193954f},
{ 0.520473f, 0.831559f, -0.193954f},
{ 0.520473f, 0.831559f, -0.193954f},
{ 0.520473f, 0.831559f, -0.193954f},
{ -0.795869f, 0.390140f, -0.463016f},
{ -0.795869f, 0.390140f, -0.463016f},
{ -0.795869f, 0.390140f, -0.463016f},
{ -0.795869f, 0.390140f, -0.463016f},
{ -0.682817f, -0.725351f, 0.087335f},
{ -0.682817f, -0.725351f, 0.087335f},
{ -0.682817f, -0.725351f, 0.087335f},
{ -0.682817f, -0.725351f, 0.087334f},
{ 0.321843f, -0.401440f, -0.857475f},
{ 0.321843f, -0.401440f, -0.857475f},
{ 0.321843f, -0.401440f, -0.857475f},
{ 0.321844f, -0.401440f, -0.857474f},
{ 0.125893f, 0.746973f, -0.652826f},
{ 0.227094f, 0.647559f, -0.727390f},
{ 0.203879f, 0.499149f, -0.842190f},
{ 0.175329f, 0.534281f, -0.826924f},
{ 0.124034f, 0.167192f, -0.978091f},
{ -0.021666f, 0.316322f, -0.948405f},
{ -0.020092f, 0.393373f, -0.919159f},
{ 0.039638f, 0.321889f, -0.945947f},
{ -0.269608f, -0.496109f, 0.825341f},
{ -0.261592f, 0.148348f, 0.953710f},
{ -0.284183f, -0.346474f, 0.893978f},
{ -0.369460f, 0.209464f, 0.905331f},
{ -0.238679f, 0.927501f, 0.287707f},
{ -0.238672f, 0.927501f, 0.287710f},
{ -0.238677f, 0.927501f, 0.287707f},
{ -0.238668f, 0.927502f, 0.287711f},
{ 0.152477f, 0.372059f, -0.915600f},
{ -0.074189f, 0.142267f, -0.987044f},
{ -0.023721f, 0.072915f, -0.997056f},
{ -0.126089f, 0.023760f, -0.991734f},
{ 0.000000f, -0.946364f, 0.323103f},
{ 0.000000f, 0.736147f, 0.676822f},
{ 0.000000f, -0.960351f, 0.278792f},
{ 0.000000f, 0.736147f, 0.676822f},
{ -0.343017f, 0.133330f, -0.929819f},
{ -0.178977f, 0.081069f, -0.980507f},
{ -0.993772f, -0.082966f, 0.074388f},
{ -0.973551f, -0.226708f, -0.028328f},
{ -0.889071f, -0.454742f, 0.052558f},
{ -0.820051f, -0.552759f, -0.148233f},
{ -0.198418f, -0.389877f, 0.899236f},
{ -0.110778f, 0.011359f, 0.993780f},
{ -0.159401f, 0.614249f, 0.772845f},
{ -0.251014f, 0.575523f, 0.778309f},
{ -0.307426f, 0.908851f, 0.281921f},
{ -0.492395f, 0.869871f, 0.029517f},
{ -0.501790f, 0.862297f, 0.068198f},
{ -0.483313f, 0.875394f, -0.009730f},
{ -0.139810f, 0.903970f, -0.404094f},
{ -0.149923f, 0.897921f, -0.413836f},
{ -0.164846f, 0.888571f, -0.428097f},
{ -0.285686f, 0.792959f, -0.538145f},
{ -0.269494f, -0.477160f, 0.836475f},
{ -0.343892f, -0.286234f, 0.894320f},
{ -0.348061f, -0.406008f, 0.844992f},
{ -0.381405f, -0.288637f, 0.878191f},
{ -0.949116f, -0.300789f, -0.093303f},
{ -0.949116f, -0.300789f, -0.093303f},
{ -0.949115f, -0.300789f, -0.093303f},
{ -0.949115f, -0.300789f, -0.093303f},
{ -0.424442f, 0.264989f, -0.865812f},
{ -0.394327f, 0.261560f, -0.880961f},
{ -0.403063f, 0.145336f, -0.903558f},
{ -0.350681f, 0.101720f, -0.930954f},
{ -0.283282f, -0.151476f, 0.946998f},
{ -0.343035f, -0.185010f, 0.920923f},
{ -0.944819f, 0.312881f, 0.097072f},
{ -0.944822f, 0.312874f, 0.097060f},
{ -0.944821f, 0.312876f, 0.097065f},
{ -0.944825f, 0.312868f, 0.097050f},
{ -0.388432f, 0.368323f, -0.844665f},
{ -0.333029f, 0.409933f, -0.849144f},
{ 0.510783f, -0.745795f, -0.427658f},
{ 0.216047f, -0.861314f, -0.459850f},
{ 0.465830f, -0.770032f, -0.435950f},
{ 0.079438f, -0.884693f, -0.459356f},
{ -0.976566f, 0.171716f, -0.129743f},
{ -0.980895f, 0.130076f, -0.144657f},
{ -0.106170f, 0.368800f, 0.923425f},
{ 0.001469f, 0.387989f, 0.921663f},
{ 0.994210f, 0.010005f, 0.106985f},
{ 0.991310f, -0.128691f, 0.027252f},
{ 0.845584f, -0.525324f, -0.094981f},
{ 0.834407f, -0.532340f, -0.142757f},
{ 0.094902f, 0.103297f, -0.990113f},
{ 0.012231f, 0.077189f, -0.996941f},
{ 0.053259f, 0.090215f, -0.994497f},
{ 0.000000f, 0.073279f, -0.997311f},
{ -0.996342f, 0.072860f, -0.044656f},
{ -0.999315f, 0.033546f, -0.015622f},
{ -0.016617f, 0.163118f, 0.986467f},
{ 0.000000f, 0.156724f, 0.987642f},
{ 0.998828f, 0.047727f, -0.008110f},
{ 0.997135f, 0.064500f, -0.039514f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.000000f, -0.999997f, 0.002282f},
{ -0.997819f, 0.017446f, 0.063662f},
{ -0.862197f, 0.423113f, 0.278551f},
{ 0.000000f, 0.997611f, 0.069077f},
{ -0.000000f, 0.997611f, 0.069077f},
{ -0.000000f, 0.997611f, 0.069078f},
{ -0.000000f, 0.997611f, 0.069079f},
{ 0.867985f, 0.428427f, 0.251102f},
{ 0.998095f, 0.044185f, 0.043053f},
{ -0.089130f, 0.962029f, 0.257986f},
{ 0.991205f, 0.113588f, 0.067901f},
{ 0.807117f, -0.540742f, -0.236980f},
{ 0.673734f, -0.710637f, -0.202677f},
{ -0.560917f, -0.034237f, -0.827164f},
{ -0.505018f, 0.017241f, -0.862936f},
{ -0.518911f, 0.004760f, -0.854815f},
{ -0.493625f, 0.027335f, -0.869245f},
{ -0.838985f, 0.531683f, 0.115838f},
{ -0.578066f, 0.789469f, 0.206345f},
{ -0.955751f, -0.294000f, 0.010160f},
{ -0.941513f, -0.200401f, -0.270913f},
{ -0.952958f, -0.225652f, -0.202368f},
{ -0.933215f, -0.186344f, -0.307223f},
{ 0.763081f, -0.627798f, -0.153545f},
{ 0.884789f, -0.440149f, -0.153028f},
{ -0.435146f, -0.678614f, -0.591719f},
{ -0.540643f, -0.598411f, -0.591278f},
{ -0.638084f, -0.100718f, -0.763351f},
{ -0.651573f, -0.068528f, -0.755485f},
{ -0.888784f, 0.458249f, 0.008408f},
{ -0.826427f, 0.535971f, 0.172493f},
{ 0.243875f, 0.752778f, 0.611432f},
{ 0.070314f, 0.425383f, 0.902278f},
{ -0.273129f, -0.129632f, 0.953203f},
{ -0.360872f, -0.089849f, 0.928277f},
{ 0.865270f, -0.416027f, -0.279696f},
{ 0.865270f, -0.416026f, -0.279696f},
{ -0.464071f, -0.825253f, -0.321865f},
{ -0.464071f, -0.825252f, -0.321865f},
{ -0.888624f, 0.448426f, 0.096242f},
{ -0.888623f, 0.448427f, 0.096241f},
{ -0.888623f, 0.448427f, 0.096242f},
{ -0.888623f, 0.448428f, 0.096241f},
{ 0.237785f, 0.971033f, 0.023518f},
{ 0.240595f, 0.970323f, 0.024237f},
{ -0.886740f, 0.443775f, 0.129440f},
{ -0.886740f, 0.443776f, 0.129440f},
{ -0.886740f, 0.443776f, 0.129440f},
{ -0.886740f, 0.443776f, 0.129440f},
{ 0.456790f, 0.884159f, 0.098012f},
{ 0.456790f, 0.884159f, 0.098012f},
{ 0.456790f, 0.884159f, 0.098012f},
{ 0.456790f, 0.884159f, 0.098012f},
{ 0.886741f, -0.443775f, -0.129441f},
{ 0.886741f, -0.443775f, -0.129441f},
{ 0.886741f, -0.443775f, -0.129441f},
{ 0.886741f, -0.443775f, -0.129441f},
{ -0.250509f, -0.960129f, -0.124088f},
{ -0.250509f, -0.960129f, -0.124089f},
{ -0.250509f, -0.960129f, -0.124089f},
{ -0.250509f, -0.960129f, -0.124089f},
{ -0.084899f, 0.153006f, -0.984572f},
{ -0.084899f, 0.153006f, -0.984572f},
{ -0.084899f, 0.153006f, -0.984572f},
{ -0.084899f, 0.153006f, -0.984572f},
{ -0.026339f, 0.752702f, -0.657834f},
{ -0.090866f, 0.496725f, -0.863138f},
{ -0.137265f, 0.648121f, -0.749065f},
{ -0.094802f, 0.404524f, -0.909600f},
{ -0.051448f, 0.154010f, -0.986729f},
{ 0.007200f, 0.376939f, -0.926210f},
{ 0.011028f, 0.194687f, -0.980803f},
{ -0.126603f, 0.205799f, -0.970370f},
{ -0.007502f, 0.474795f, -0.880065f},
{ 0.146364f, 0.237424f, -0.960316f},
{ -0.055288f, 0.438872f, -0.896847f},
{ -0.283028f, 0.073816f, -0.956267f}};

static int[] FaceArray = new int[]{
1, 3, 0,
0, 3, 2,
20, 21, 23,
23, 21, 22,
5, 7, 4,
4, 7, 6,
32, 33, 35,
35, 33, 34,
7, 9, 6,
6, 9, 8,
104, 10, 7,
7, 10, 9,
1, 0, 105,
106, 0, 107,
3, 13, 2,
2, 13, 12,
3, 108, 13,
13, 109, 110,
111, 112, 113,
114, 115, 116,
117, 118, 16,
16, 119, 17,
120, 121, 122,
123, 124, 125,
15, 19, 14,
14, 19, 18,
17, 21, 16,
16, 21, 20,
126, 22, 127,
128, 22, 21,
18, 19, 22,
22, 19, 23,
129, 130, 24,
24, 131, 25,
132, 133, 134,
135, 136, 26,
137, 138, 139,
140, 141, 26,
142, 24, 11,
11, 24, 27,
24, 25, 28,
28, 25, 29,
26, 30, 143,
144, 30, 145,
146, 31, 26,
26, 31, 30,
27, 24, 147,
148, 24, 28,
149, 33, 150,
151, 33, 32,
152, 30, 153,
154, 30, 155,
156, 157, 34,
34, 158, 35,
28, 159, 160,
161, 162, 163,
164, 165, 166,
167, 168, 169,
170, 171, 172,
173, 174, 175,
3, 176, 177,
178, 179, 180,
3, 181, 182,
183, 184, 185,
40, 41, 36,
37, 36, 41,
38, 42, 186,
187, 42, 188,
38, 39, 42,
39, 43, 42,
43, 39, 41,
39, 37, 41,
41, 40, 45,
45, 40, 44,
42, 46, 189,
190, 46, 191,
43, 47, 42,
42, 47, 46,
41, 45, 43,
43, 45, 47,
192, 49, 193,
194, 49, 48,
195, 48, 196,
197, 48, 50,
198, 199, 51,
51, 200, 50,
201, 202, 49,
49, 203, 51,
48, 49, 50,
50, 49, 51,
204, 205, 102,
102, 206, 101,
53, 54, 99,
99, 54, 98,
0, 2, 56,
56, 2, 57,
20, 23, 58,
58, 23, 59,
4, 6, 60,
60, 6, 61,
62, 65, 63,
63, 65, 64,
8, 66, 6,
6, 66, 61,
66, 67, 61,
61, 67, 207,
56, 208, 0,
0, 209, 210,
12, 68, 2,
2, 68, 57,
68, 69, 57,
57, 69, 211,
212, 69, 213,
214, 69, 215,
216, 16, 217,
218, 16, 70,
219, 220, 221,
222, 223, 224,
71, 19, 225,
226, 19, 15,
20, 58, 16,
16, 58, 70,
58, 59, 227,
228, 59, 229,
71, 59, 19,
19, 59, 23,
230, 73, 231,
232, 73, 72,
233, 234, 235,
236, 237, 74,
74, 75, 238,
239, 75, 240,
241, 73, 242,
243, 73, 244,
73, 77, 72,
72, 77, 76,
245, 78, 246,
247, 78, 74,
74, 78, 75,
75, 78, 79,
248, 249, 73,
73, 250, 77,
83, 81, 57,
80, 85, 84,
86, 87, 82,
89, 88, 85,
85, 88, 84,
86, 90, 87,
87, 90, 91,
87, 91, 85,
85, 91, 89,
94, 95, 93,
93, 95, 92,
53, 99, 96,
96, 99, 100,
99, 98, 52,
52, 98, 55,
99, 52, 100,
100, 52, 97,
102, 101, 53,
53, 101, 54,
102, 53, 103,
103, 53, 96, };

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,
93, 94, 95,
96, 97, 98,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 350  Texture Co-ords: 202  Normals: 304  Texture: block Faces: 196 Smooth Groups: 94 sucess: 82 Doubles: 114 Redos needed: 147 Correct: 96