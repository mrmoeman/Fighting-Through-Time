package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phadeathe {

static String TextureName = "defeat";

static int Vertices = 345;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 31;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 1.763469f, -9.024695f,
 0.936363f, 1.462266f, -10.690673f,
 0.791186f, 0.292396f, -9.888242f,
 0.817567f, 0.316139f, -8.933042f,
 0.562201f, 1.479082f, -10.779567f,
 0.444292f, 0.118916f, -10.262395f,
 0.371258f, 0.264923f, -8.753763f,
 0.442211f, 1.766531f, -9.025249f,
 0.033961f, 2.043642f, -9.075350f,
 0.033961f, 1.507841f, -10.957715f,
 0.033961f, 0.089429f, -10.425488f,
 0.033961f, 0.178789f, -8.738191f,
 0.033961f, 0.722889f, -10.921022f,
 0.541219f, 0.741028f, -10.820697f,
 0.936363f, 1.262702f, -10.654710f,
 0.936363f, 1.509380f, -8.978757f,
 0.429582f, 1.444180f, -8.966969f,
 0.033961f, 1.444180f, -8.966969f,
 0.445001f, 2.000736f, -8.822452f,
 0.782250f, 2.029518f, -8.827655f,
 0.432372f, 2.070541f, -8.490694f,
 0.782250f, 2.135744f, -8.502482f,
 1.200907f, 0.474211f, -8.414442f,
 0.776421f, 1.497715f, -8.670861f,
 0.033961f, 1.455837f, -8.694126f,
 0.033961f, 0.371940f, -8.395961f,
 0.700363f, 0.557618f, -5.782472f,
 0.684600f, 1.250672f, -5.711248f,
 0.033961f, 1.421932f, -5.693656f,
 0.033961f, 0.154550f, -5.823903f,
 0.971581f, 1.665105f, -7.652636f,
 0.997360f, 0.517844f, -7.770537f,
 0.033961f, 0.380851f, -7.954988f,
 0.033961f, 1.911299f, -7.722958f,
 1.813485f, 0.902334f, -1.076884f,
 1.773931f, 3.192830f, -1.130983f,
 0.041918f, 3.674936f, -1.135853f,
 0.027975f, 0.226867f, -1.097311f,
 1.387687f, 0.537185f, -8.381672f,
 1.262182f, 1.194869f, -8.632231f,
 1.245957f, 1.510661f, -8.117871f,
 1.386100f, 0.750482f, -7.827527f,
 3.030178f, 1.226537f, -7.794807f,
 2.853776f, 1.444621f, -8.021951f,
 2.631477f, 1.548000f, -7.840787f,
 2.833564f, 1.294304f, -7.578885f,
 4.307363f, 2.567298f, -7.059036f,
 3.944071f, 3.023209f, -7.529785f,
 3.476081f, 3.163637f, -7.182851f,
 3.881355f, 2.649740f, -6.655537f,
 0.042262f, 2.383159f, -3.830637f,
 1.174792f, 2.253126f, -3.781022f,
 1.198526f, 0.975013f, -3.294677f,
 0.028512f, 0.611890f, -3.184651f,
 -0.868441f, 1.262702f, -10.654710f,
 -0.868441f, 1.509380f, -8.978757f,
 -0.749646f, 0.316139f, -8.933042f,
 -0.723264f, 0.292396f, -9.888242f,
 -0.376369f, 0.118916f, -10.262395f,
 -0.473295f, 0.741028f, -10.820697f,
 -0.303336f, 0.264923f, -8.753763f,
 -0.361660f, 1.444180f, -8.966969f,
 -0.374288f, 1.766531f, -9.025249f,
 -1.204989f, 1.763469f, -9.024695f,
 -0.868441f, 1.462266f, -10.690673f,
 -0.494279f, 1.479082f, -10.779567f,
 -0.714328f, 2.029518f, -8.827655f,
 -0.377078f, 2.000736f, -8.822452f,
 -0.364450f, 2.070541f, -8.490694f,
 -0.714328f, 2.135744f, -8.502482f,
 -0.708500f, 1.497715f, -8.670861f,
 -1.132985f, 0.474211f, -8.414442f,
 -4.329910f, 2.346187f, -6.863925f,
 -3.921667f, 2.913980f, -7.132978f,
 -3.443781f, 2.864659f, -6.774803f,
 -3.899727f, 2.225550f, -6.474719f,
 -0.903658f, 1.665105f, -7.652636f,
 -0.929437f, 0.517844f, -7.770537f,
 -0.616678f, 1.250672f, -5.711248f,
 -0.632440f, 0.557618f, -5.782472f,
 -1.092250f, 2.283245f, -3.778134f,
 -1.136280f, 0.985654f, -3.297078f,
 -1.155916f, 1.282093f, -8.439301f,
 -1.348110f, 0.596348f, -8.376903f,
 -1.284057f, 1.486280f, -7.885730f,
 -1.501687f, 0.693217f, -7.811565f,
 -2.988606f, 1.558762f, -8.235562f,
 -3.186507f, 1.286636f, -8.104965f,
 -2.758097f, 1.562575f, -8.036124f,
 -2.985196f, 1.246634f, -7.886456f,
 -1.693993f, 3.202677f, -1.130437f,
 -1.752370f, 0.911552f, -1.081574f,
 3.237758f, 2.602375f, -7.384305f,
 3.553320f, 2.455624f, -7.641475f,
 3.803732f, 2.146043f, -7.319033f,
 3.524629f, 2.242242f, -7.012523f,
 -3.260525f, 2.406824f, -7.186142f,
 -3.582903f, 1.958331f, -6.973681f,
 -3.868672f, 2.015116f, -7.283864f,
 -3.587742f, 2.401412f, -7.469254f,
 2.667583f, 0.993568f, 0.250072f,
 2.282885f, 1.665418f, 0.201979f,
 3.452000f, -0.047018f, -9.890573f,
 2.032300f, 1.600441f, -9.990822f,
 2.898753f, 0.535247f, -8.001713f,
 2.514056f, 1.207097f, -8.049806f,
 0.791186f, 0.292396f, -9.888242f,
 0.791186f, 0.292396f, -9.888242f,
 0.936363f, 1.262702f, -10.654710f,
 0.817567f, 0.316139f, -8.933042f,
 0.371258f, 0.264923f, -8.753763f,
 0.791186f, 0.292396f, -9.888242f,
 0.791186f, 0.292396f, -9.888242f,
 0.371258f, 0.264923f, -8.753763f,
 0.371258f, 0.264923f, -8.753763f,
 0.033961f, 1.507841f, -10.957715f,
 0.033961f, 1.507841f, -10.957715f,
 0.562201f, 1.479082f, -10.779567f,
 0.562201f, 1.479082f, -10.779567f,
 0.936363f, 1.262702f, -10.654710f,
 0.936363f, 1.262702f, -10.654710f,
 0.562201f, 1.479082f, -10.779567f,
 0.936363f, 1.462266f, -10.690673f,
 1.272911f, 1.763469f, -9.024695f,
 0.936363f, 1.462266f, -10.690673f,
 0.936363f, 1.462266f, -10.690673f,
 0.429582f, 1.444180f, -8.966969f,
 0.442211f, 1.766531f, -9.025249f,
 0.442211f, 1.766531f, -9.025249f,
 0.033961f, 2.043642f, -9.075350f,
 0.442211f, 1.766531f, -9.025249f,
 0.445001f, 2.000736f, -8.822452f,
 0.445001f, 2.000736f, -8.822452f,
 0.432372f, 2.070541f, -8.490694f,
 0.432372f, 2.070541f, -8.490694f,
 0.432372f, 2.070541f, -8.490694f,
 0.782250f, 2.135744f, -8.502482f,
 1.272911f, 1.763469f, -9.024695f,
 0.782250f, 2.029518f, -8.827655f,
 0.782250f, 2.029518f, -8.827655f,
 0.782250f, 2.135744f, -8.502482f,
 0.429582f, 1.444180f, -8.966969f,
 0.776421f, 1.497715f, -8.670861f,
 0.371258f, 0.264923f, -8.753763f,
 0.371258f, 0.264923f, -8.753763f,
 0.776421f, 1.497715f, -8.670861f,
 1.200907f, 0.474211f, -8.414442f,
 0.033961f, 1.455837f, -8.694126f,
 0.429582f, 1.444180f, -8.966969f,
 0.429582f, 1.444180f, -8.966969f,
 0.033961f, 1.455837f, -8.694126f,
 0.776421f, 1.497715f, -8.670861f,
 0.033961f, 0.178789f, -8.738191f,
 0.371258f, 0.264923f, -8.753763f,
 0.033961f, 0.371940f, -8.395961f,
 0.033961f, 0.371940f, -8.395961f,
 0.371258f, 0.264923f, -8.753763f,
 1.200907f, 0.474211f, -8.414442f,
 0.971581f, 1.665105f, -7.652636f,
 0.971581f, 1.665105f, -7.652636f,
 0.684600f, 1.250672f, -5.711248f,
 0.700363f, 0.557618f, -5.782472f,
 0.684600f, 1.250672f, -5.711248f,
 0.684600f, 1.250672f, -5.711248f,
 1.174792f, 2.253126f, -3.781022f,
 0.033961f, 1.421932f, -5.693656f,
 0.684600f, 1.250672f, -5.711248f,
 0.684600f, 1.250672f, -5.711248f,
 0.033961f, 0.154550f, -5.823903f,
 0.700363f, 0.557618f, -5.782472f,
 0.700363f, 0.557618f, -5.782472f,
 0.776421f, 1.497715f, -8.670861f,
 1.200907f, 0.474211f, -8.414442f,
 1.200907f, 0.474211f, -8.414442f,
 0.971581f, 1.665105f, -7.652636f,
 0.776421f, 1.497715f, -8.670861f,
 0.776421f, 1.497715f, -8.670861f,
 0.997360f, 0.517844f, -7.770537f,
 0.971581f, 1.665105f, -7.652636f,
 0.971581f, 1.665105f, -7.652636f,
 1.245957f, 1.510661f, -8.117871f,
 0.997360f, 0.517844f, -7.770537f,
 1.200907f, 0.474211f, -8.414442f,
 1.200907f, 0.474211f, -8.414442f,
 1.245957f, 1.510661f, -8.117871f,
 2.631477f, 1.548000f, -7.840787f,
 2.631477f, 1.548000f, -7.840787f,
 2.631477f, 1.548000f, -7.840787f,
 3.237758f, 2.602375f, -7.384305f,
 3.237758f, 2.602375f, -7.384305f,
 1.174792f, 2.253126f, -3.781022f,
 1.174792f, 2.253126f, -3.781022f,
 1.773931f, 3.192830f, -1.130983f,
 -0.868441f, 1.262702f, -10.654710f,
 -0.723264f, 0.292396f, -9.888242f,
 -0.723264f, 0.292396f, -9.888242f,
 -0.749646f, 0.316139f, -8.933042f,
 -0.723264f, 0.292396f, -9.888242f,
 -0.303336f, 0.264923f, -8.753763f,
 -0.303336f, 0.264923f, -8.753763f,
 -0.723264f, 0.292396f, -9.888242f,
 -0.303336f, 0.264923f, -8.753763f,
 -0.494279f, 1.479082f, -10.779567f,
 0.033961f, 1.507841f, -10.957715f,
 0.033961f, 1.507841f, -10.957715f,
 -0.868441f, 1.462266f, -10.690673f,
 -0.494279f, 1.479082f, -10.779567f,
 -0.868441f, 1.262702f, -10.654710f,
 -0.868441f, 1.262702f, -10.654710f,
 -0.494279f, 1.479082f, -10.779567f,
 -0.868441f, 1.462266f, -10.690673f,
 -0.868441f, 1.462266f, -10.690673f,
 -1.204989f, 1.763469f, -9.024695f,
 0.033961f, 2.043642f, -9.075350f,
 -0.374288f, 1.766531f, -9.025249f,
 -0.374288f, 1.766531f, -9.025249f,
 -0.361660f, 1.444180f, -8.966969f,
 -0.374288f, 1.766531f, -9.025249f,
 -0.377078f, 2.000736f, -8.822452f,
 -0.377078f, 2.000736f, -8.822452f,
 -0.364450f, 2.070541f, -8.490694f,
 -0.364450f, 2.070541f, -8.490694f,
 -0.364450f, 2.070541f, -8.490694f,
 -0.714328f, 2.135744f, -8.502482f,
 -0.714328f, 2.135744f, -8.502482f,
 -0.714328f, 2.029518f, -8.827655f,
 -0.714328f, 2.029518f, -8.827655f,
 -1.204989f, 1.763469f, -9.024695f,
 -1.132985f, 0.474211f, -8.414442f,
 -0.708500f, 1.497715f, -8.670861f,
 -0.303336f, 0.264923f, -8.753763f,
 -0.303336f, 0.264923f, -8.753763f,
 -0.708500f, 1.497715f, -8.670861f,
 -0.361660f, 1.444180f, -8.966969f,
 -0.708500f, 1.497715f, -8.670861f,
 0.033961f, 1.455837f, -8.694126f,
 -0.361660f, 1.444180f, -8.966969f,
 -0.361660f, 1.444180f, -8.966969f,
 0.033961f, 1.455837f, -8.694126f,
 0.033961f, 0.178789f, -8.738191f,
 0.033961f, 0.371940f, -8.395961f,
 -0.303336f, 0.264923f, -8.753763f,
 -0.303336f, 0.264923f, -8.753763f,
 0.033961f, 0.371940f, -8.395961f,
 -1.132985f, 0.474211f, -8.414442f,
 -0.903658f, 1.665105f, -7.652636f,
 -0.903658f, 1.665105f, -7.652636f,
 -0.616678f, 1.250672f, -5.711248f,
 -0.632440f, 0.557618f, -5.782472f,
 -0.616678f, 1.250672f, -5.711248f,
 -0.616678f, 1.250672f, -5.711248f,
 -1.092250f, 2.283245f, -3.778134f,};

static float VertArrayB[] = new float[]{
 -1.092250f, 2.283245f, -3.778134f,
 0.042262f, 2.383159f, -3.830637f,
 -0.616678f, 1.250672f, -5.711248f,
 -0.616678f, 1.250672f, -5.711248f,
 0.042262f, 2.383159f, -3.830637f,
 0.033961f, 1.421932f, -5.693656f,
 0.033961f, 0.154550f, -5.823903f,
 0.028512f, 0.611890f, -3.184651f,
 -0.632440f, 0.557618f, -5.782472f,
 -0.632440f, 0.557618f, -5.782472f,
 0.028512f, 0.611890f, -3.184651f,
 -1.136280f, 0.985654f, -3.297078f,
 -1.348110f, 0.596348f, -8.376903f,
 -1.155916f, 1.282093f, -8.439301f,
 -1.132985f, 0.474211f, -8.414442f,
 -1.132985f, 0.474211f, -8.414442f,
 -1.155916f, 1.282093f, -8.439301f,
 -0.708500f, 1.497715f, -8.670861f,
 -0.708500f, 1.497715f, -8.670861f,
 -1.155916f, 1.282093f, -8.439301f,
 -0.903658f, 1.665105f, -7.652636f,
 -0.903658f, 1.665105f, -7.652636f,
 -1.155916f, 1.282093f, -8.439301f,
 -1.284057f, 1.486280f, -7.885730f,
 -0.903658f, 1.665105f, -7.652636f,
 -1.284057f, 1.486280f, -7.885730f,
 -0.929437f, 0.517844f, -7.770537f,
 -0.929437f, 0.517844f, -7.770537f,
 -1.284057f, 1.486280f, -7.885730f,
 -1.501687f, 0.693217f, -7.811565f,
 -0.929437f, 0.517844f, -7.770537f,
 -1.501687f, 0.693217f, -7.811565f,
 -1.132985f, 0.474211f, -8.414442f,
 -1.132985f, 0.474211f, -8.414442f,
 -1.501687f, 0.693217f, -7.811565f,
 -1.348110f, 0.596348f, -8.376903f,
 -2.988606f, 1.558762f, -8.235562f,
 -2.758097f, 1.562575f, -8.036124f,
 -1.155916f, 1.282093f, -8.439301f,
 -1.155916f, 1.282093f, -8.439301f,
 -2.758097f, 1.562575f, -8.036124f,
 -1.284057f, 1.486280f, -7.885730f,
 -3.260525f, 2.406824f, -7.186142f,
 -2.758097f, 1.562575f, -8.036124f,
 -3.587742f, 2.401412f, -7.469254f,
 -3.587742f, 2.401412f, -7.469254f,
 -2.758097f, 1.562575f, -8.036124f,
 -2.988606f, 1.558762f, -8.235562f,
 -1.136280f, 0.985654f, -3.297078f,
 -1.752370f, 0.911552f, -1.081574f,
 -1.092250f, 2.283245f, -3.778134f,
 -1.092250f, 2.283245f, -3.778134f,
 -1.752370f, 0.911552f, -1.081574f,
 -1.693993f, 3.202677f, -1.130437f,
 3.803732f, 2.146043f, -7.319033f,
 3.944071f, 3.023209f, -7.529785f,
 4.307363f, 2.567298f, -7.059036f,
 3.524629f, 2.242242f, -7.012523f,
 3.803732f, 2.146043f, -7.319033f,
 3.881355f, 2.649740f, -6.655537f,
 3.881355f, 2.649740f, -6.655537f,
 3.803732f, 2.146043f, -7.319033f,
 4.307363f, 2.567298f, -7.059036f,
 3.237758f, 2.602375f, -7.384305f,
 3.524629f, 2.242242f, -7.012523f,
 3.476081f, 3.163637f, -7.182851f,
 3.476081f, 3.163637f, -7.182851f,
 3.524629f, 2.242242f, -7.012523f,
 3.881355f, 2.649740f, -6.655537f,
 -3.582903f, 1.958331f, -6.973681f,
 -3.443781f, 2.864659f, -6.774803f,
 -3.899727f, 2.225550f, -6.474719f,
 -3.582903f, 1.958331f, -6.973681f,
 -3.899727f, 2.225550f, -6.474719f,
 -3.868672f, 2.015116f, -7.283864f,
 -3.868672f, 2.015116f, -7.283864f,
 -3.899727f, 2.225550f, -6.474719f,
 -4.329910f, 2.346187f, -6.863925f,
 -3.587742f, 2.401412f, -7.469254f,
 -3.868672f, 2.015116f, -7.283864f,
 -3.921667f, 2.913980f, -7.132978f,
 -3.921667f, 2.913980f, -7.132978f,
 -3.868672f, 2.015116f, -7.283864f,
 -4.329910f, 2.346187f, -6.863925f,
 -3.587742f, 2.401412f, -7.469254f,
 -3.921667f, 2.913980f, -7.132978f,
 -3.260525f, 2.406824f, -7.186142f,
 2.667583f, 0.993568f, 0.250072f,
 2.282885f, 1.665418f, 0.201979f,
 2.898753f, 0.535247f, -8.001713f,
 2.898753f, 0.535247f, -8.001713f,
 2.282885f, 1.665418f, 0.201979f,
 2.514056f, 1.207097f, -8.049806f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.878348f, 0.646869f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.730977f, 0.646869f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.425500f, 0.583551f,
 0.490451f, 0.415698f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.049042f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.791908f, 0.583549f,
 0.726955f, 0.415697f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,};

static float[] TextArrayB = new float[]{
 0.230576f, 0.348630f,
 0.340574f, 0.348630f,
 0.277434f, 0.584799f,
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.817124f, 0.248044f,
 0.853660f, 0.094340f,
 0.900004f, 0.283013f,
 0.900004f, 0.283013f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, -0.176311f, -0.223109f},
{ 0.826605f, -0.387751f, 0.407888f},
{ 0.904768f, -0.423885f, -0.041429f},
{ 0.857718f, -0.348989f, 0.377526f},
{ 0.363846f, -0.906201f, -0.215443f},
{ 0.549456f, -0.396832f, -0.735270f},
{ 0.485921f, -0.873480f, 0.030223f},
{ 0.520280f, 0.045664f, 0.852774f},
{ 0.517275f, 0.841500f, -0.155900f},
{ 0.414372f, 0.879690f, -0.233326f},
{ 0.188090f, 0.978343f, -0.086413f},
{ 0.238558f, 0.841269f, -0.485135f},
{ -0.000000f, 0.799809f, -0.600254f},
{ -0.000000f, 0.999215f, 0.039623f},
{ 0.000000f, -0.943782f, -0.330568f},
{ -0.000000f, -0.344785f, -0.938682f},
{ 0.000000f, -0.984702f, 0.174247f},
{ 0.453144f, 0.750200f, -0.481519f},
{ -0.760936f, 0.548427f, -0.346706f},
{ 0.383688f, -0.180292f, 0.905692f},
{ -0.216589f, -0.330033f, 0.918786f},
{ 0.000000f, 0.602201f, 0.798345f},
{ 0.358910f, 0.613595f, -0.703338f},
{ 0.360073f, -0.706685f, -0.609051f},
{ 0.000000f, 0.928431f, -0.371504f},
{ 0.000000f, -0.983976f, 0.178299f},
{ 0.995083f, -0.087465f, 0.046481f},
{ 0.558252f, 0.641894f, -0.525668f},
{ 0.027491f, 0.203474f, 0.978694f},
{ -0.383604f, 0.887851f, 0.254105f},
{ 0.000000f, 0.998001f, 0.063192f},
{ 0.704860f, 0.686661f, 0.177960f},
{ 0.687058f, -0.712112f, 0.144388f},
{ 0.000000f, -0.996809f, -0.079822f},
{ 0.809558f, -0.582078f, 0.076165f},
{ 0.848158f, 0.507932f, -0.150443f},
{ 0.000366f, -0.994953f, 0.100344f},
{ -0.000264f, 0.993710f, -0.111982f},
{ 0.757778f, -0.630294f, -0.168824f},
{ 0.749092f, 0.515713f, -0.415814f},
{ 0.010864f, 0.891322f, -0.453241f},
{ -0.004540f, -0.999366f, -0.035327f},
{ 0.268655f, 0.195000f, -0.943292f},
{ 0.442096f, -0.733120f, -0.516804f},
{ 0.235893f, 0.950064f, 0.204287f},
{ 0.210930f, -0.410824f, 0.886979f},
{ 0.367005f, 0.036424f, -0.929506f},
{ 0.640614f, -0.731580f, -0.233248f},
{ -0.508770f, 0.747922f, 0.426340f},
{ -0.207688f, -0.299041f, 0.931365f},
{ 0.220130f, 0.145039f, -0.964628f},
{ 0.753468f, -0.623515f, -0.208600f},
{ -0.898330f, 0.436496f, 0.049754f},
{ -0.403292f, -0.290282f, 0.867809f},
{ 0.004041f, 0.920166f, -0.391508f},
{ 0.761964f, 0.536623f, -0.362557f},
{ 0.860053f, -0.457295f, -0.226252f},
{ -0.002448f, -0.988991f, -0.147954f},
{ -0.958716f, -0.176311f, -0.223110f},
{ -0.904768f, -0.423886f, -0.041429f},
{ -0.826605f, -0.387751f, 0.407888f},
{ -0.857718f, -0.348990f, 0.377526f},
{ -0.549455f, -0.396832f, -0.735271f},
{ -0.363846f, -0.906201f, -0.215444f},
{ -0.485921f, -0.873480f, 0.030223f},
{ -0.520280f, 0.045663f, 0.852774f},
{ -0.238558f, 0.841269f, -0.485135f},
{ -0.414372f, 0.879690f, -0.233325f},
{ -0.188090f, 0.978343f, -0.086412f},
{ -0.517273f, 0.841501f, -0.155900f},
{ -0.453143f, 0.750200f, -0.481520f},
{ -0.383689f, -0.180291f, 0.905692f},
{ 0.760937f, 0.548426f, -0.346704f},
{ 0.216588f, -0.330033f, 0.918786f},
{ -0.391249f, -0.696568f, -0.601429f},
{ -0.419046f, 0.611150f, -0.671488f},
{ -0.999069f, -0.006943f, 0.042589f},
{ -0.011935f, -0.192045f, 0.981314f},
{ -0.490460f, 0.844198f, -0.216285f},
{ 0.467360f, 0.679584f, 0.565456f},
{ -0.705711f, 0.683545f, 0.186380f},
{ -0.677340f, -0.716735f, 0.165838f},
{ -0.809925f, -0.581671f, 0.075367f},
{ -0.847798f, 0.508053f, -0.152058f},
{ -0.768913f, -0.616098f, -0.170868f},
{ -0.739881f, 0.526835f, -0.418354f},
{ -0.312242f, -0.559171f, -0.768006f},
{ -0.252720f, 0.423454f, -0.869954f},
{ -0.187393f, 0.720628f, 0.667517f},
{ -0.281217f, -0.553937f, 0.783627f},
{ -0.622514f, -0.533288f, -0.572782f},
{ -0.211927f, 0.220866f, -0.952001f},
{ 0.407175f, 0.729693f, 0.549324f},
{ 0.081487f, -0.557270f, 0.826323f},
{ -0.200507f, 0.528706f, -0.824783f},
{ -0.809829f, -0.421095f, -0.408479f},
{ 0.936445f, 0.298244f, 0.184718f},
{ 0.369041f, -0.640934f, 0.673062f},
{ -0.760184f, 0.540536f, -0.360473f},
{ -0.862476f, -0.450844f, -0.229948f},
{ -0.867056f, -0.497842f, -0.019150f},
{ -0.841422f, -0.540313f, 0.008467f},
{ -0.771317f, -0.635209f, 0.039751f},
{ -0.758017f, -0.649787f, 0.056460f},
{ -0.867904f, -0.496722f, 0.003275f},
{ -0.867904f, -0.496722f, 0.003275f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
31, 158, 26,
26, 159, 160,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 27,
161, 162, 52,
52, 163, 164,
165, 50, 166,
167, 50, 51,
168, 169, 53,
53, 170, 52,
171, 39, 172,
173, 39, 38,
174, 40, 175,
176, 40, 39,
177, 41, 178,
179, 41, 180,
181, 182, 41,
41, 183, 38,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
184, 41, 185,
186, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
187, 45, 188,
189, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
52, 190, 34,
34, 191, 192,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
193, 59, 194,
195, 59, 58,
196, 197, 198,
199, 200, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 201,
202, 203, 59,
59, 204, 12,
205, 206, 207,
208, 209, 59,
54, 55, 210,
211, 55, 212,
66, 69, 67,
67, 69, 68,
213, 214, 17,
17, 215, 216,
63, 66, 62,
62, 66, 67,
217, 218, 61,
61, 219, 220,
61, 221, 55,
55, 222, 223,
224, 225, 55,
55, 226, 227,
228, 229, 230,
231, 232, 233,
234, 235, 236,
237, 238, 17,
239, 240, 241,
242, 243, 244,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
77, 79, 245,
246, 79, 247,
32, 29, 77,
77, 29, 79,
78, 28, 76,
76, 28, 33,
248, 81, 249,
250, 81, 251,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 345  Texture Co-ords: 191  Normals: 106  Texture: defeat Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 146 Correct: 82