package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class luchador {

static String TextureName = "New";

static int Vertices = 197;

static int VertTexts = 202;

static int Normals = 304;

static int Faces = 98;

static int FacesB = 0;

static int SmoothGroups = 86;

static float VertArray[] = new float[]{
 0.078843f, 9.807669f, 1.747018f,
 2.574045f, 9.807669f, 1.220696f,
 0.078843f, 11.617988f, 1.360223f,
 2.574045f, 11.617988f, 1.045883f,
 0.078843f, 11.707492f, -2.171951f,
 2.571770f, 11.707492f, -2.171951f,
 0.078843f, 9.852667f, -2.421013f,
 2.574045f, 9.807669f, -2.083741f,
 0.078843f, 7.045689f, -2.083741f,
 1.303379f, 7.045689f, -2.083741f,
 1.303379f, 7.045689f, 0.436329f,
 0.078843f, 7.045689f, 0.436329f,
 0.078843f, 12.204853f, 0.645656f,
 1.085087f, 12.204853f, 0.357258f,
 1.085087f, 12.204853f, -1.391015f,
 0.078843f, 12.204853f, -1.774865f,
 0.078843f, 13.429240f, 0.916391f,
 1.491354f, 13.429240f, 0.333517f,
 1.491354f, 13.429240f, -1.350684f,
 0.078843f, 13.429240f, -2.012818f,
 0.078843f, 15.162252f, 0.668328f,
 1.031165f, 14.944185f, 0.434797f,
 1.031165f, 14.944185f, -1.468555f,
 0.078843f, 15.162252f, -1.752712f,
 0.919998f, 4.082804f, -1.063905f,
 1.948099f, 4.082804f, -1.063905f,
 1.948099f, 4.082804f, 0.189962f,
 0.919998f, 4.082804f, 0.189962f,
 0.733040f, -0.025459f, -2.479022f,
 2.545638f, -0.025459f, -2.479022f,
 2.545638f, 1.291012f, -0.331089f,
 0.733078f, 1.291012f, -0.331089f,
 0.778096f, -0.015118f, 2.053026f,
 2.416366f, -0.015118f, 2.053026f,
 2.244411f, 1.218862f, 0.710888f,
 0.998903f, 1.218862f, 0.710888f,
 3.041245f, 9.710748f, -1.217926f,
 3.055556f, 9.692354f, 0.859696f,
 3.041490f, 11.179349f, -1.204926f,
 3.054161f, 11.163063f, 0.634671f,
 4.451949f, 9.063467f, -0.841731f,
 4.456507f, 9.057610f, -0.180201f,
 4.969691f, 9.558881f, -0.840911f,
 4.973038f, 9.554579f, -0.354869f,
 5.669048f, 7.374972f, -1.353665f,
 5.678946f, 7.362250f, 0.083405f,
 6.468996f, 8.140422f, -1.352398f,
 6.477174f, 8.129909f, -0.164985f,
 6.633516f, 6.398314f, -1.368954f,
 6.643414f, 6.385592f, 0.068116f,
 7.433462f, 7.163764f, -1.367687f,
 7.441641f, 7.153252f, -0.180275f,
 0.078843f, 1.374928f, -3.920667f,
 0.078843f, 7.464554f, -3.367929f,
 4.632588f, 7.464556f, -3.608208f,
 6.563060f, 1.374927f, -3.603635f,
 -2.416360f, 9.807669f, 1.220696f,
 -2.416360f, 11.617988f, 1.045883f,
 -0.808397f, 14.944185f, 0.434797f,
 -0.808432f, 14.944185f, -1.468555f,
 -2.414085f, 11.707492f, -2.171951f,
 -2.416360f, 9.807669f, -2.083741f,
 -0.620411f, -0.015118f, 2.053026f,
 -2.258681f, -0.015118f, 2.053026f,
 -2.086726f, 1.218862f, 0.710888f,
 -0.841217f, 1.218862f, 0.710888f,
 -1.145693f, 7.045689f, -2.083741f,
 -1.145693f, 7.045689f, 0.436329f,
 -0.927402f, 12.204853f, 0.357258f,
 -0.927402f, 12.204853f, -1.391015f,
 -1.333669f, 13.429240f, 0.333517f,
 -1.333669f, 13.429240f, -1.350684f,
 -1.790414f, 4.082804f, -1.063905f,
 -0.762312f, 4.082804f, -1.063905f,
 -1.790414f, 4.082804f, 0.189962f,
 -0.762312f, 4.082804f, 0.189962f,
 -2.387953f, -0.025459f, -2.479022f,
 -0.575354f, -0.025459f, -2.479022f,
 -2.387953f, 1.291012f, -0.331089f,
 -0.575393f, 1.291012f, -0.331089f,
 -2.905393f, 9.688157f, -1.178402f,
 -2.884231f, 9.709556f, 0.899132f,
 -2.904466f, 11.156738f, -1.193538f,
 -2.885729f, 11.175685f, 0.645981f,
 -4.296734f, 9.058811f, -0.772093f,
 -4.304903f, 9.054830f, -0.110583f,
 -4.814536f, 9.554152f, -0.775506f,
 -4.820537f, 9.551228f, -0.289479f,
 -5.510806f, 7.368698f, -1.285870f,
 -5.528548f, 7.360051f, 0.151155f,
 -6.310847f, 8.134034f, -1.291142f,
 -6.325507f, 8.126889f, -0.103767f,
 -6.492796f, 6.383216f, 0.133372f,
 -6.475054f, 6.391863f, -1.303652f,
 -7.275093f, 7.157200f, -1.308925f,
 -7.289753f, 7.150055f, -0.121550f,
 -4.474903f, 7.464556f, -3.608208f,
 -6.078575f, 1.374927f, -3.603635f,
 5.597824f, 4.419742f, -3.605921f,
 0.078843f, 4.419741f, -3.644298f,
 -5.276739f, 4.419742f, -3.605921f,
 3.602179f, 9.586024f, -2.890079f,
 0.078843f, 9.586023f, -2.769940f,
 -3.444494f, 9.586024f, -2.890079f,
 2.574045f, 9.807669f, 1.220696f,
 2.571770f, 11.707492f, -2.171951f,
 1.085087f, 12.204853f, -1.391015f,
 2.571770f, 11.707492f, -2.171951f,
 0.078843f, 11.707492f, -2.171951f,
 0.078843f, 12.204853f, -1.774865f,
 0.078843f, 12.204853f, 0.645656f,
 1.085087f, 12.204853f, 0.357258f,
 1.085087f, 12.204853f, 0.357258f,
 1.085087f, 12.204853f, -1.391015f,
 1.491354f, 13.429240f, -1.350684f,
 1.491354f, 13.429240f, 0.333517f,
 1.491354f, 13.429240f, -1.350684f,
 0.078843f, 7.045689f, -2.083741f,
 1.303379f, 7.045689f, -2.083741f,
 1.303379f, 7.045689f, -2.083741f,
 1.303379f, 7.045689f, 0.436329f,
 1.303379f, 7.045689f, 0.436329f,
 0.078843f, 7.045689f, 0.436329f,
 0.078843f, 7.045689f, 0.436329f,
 0.078843f, 7.045689f, -2.083741f,
 1.948099f, 4.082804f, -1.063905f,
 0.919998f, 4.082804f, 0.189962f,
 0.733040f, -0.025459f, -2.479022f,
 2.545638f, -0.025459f, -2.479022f,
 2.545638f, -0.025459f, -2.479022f,
 2.244411f, 1.218862f, 0.710888f,
 2.545638f, 1.291012f, -0.331089f,
 0.733078f, 1.291012f, -0.331089f,
 0.733078f, 1.291012f, -0.331089f,
 0.778096f, -0.015118f, 2.053026f,
 2.574045f, 9.807669f, 1.220696f,
 2.574045f, 9.807669f, -2.083741f,
 3.041245f, 9.710748f, -1.217926f,
 2.574045f, 9.807669f, -2.083741f,
 2.571770f, 11.707492f, -2.171951f,
 3.041490f, 11.179349f, -1.204926f,
 2.571770f, 11.707492f, -2.171951f,
 3.054161f, 11.163063f, 0.634671f,
 2.574045f, 9.807669f, 1.220696f,
 3.055556f, 9.692354f, 0.859696f,
 3.041245f, 9.710748f, -1.217926f,
 4.451949f, 9.063467f, -0.841731f,
 5.669048f, 7.374972f, -1.353665f,
 5.678946f, 7.362250f, 0.083405f,
 6.468996f, 8.140422f, -1.352398f,
 5.669048f, 7.374972f, -1.353665f,
 6.477174f, 8.129909f, -0.164985f,
 6.468996f, 8.140422f, -1.352398f,
 5.678946f, 7.362250f, 0.083405f,
 6.477174f, 8.129909f, -0.164985f,
 0.078843f, 11.707492f, -2.171951f,
 2.571770f, 11.707492f, -2.171951f,
 -2.416360f, 9.807669f, 1.220696f,
 -1.145693f, 7.045689f, 0.436329f,
 0.078843f, 12.204853f, -1.774865f,
 0.078843f, 12.204853f, 0.645656f,
 -1.333669f, 13.429240f, 0.333517f,
 -0.927402f, 12.204853f, 0.357258f,
 -1.333669f, 13.429240f, -1.350684f,
 -0.927402f, 12.204853f, -1.391015f,
 0.078843f, 7.045689f, -2.083741f,
 -1.145693f, 7.045689f, -2.083741f,
 -1.790414f, 4.082804f, -1.063905f,
 -1.145693f, 7.045689f, 0.436329f,
 0.078843f, 7.045689f, 0.436329f,
 -0.762312f, 4.082804f, 0.189962f,
 -1.790414f, 4.082804f, -1.063905f,
 -2.387953f, -0.025459f, -2.479022f,
 -0.762312f, 4.082804f, 0.189962f,
 -0.575393f, 1.291012f, -0.331089f,
 -0.575354f, -0.025459f, -2.479022f,
 -2.387953f, -0.025459f, -2.479022f,
 -2.258681f, -0.015118f, 2.053026f,
 -2.086726f, 1.218862f, 0.710888f,
 -2.387953f, 1.291012f, -0.331089f,
 -0.575393f, 1.291012f, -0.331089f,
 -0.841217f, 1.218862f, 0.710888f,
 -0.620411f, -0.015118f, 2.053026f,
 -2.416360f, 9.807669f, -2.083741f,
 -2.905393f, 9.688157f, -1.178402f,
 -2.884231f, 9.709556f, 0.899132f,
 -2.905393f, 9.688157f, -1.178402f,
 -4.296734f, 9.058811f, -0.772093f,
 -2.904466f, 11.156738f, -1.193538f,
 -2.885729f, 11.175685f, 0.645981f,
 -4.296734f, 9.058811f, -0.772093f,
 -5.510806f, 7.368698f, -1.285870f,
 -5.510806f, 7.368698f, -1.285870f,
 -6.310847f, 8.134034f, -1.291142f,
 -6.325507f, 8.126889f, -0.103767f,
 -5.528548f, 7.360051f, 0.151155f,
 0.078843f, 11.707492f, -2.171951f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.765412f, 0.681378f,
 0.765412f, 0.570335f,
 0.825201f, 0.681378f,
 0.822879f, 0.570299f,
 0.542473f, 0.970289f,
 0.447291f, 0.970289f,
 0.542473f, 0.916457f,
 0.449024f, 0.913521f,
 0.542473f, 0.838197f,
 0.493899f, 0.841133f,
 0.410299f, 0.793373f,
 0.674193f, 0.681378f,
 0.847778f, 0.681378f,
 0.850454f, 0.639527f,
 0.661488f, 0.501265f,
 0.661486f, 0.569087f,
 0.322042f, 0.569516f,
 0.320395f, 0.473878f,
 0.600243f, 0.473879f,
 0.599213f, 0.569510f,
 0.408358f, 0.569764f,
 0.396173f, 0.513666f,
 0.524463f, 0.513667f,
 0.513269f, 0.569764f,
 0.324047f, 0.138784f,
 0.268283f, 0.138970f,
 0.281315f, 0.363513f,
 0.243753f, 0.367658f,
 0.300356f, 0.022362f,
 0.244979f, 0.022659f,
 0.298407f, 0.283420f,
 0.228262f, 0.289756f,
 0.700544f, 0.421993f,
 0.700544f, 0.369959f,
 0.743172f, 0.375421f,
 0.743172f, 0.414980f,
 0.711360f, 0.038998f,
 0.662490f, 0.038998f,
 0.545151f, 0.038998f,
 0.605984f, 0.038998f,
 0.711360f, 0.146332f,
 0.662490f, 0.146332f,
 0.545151f, 0.146332f,
 0.605984f, 0.146332f,
 0.711360f, 0.247785f,
 0.662490f, 0.247785f,
 0.545151f, 0.247785f,
 0.605984f, 0.247785f,
 0.123410f, 0.926820f,
 0.064457f, 0.926366f,
 0.124920f, 0.870927f,
 0.064167f, 0.871384f,
 0.985361f, 0.221742f,
 0.840209f, 0.221742f,
 0.840209f, 0.075484f,
 0.985361f, 0.013481f,
 0.788493f, 0.832655f,
 0.822878f, 0.792457f,
 0.396173f, 0.624501f,
 0.524462f, 0.624500f,
 0.962341f, 0.792524f,
 0.635921f, 0.913521f,
 0.602870f, 0.274197f,
 0.602871f, 0.326231f,
 0.645499f, 0.320769f,
 0.645499f, 0.281210f,
 0.591046f, 0.841133f,
 0.674644f, 0.793372f,
 0.850454f, 0.723230f,
 0.925844f, 0.723230f,
 0.380361f, 0.700279f,
 0.600238f, 0.664291f,
 0.208399f, 0.140511f,
 0.152635f, 0.140325f,
 0.124023f, 0.367959f,
 0.161585f, 0.372104f,
 0.231702f, 0.024200f,
 0.176325f, 0.023903f,
 0.106931f, 0.287866f,
 0.177076f, 0.294203f,
 0.832127f, 0.948011f,
 0.809815f, 0.854360f,
 0.920318f, 0.814883f,
 0.836659f, 0.814916f,
 0.015226f, 0.680055f,
 0.069400f, 0.680055f,
 0.186740f, 0.680055f,
 0.130233f, 0.680055f,
 0.015226f, 0.795038f,
 0.069400f, 0.795038f,
 0.186740f, 0.795038f,
 0.130233f, 0.795038f,
 0.249217f, 0.874910f,
 0.249424f, 0.933539f,
 0.301860f, 0.930908f,
 0.302065f, 0.877358f,
 0.912785f, 0.044483f,
 0.912785f, 0.221742f,
 0.912785f, 0.393753f,
 0.789643f, 0.108579f,
 0.789643f, 0.221742f,
 0.789643f, 0.334905f,
 0.330550f, 0.836015f,
 0.962340f, 0.570236f,
 0.925844f, 0.639527f,
 0.962340f, 0.570236f,
 0.963051f, 0.681379f,
 0.925844f, 0.681379f,
 0.259150f, 0.569083f,
 0.259150f, 0.501261f,
 0.401404f, 0.376641f,
 0.519240f, 0.376645f,
 0.540277f, 0.437890f,
 0.380364f, 0.437885f,
 0.540277f, 0.437890f,
 0.320813f, 0.222669f,
 0.293252f, 0.222819f,
 0.366655f, 0.447487f,
 0.268827f, 0.448535f,
 0.268827f, 0.448535f,
 0.220727f, 0.454545f,
 0.397838f, 0.222717f,
 0.320813f, 0.222669f,
 0.327717f, 0.363533f,
 0.388431f, 0.138763f,
 0.556599f, 0.423421f,
 0.556600f, 0.365850f,
 0.381748f, 0.247125f,
 0.259954f, 0.282383f,
 0.776267f, 0.365854f,
 0.776267f, 0.423423f,
 0.368537f, 0.059658f,
 0.459565f, 0.022649f,
 0.788493f, 0.530101f,
 0.819577f, 0.371917f,
 0.832137f, 0.414748f,
 0.964229f, 0.507208f,
 0.962340f, 0.570236f,
 0.920320f, 0.547872f,
 0.962340f, 0.570236f,
 0.836660f, 0.547841f,
 0.788493f, 0.530101f,
 0.809816f, 0.508397f,
 0.490977f, 0.038998f,
 0.490977f, 0.146332f,
 0.123410f, 0.975472f,
 0.064893f, 0.975472f,
 0.171616f, 0.872795f,
 0.171617f, 0.919755f,
 0.063685f, 0.822293f,
 0.127460f, 0.821833f,
 0.009284f, 0.925250f,
 0.011377f, 0.873096f,
 0.739076f, 0.221742f,
 0.739076f, 0.141674f,
 0.765412f, 0.792421f,
 0.674193f, 0.735873f,
 0.925844f, 0.681379f,
 0.259150f, 0.569083f,
 0.320395f, 0.664289f,
 0.401400f, 0.761524f,
 0.540274f, 0.700278f,
 0.661484f, 0.636909f,
 0.155870f, 0.224211f,
 0.038682f, 0.451933f,
 0.077621f, 0.367980f,
 0.136511f, 0.452982f,
 0.078844f, 0.224258f,
 0.088251f, 0.140305f,
 0.077621f, 0.367980f,
 0.023590f, 0.251572f,
 0.088251f, 0.140305f,
 0.108145f, 0.061199f,
 0.458925f, 0.272771f,
 0.023590f, 0.251572f,
 0.196627f, 0.251865f,
 0.145383f, 0.286830f,
 0.678594f, 0.330337f,
 0.108145f, 0.061199f,
 0.068361f, 0.059155f,
 0.017117f, 0.024190f,
 0.964216f, 0.855555f,
 0.925462f, 0.862950f,
 0.069400f, 0.586251f,
 0.235609f, 0.586251f,
 0.235609f, 0.680055f,
 0.186739f, 0.586251f,
 0.130233f, 0.586251f,
 0.235609f, 0.680055f,
 0.235609f, 0.795038f,
 0.200327f, 0.935933f,
 0.302124f, 0.983361f,
 0.353274f, 0.877965f,
 0.250990f, 0.823806f,
 0.739076f, 0.221742f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ 0.151080f, -0.138390f, 0.978786f},
{ 0.153840f, -0.096044f, 0.983417f},
{ 0.161258f, 0.246770f, 0.955563f},
{ 0.156558f, 0.343819f, 0.925893f},
{ 0.223208f, 0.974771f, 0.000000f},
{ 0.223208f, 0.974771f, 0.000000f},
{ 0.223208f, 0.974771f, 0.000000f},
{ 0.223208f, 0.974771f, 0.000000f},
{ 0.067783f, 0.042744f, -0.996784f},
{ 0.067783f, 0.042744f, -0.996784f},
{ 0.077004f, -0.009847f, -0.996982f},
{ 0.079057f, -0.021732f, -0.996633f},
{ 0.000000f, -0.965544f, 0.260239f},
{ 0.000000f, -0.964804f, 0.262969f},
{ 0.000000f, 0.736146f, 0.676823f},
{ 0.000000f, 0.736146f, 0.676823f},
{ 0.089043f, -0.080442f, -0.992774f},
{ 0.089043f, -0.080442f, -0.992774f},
{ 0.908471f, -0.417948f, 0.000000f},
{ 0.908471f, -0.417948f, 0.000000f},
{ 0.976122f, -0.217224f, 0.000000f},
{ 0.974289f, -0.225300f, 0.000000f},
{ 0.089963f, -0.288236f, 0.953324f},
{ 0.085929f, -0.279123f, 0.956403f},
{ 0.098913f, 0.812427f, 0.574612f},
{ 0.098913f, 0.812427f, 0.574612f},
{ 0.452316f, 0.891715f, 0.015929f},
{ 0.415378f, 0.909504f, 0.016244f},
{ 0.342761f, 0.939273f, 0.016772f},
{ 0.342761f, 0.939273f, 0.016772f},
{ 0.065211f, 0.801473f, -0.594465f},
{ 0.065211f, 0.801473f, -0.594465f},
{ 0.065211f, 0.801473f, -0.594465f},
{ 0.065211f, 0.801473f, -0.594465f},
{ 0.335094f, -0.149424f, 0.930261f},
{ 0.335094f, -0.149424f, 0.930261f},
{ 0.335950f, -0.015633f, 0.941750f},
{ 0.335931f, -0.014466f, 0.941776f},
{ 0.949115f, -0.314928f, 0.000000f},
{ 0.949116f, -0.314928f, 0.000000f},
{ 0.949116f, -0.314928f, 0.000000f},
{ 0.949116f, -0.314928f, 0.000000f},
{ 0.393093f, -0.138575f, -0.908997f},
{ 0.393093f, -0.138575f, -0.908997f},
{ 0.386827f, -0.008034f, -0.922117f},
{ 0.386878f, -0.008736f, -0.922090f},
{ 0.332384f, 0.089525f, 0.938885f},
{ 0.332384f, 0.089525f, 0.938886f},
{ 0.956829f, 0.290652f, 0.000000f},
{ 0.956829f, 0.290652f, 0.000000f},
{ 0.956829f, 0.290652f, 0.000000f},
{ 0.956829f, 0.290652f, 0.000000f},
{ 0.377318f, 0.093807f, -0.921320f},
{ 0.377318f, 0.093807f, -0.921321f},
{ 0.000000f, -0.325463f, -0.945555f},
{ 0.000000f, -0.325463f, -0.945555f},
{ 0.000000f, -0.325463f, -0.945555f},
{ 0.000000f, -0.325463f, -0.945555f},
{ 0.978629f, 0.203223f, -0.031384f},
{ 0.978752f, 0.201927f, -0.035653f},
{ 0.000000f, -0.134148f, 0.990961f},
{ 0.000000f, -0.146727f, 0.989177f},
{ -0.961984f, -0.273105f, 0.000000f},
{ -0.961984f, -0.273105f, 0.000000f},
{ -0.993251f, -0.115423f, -0.011361f},
{ -0.990660f, -0.135994f, -0.009908f},
{ 0.000000f, 0.325677f, -0.945481f},
{ 0.000000f, 0.325677f, -0.945481f},
{ 0.000000f, 0.325677f, -0.945481f},
{ 0.000000f, 0.325677f, -0.945481f},
{ 0.991995f, 0.126071f, -0.007270f},
{ 0.988300f, 0.149302f, -0.031175f},
{ 0.000000f, -0.183469f, 0.983025f},
{ 0.000000f, -0.183469f, 0.983026f},
{ -0.998016f, 0.062958f, -0.000325f},
{ -0.997869f, 0.064160f, 0.011868f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.996085f, 0.042702f, 0.077404f},
{ 0.996085f, 0.042702f, 0.077404f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069077f},
{ -0.996063f, 0.068458f, 0.056313f},
{ -0.996063f, 0.068458f, 0.056313f},
{ -0.216914f, -0.976187f, -0.002759f},
{ -0.216914f, -0.976187f, -0.002759f},
{ -0.307385f, -0.951577f, -0.003863f},
{ -0.301398f, -0.953491f, -0.003790f},
{ 0.889024f, -0.009685f, -0.457759f},
{ 0.889024f, -0.009685f, -0.457759f},
{ 0.889024f, -0.009685f, -0.457759f},
{ 0.889024f, -0.009685f, -0.457759f},
{ 0.681778f, 0.731519f, 0.007656f},
{ 0.681616f, 0.731671f, 0.007633f},
{ 0.655954f, 0.091582f, 0.749224f},
{ 0.655954f, 0.091582f, 0.749224f},
{ 0.655954f, 0.091582f, 0.749224f},
{ 0.655954f, 0.091582f, 0.749224f},
{ -0.639003f, -0.769201f, -0.002408f},
{ -0.614334f, -0.789042f, -0.002753f},
{ 0.188446f, -0.042797f, -0.981151f},
{ 0.188446f, -0.042797f, -0.981151f},
{ -0.029129f, 0.092423f, -0.995294f},
{ 0.050794f, 0.043326f, -0.997769f},
{ 0.643112f, 0.765769f, 0.002350f},
{ 0.643112f, 0.765769f, 0.002350f},
{ 0.536430f, 0.030878f, 0.843380f},
{ 0.536430f, 0.030878f, 0.843380f},
{ 0.389359f, 0.103539f, 0.915248f},
{ 0.285312f, 0.149744f, 0.946665f},
{ -0.811160f, -0.584824f, 0.000411f},
{ -0.811160f, -0.584824f, 0.000411f},
{ -0.165728f, 0.174803f, -0.970556f},
{ -0.165728f, 0.174803f, -0.970556f},
{ 0.687554f, 0.726131f, 0.001693f},
{ 0.687554f, 0.726131f, 0.001693f},
{ 0.687554f, 0.726131f, 0.001693f},
{ 0.687554f, 0.726131f, 0.001693f},
{ 0.095871f, 0.224724f, 0.969695f},
{ 0.095871f, 0.224724f, 0.969695f},
{ 0.711543f, 0.702642f, 0.001320f},
{ 0.711543f, 0.702642f, 0.001320f},
{ 0.711543f, 0.702642f, 0.001320f},
{ 0.711543f, 0.702642f, 0.001320f},
{ 0.006888f, -0.008852f, 0.999937f},
{ 0.006888f, -0.008852f, 0.999937f},
{ 0.006888f, -0.008852f, 0.999937f},
{ 0.006888f, -0.008852f, 0.999937f},
{ -0.711543f, -0.702641f, -0.001319f},
{ -0.711543f, -0.702641f, -0.001319f},
{ -0.711543f, -0.702641f, -0.001319f},
{ -0.711543f, -0.702641f, -0.001319f},
{ -0.163263f, -0.145951f, -0.975727f},
{ -0.163263f, -0.145951f, -0.975727f},
{ -0.163263f, -0.145951f, -0.975727f},
{ -0.163263f, -0.145951f, -0.975727f},
{ -0.691323f, 0.722460f, 0.011158f},
{ -0.691323f, 0.722460f, 0.011158f},
{ -0.691323f, 0.722460f, 0.011158f},
{ -0.691323f, 0.722460f, 0.011158f},
{ -0.019095f, 0.291977f, -0.956235f},
{ -0.019095f, 0.291977f, -0.956235f},
{ -0.036481f, 0.287975f, -0.956943f},
{ -0.032536f, 0.288891f, -0.956809f},
{ -0.028672f, 0.133812f, -0.990592f},
{ -0.025387f, 0.098681f, -0.994795f},
{ 0.013130f, 0.047036f, -0.998807f},
{ 0.006959f, 0.046062f, -0.998914f},
{ -0.151080f, -0.138390f, 0.978786f},
{ -0.156558f, 0.343819f, 0.925893f},
{ -0.161258f, 0.246770f, 0.955563f},
{ -0.153840f, -0.096044f, 0.983417f},
{ -0.238674f, 0.971100f, 0.000002f},
{ -0.238674f, 0.971100f, 0.000002f},
{ -0.238674f, 0.971100f, 0.000002f},
{ -0.238674f, 0.971100f, 0.000002f},
{ -0.067783f, 0.042744f, -0.996784f},
{ -0.079057f, -0.021732f, -0.996633f},
{ -0.077004f, -0.009847f, -0.996982f},
{ -0.067783f, 0.042744f, -0.996784f},
{ 0.000000f, -0.965544f, 0.260239f},
{ 0.000000f, 0.736147f, 0.676822f},
{ 0.000000f, 0.736147f, 0.676822f},
{ 0.000000f, -0.964804f, 0.262969f},
{ -0.089043f, -0.080442f, -0.992774f},
{ -0.089043f, -0.080442f, -0.992774f},
{ -0.908471f, -0.417948f, 0.000000f},
{ -0.974289f, -0.225300f, 0.000000f},
{ -0.976122f, -0.217224f, 0.000000f},
{ -0.908471f, -0.417948f, 0.000000f},
{ -0.085929f, -0.279123f, 0.956403f},
{ -0.089963f, -0.288236f, 0.953324f},
{ -0.098913f, 0.812427f, 0.574612f},
{ -0.098913f, 0.812427f, 0.574612f},
{ -0.453527f, 0.891103f, 0.015800f},
{ -0.342761f, 0.939273f, 0.016772f},
{ -0.342761f, 0.939273f, 0.016772f},
{ -0.417716f, 0.908434f, 0.016146f},
{ -0.065211f, 0.801473f, -0.594465f},
{ -0.065211f, 0.801473f, -0.594465f},
{ -0.065211f, 0.801473f, -0.594465f},
{ -0.065211f, 0.801473f, -0.594465f},
{ -0.335094f, -0.149424f, 0.930261f},
{ -0.341048f, -0.011567f, 0.939975f},
{ -0.340976f, -0.015120f, 0.939950f},
{ -0.335094f, -0.149424f, 0.930261f},
{ -0.949116f, -0.314928f, 0.000000f},
{ -0.949116f, -0.314928f, 0.000000f},
{ -0.949116f, -0.314928f, 0.000000f},
{ -0.949116f, -0.314928f, 0.000000f},
{ -0.393093f, -0.138575f, -0.908997f},
{ -0.392530f, -0.007466f, -0.919709f},
{ -0.392439f, -0.004502f, -0.919767f},
{ -0.393093f, -0.138575f, -0.908997f},
{ -0.341143f, 0.097424f, 0.934949f},
{ -0.341143f, 0.097424f, 0.934949f},
{ -0.944822f, 0.327584f, 0.000009f},
{ -0.944822f, 0.327584f, 0.000009f},
{ -0.944822f, 0.327585f, 0.000009f},
{ -0.944822f, 0.327584f, 0.000009f},
{ -0.386816f, 0.102685f, -0.916422f},
{ -0.386816f, 0.102685f, -0.916422f},
{ 0.000000f, -0.325463f, -0.945555f},
{ 0.000000f, -0.325463f, -0.945555f},
{ 0.000000f, -0.325463f, -0.945555f},
{ 0.000000f, -0.325463f, -0.945555f},
{ -0.978751f, 0.201926f, -0.035653f},
{ -0.978629f, 0.203223f, -0.031384f},
{ -0.000000f, -0.146727f, 0.989177f},
{ -0.000000f, -0.134148f, 0.990961f},
{ 0.961984f, -0.273105f, 0.000000f},
{ 0.990660f, -0.135994f, -0.009908f},
{ 0.993251f, -0.115423f, -0.011361f},
{ 0.961984f, -0.273105f, 0.000000f},
{ 0.000000f, 0.325677f, -0.945481f},
{ 0.000000f, 0.325677f, -0.945481f},
{ 0.000000f, 0.325677f, -0.945481f},
{ 0.000000f, 0.325677f, -0.945481f},
{ -0.988300f, 0.149302f, -0.031175f},
{ -0.991995f, 0.126071f, -0.007270f},
{ 0.000000f, -0.183469f, 0.983026f},
{ 0.000000f, -0.183469f, 0.983026f},
{ 0.997869f, 0.064160f, 0.011868f},
{ 0.998016f, 0.062958f, -0.000325f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.000000f, -0.999997f, 0.002282f},
{ -0.996085f, 0.042702f, 0.077404f},
{ -0.996085f, 0.042702f, 0.077404f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.996063f, 0.068458f, 0.056313f},
{ 0.996063f, 0.068458f, 0.056313f},
{ 0.223500f, -0.974699f, 0.002997f},
{ 0.304290f, -0.952574f, 0.003355f},
{ 0.309892f, -0.950766f, 0.003379f},
{ 0.223500f, -0.974699f, 0.002997f},
{ -0.885200f, -0.013426f, -0.465017f},
{ -0.885200f, -0.013426f, -0.465017f},
{ -0.885200f, -0.013426f, -0.465017f},
{ -0.885200f, -0.013426f, -0.465017f},
{ -0.681498f, 0.731799f, 0.005456f},
{ -0.682029f, 0.731304f, 0.005557f},
{ -0.642200f, 0.098992f, 0.760118f},
{ -0.642200f, 0.098992f, 0.760118f},
{ -0.642200f, 0.098992f, 0.760118f},
{ -0.642200f, 0.098992f, 0.760118f},
{ 0.615428f, -0.788176f, 0.005211f},
{ 0.637299f, -0.770598f, 0.005359f},
{ -0.201893f, -0.062367f, -0.977420f},
{ -0.056347f, 0.030688f, -0.997940f},
{ 0.027802f, 0.083580f, -0.996113f},
{ -0.201893f, -0.062367f, -0.977420f},
{ -0.642742f, 0.766080f, -0.001758f},
{ -0.642742f, 0.766080f, -0.001758f},
{ -0.525415f, 0.048558f, 0.849459f},
{ -0.283564f, 0.158265f, 0.945803f},
{ -0.383353f, 0.115781f, 0.916316f},
{ -0.525415f, 0.048558f, 0.849459f},
{ 0.811220f, -0.584705f, 0.006498f},
{ 0.811220f, -0.584705f, 0.006498f},
{ 0.171002f, 0.172072f, -0.970129f},
{ 0.171002f, 0.172072f, -0.970129f},
{ -0.687645f, 0.726035f, -0.004122f},
{ -0.687645f, 0.726035f, -0.004122f},
{ -0.687645f, 0.726035f, -0.004122f},
{ -0.687645f, 0.726035f, -0.004122f},
{ -0.101192f, 0.227460f, 0.968515f},
{ -0.101192f, 0.227460f, 0.968515f},
{ -0.711628f, 0.702542f, -0.004559f},
{ -0.711628f, 0.702542f, -0.004559f},
{ -0.711628f, 0.702542f, -0.004559f},
{ -0.711628f, 0.702542f, -0.004559f},
{ -0.012345f, -0.006017f, 0.999906f},
{ -0.012345f, -0.006017f, 0.999906f},
{ -0.012345f, -0.006017f, 0.999906f},
{ -0.012345f, -0.006017f, 0.999906f},
{ 0.711628f, -0.702541f, 0.004559f},
{ 0.711628f, -0.702541f, 0.004559f},
{ 0.711628f, -0.702541f, 0.004559f},
{ 0.711628f, -0.702541f, 0.004559f},
{ 0.168606f, -0.148695f, -0.974403f},
{ 0.168606f, -0.148695f, -0.974403f},
{ 0.168606f, -0.148695f, -0.974403f},
{ 0.168606f, -0.148695f, -0.974403f},
{ 0.691159f, 0.722587f, 0.012881f},
{ 0.691159f, 0.722587f, 0.012881f},
{ 0.691159f, 0.722587f, 0.012881f},
{ 0.691159f, 0.722587f, 0.012881f},
{ 0.019095f, 0.291977f, -0.956235f},
{ 0.032536f, 0.288891f, -0.956809f},
{ 0.036481f, 0.287975f, -0.956943f},
{ 0.019095f, 0.291977f, -0.956235f},
{ 0.028967f, 0.135064f, -0.990413f},
{ -0.007172f, 0.045904f, -0.998920f},
{ -0.012594f, 0.046614f, -0.998834f},
{ 0.025841f, 0.101216f, -0.994529f},
{ 0.029560f, 0.049618f, -0.998331f},
{ 0.029560f, 0.049618f, -0.998331f},
{ -0.030818f, 0.048991f, -0.998324f},
{ -0.030818f, 0.048991f, -0.998324f}};

static int[] FaceArray = new int[]{
0, 1, 3,
20, 21, 22,
4, 5, 7,
32, 33, 34,
6, 7, 9,
7, 104, 10,
1, 0, 11,
2, 3, 13,
3, 105, 106,
107, 108, 109,
110, 111, 17,
112, 113, 114,
14, 15, 19,
16, 17, 21,
115, 116, 22,
18, 19, 23,
117, 118, 25,
119, 120, 26,
121, 122, 27,
123, 124, 24,
24, 25, 29,
125, 26, 30,
26, 27, 31,
126, 24, 28,
127, 128, 33,
129, 30, 130,
131, 132, 35,
133, 28, 134,
135, 136, 137,
138, 139, 140,
141, 3, 142,
3, 143, 144,
37, 36, 40,
145, 38, 42,
38, 39, 43,
39, 37, 41,
41, 40, 44,
146, 42, 46,
42, 43, 47,
43, 41, 45,
147, 148, 49,
149, 150, 48,
151, 152, 50,
153, 154, 51,
48, 49, 51,
155, 156, 101,
53, 54, 98,
0, 2, 57,
20, 23, 59,
4, 6, 61,
62, 65, 64,
6, 8, 66,
61, 66, 67,
157, 158, 11,
2, 12, 68,
57, 68, 69,
60, 69, 159,
160, 16, 161,
162, 70, 163,
164, 71, 19,
16, 20, 58,
70, 58, 59,
71, 59, 23,
165, 73, 72,
166, 167, 74,
168, 74, 75,
169, 170, 73,
73, 77, 76,
171, 172, 78,
74, 78, 79,
173, 174, 77,
175, 62, 63,
176, 177, 178,
179, 64, 65,
180, 181, 182,
56, 81, 80,
183, 184, 82,
60, 82, 83,
57, 83, 81,
185, 85, 84,
186, 187, 86,
188, 86, 87,
189, 87, 85,
85, 89, 88,
190, 191, 90,
86, 90, 91,
87, 91, 89,
192, 93, 92,
193, 94, 93,
194, 95, 94,
195, 92, 95,
93, 94, 95,
196, 102, 103,
53, 99, 100,
99, 98, 55,
100, 99, 52,
102, 101, 54,
103, 102, 53, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 197  Texture Co-ords: 202  Normals: 304  Texture: New Faces: 98 Smooth Groups: 86 sucess: 45 Doubles: 53 Redos needed: 93 Correct: 66