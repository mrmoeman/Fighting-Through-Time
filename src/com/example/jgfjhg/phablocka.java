package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phablocka {

static String TextureName = "block";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.871778f, 1.390676f,
 0.936363f, 9.561856f, 1.489886f,
 0.791186f, 9.057188f, 0.164065f,
 0.817567f, 8.123215f, -0.037591f,
 0.562201f, 9.644298f, 1.527144f,
 0.444292f, 9.461653f, 0.083482f,
 0.371258f, 7.961018f, -0.129549f,
 0.442211f, 7.871596f, 1.393782f,
 0.033961f, 7.855094f, 1.674901f,
 0.033961f, 9.810679f, 1.597010f,
 0.033961f, 9.627106f, 0.093194f,
 0.033961f, 7.966147f, -0.216928f,
 0.033961f, 9.959694f, 0.825459f,
 0.541219f, 9.857918f, 0.819484f,
 0.936363f, 9.573854f, 1.287462f,
 0.936363f, 7.886909f, 1.132911f,
 0.429582f, 7.890792f, 1.066767f,
 0.033961f, 7.890792f, 1.066767f,
 0.445001f, 7.619389f, 1.573699f,
 0.782250f, 7.617675f, 1.602898f,
 0.432372f, 7.280521f, 1.563492f,
 0.782250f, 7.276638f, 1.629638f,
 1.200907f, 7.581982f, -0.005968f,
 0.776421f, 7.590402f, 1.049134f,
 0.033961f, 7.622866f, 1.013905f,
 0.033961f, 7.588081f, -0.109716f,
 0.700363f, 4.701965f, -0.072491f,
 0.684600f, 4.642639f, 0.621682f,
 0.033961f, 4.627987f, 0.793219f,
 0.033961f, 4.736476f, -0.476210f,
 0.971581f, 6.633540f, 1.128592f,
 0.997360f, 6.731747f, -0.020523f,
 0.033961f, 6.913822f, -0.160660f,
 0.033961f, 6.708075f, 1.373543f,
 1.813396f, -0.170349f, -0.962144f,
 1.773686f, -0.217383f, 1.383735f,
 0.041720f, -0.230803f, 1.887431f,
 0.027974f, -0.144356f, -1.640897f,
 1.486300f, 7.129675f, 0.226906f,
 1.373875f, 7.402452f, 0.878083f,
 0.984945f, 6.999572f, 1.103860f,
 1.110644f, 6.686651f, 0.350142f,
 2.272442f, 5.606139f, 1.116579f,
 2.317681f, 5.956511f, 1.190512f,
 2.030301f, 6.056417f, 1.171650f,
 1.978041f, 5.652255f, 1.083818f,
 1.969696f, 4.966692f, 2.979279f,
 2.063622f, 5.693141f, 3.137048f,
 1.506410f, 5.885816f, 3.029862f,
 1.401157f, 5.071687f, 2.849544f,
 0.041336f, 2.308439f, 1.220357f,
 1.173861f, 2.303648f, 1.080207f,
 1.197614f, 2.258211f, -0.389861f,
 0.027591f, 2.251149f, -0.775053f,
 -0.868441f, 9.573854f, 1.287462f,
 -0.868441f, 7.886909f, 1.132911f,
 -0.749646f, 8.123215f, -0.037591f,
 -0.723264f, 9.057188f, 0.164065f,
 -0.376369f, 9.461653f, 0.083482f,
 -0.473295f, 9.857918f, 0.819484f,
 -0.303336f, 7.961018f, -0.129549f,
 -0.361660f, 7.890792f, 1.066767f,
 -0.374288f, 7.871596f, 1.393782f,
 -1.204989f, 7.871778f, 1.390676f,
 -0.868441f, 9.561856f, 1.489886f,
 -0.494279f, 9.644298f, 1.527144f,
 -0.714328f, 7.617675f, 1.602898f,
 -0.377078f, 7.619389f, 1.573699f,
 -0.364450f, 7.280521f, 1.563492f,
 -0.714328f, 7.276638f, 1.629638f,
 -0.708500f, 7.590402f, 1.049134f,
 -1.132985f, 7.581982f, -0.005969f,
 -1.915335f, 3.437236f, 1.473919f,
 -2.423562f, 3.796080f, 1.891503f,
 -2.063133f, 3.999120f, 2.325049f,
 -1.491995f, 3.599610f, 1.855376f,
 -0.903658f, 6.633540f, 1.128592f,
 -0.929437f, 6.731747f, -0.020523f,
 -0.616678f, 4.642639f, 0.621682f,
 -0.632440f, 4.701965f, -0.072491f,
 -1.093169f, 2.302823f, 1.094299f,
 -1.137197f, 2.256875f, -0.373560f,
 -1.526495f, 7.214871f, 0.576565f,
 -1.026720f, 6.948531f, 0.140255f,
 -1.314758f, 7.036665f, 1.113188f,
 -0.734649f, 6.732961f, 0.610148f,
 -1.869864f, 5.438860f, 0.933588f,
 -1.625758f, 5.264159f, 0.733176f,
 -1.700599f, 5.516466f, 1.174940f,
 -1.417816f, 5.316865f, 0.942591f,
 -1.694228f, -0.219090f, 1.395084f,
 -1.752450f, -0.170392f, -0.950717f,
 1.693597f, 5.892503f, 2.415605f,
 2.101546f, 5.750682f, 2.442379f,
 2.037327f, 5.253312f, 2.337428f,
 1.619412f, 5.318775f, 2.290922f,
 -1.928399f, 4.468163f, 1.907627f,
 -1.526975f, 4.184821f, 1.577795f,
 -1.822158f, 4.110002f, 1.280523f,
 -2.168678f, 4.357999f, 1.565017f,
 2.236435f, 0.135277f, 0.982058f,
 1.992572f, -0.059085f, 1.692298f,
 2.133403f, 10.163942f, 2.968530f,
 1.070982f, 9.612219f, 4.786933f,
 1.832876f, 8.134534f, 3.032538f,
 1.589013f, 7.940173f, 3.742778f,
 0.791186f, 9.057188f, 0.164065f,
 0.791186f, 9.057188f, 0.164065f,
 0.936363f, 9.573854f, 1.287462f,
 0.817567f, 8.123215f, -0.037591f,
 0.371258f, 7.961018f, -0.129549f,
 0.791186f, 9.057188f, 0.164065f,
 0.791186f, 9.057188f, 0.164065f,
 0.371258f, 7.961018f, -0.129549f,
 0.371258f, 7.961018f, -0.129549f,
 0.033961f, 9.810679f, 1.597010f,
 0.033961f, 9.810679f, 1.597010f,
 0.562201f, 9.644298f, 1.527144f,
 0.562201f, 9.644298f, 1.527144f,
 0.936363f, 9.573854f, 1.287462f,
 0.936363f, 9.573854f, 1.287462f,
 0.562201f, 9.644298f, 1.527144f,
 0.936363f, 9.561856f, 1.489886f,
 1.272911f, 7.871778f, 1.390676f,
 0.936363f, 9.561856f, 1.489886f,
 0.936363f, 9.561856f, 1.489886f,
 0.429582f, 7.890792f, 1.066767f,
 0.442211f, 7.871596f, 1.393782f,
 0.442211f, 7.871596f, 1.393782f,
 0.033961f, 7.855094f, 1.674901f,
 0.442211f, 7.871596f, 1.393782f,
 0.445001f, 7.619389f, 1.573699f,
 0.445001f, 7.619389f, 1.573699f,
 0.432372f, 7.280521f, 1.563492f,
 0.432372f, 7.280521f, 1.563492f,
 0.432372f, 7.280521f, 1.563492f,
 0.782250f, 7.276638f, 1.629638f,
 1.272911f, 7.871778f, 1.390676f,
 0.782250f, 7.617675f, 1.602898f,
 0.782250f, 7.617675f, 1.602898f,
 0.782250f, 7.276638f, 1.629638f,
 0.429582f, 7.890792f, 1.066767f,
 0.776421f, 7.590402f, 1.049134f,
 0.371258f, 7.961018f, -0.129549f,
 0.371258f, 7.961018f, -0.129549f,
 0.776421f, 7.590402f, 1.049134f,
 1.200907f, 7.581982f, -0.005968f,
 0.033961f, 7.622866f, 1.013905f,
 0.429582f, 7.890792f, 1.066767f,
 0.429582f, 7.890792f, 1.066767f,
 0.033961f, 7.622866f, 1.013905f,
 0.776421f, 7.590402f, 1.049134f,
 0.033961f, 7.966147f, -0.216928f,
 0.371258f, 7.961018f, -0.129549f,
 0.033961f, 7.588081f, -0.109716f,
 0.033961f, 7.588081f, -0.109716f,
 0.371258f, 7.961018f, -0.129549f,
 1.200907f, 7.581982f, -0.005968f,
 0.971581f, 6.633540f, 1.128592f,
 0.684600f, 4.642639f, 0.621682f,
 0.700363f, 4.701965f, -0.072491f,
 0.684600f, 4.642639f, 0.621682f,
 0.684600f, 4.642639f, 0.621682f,
 1.173861f, 2.303648f, 1.080207f,
 0.033961f, 4.627987f, 0.793219f,
 0.684600f, 4.642639f, 0.621682f,
 0.684600f, 4.642639f, 0.621682f,
 0.033961f, 4.736476f, -0.476210f,
 0.700363f, 4.701965f, -0.072491f,
 0.700363f, 4.701965f, -0.072491f,
 0.776421f, 7.590402f, 1.049134f,
 1.200907f, 7.581982f, -0.005968f,
 1.200907f, 7.581982f, -0.005968f,
 0.971581f, 6.633540f, 1.128592f,
 0.776421f, 7.590402f, 1.049134f,
 0.776421f, 7.590402f, 1.049134f,
 0.997360f, 6.731747f, -0.020523f,
 0.971581f, 6.633540f, 1.128592f,
 0.971581f, 6.633540f, 1.128592f,
 0.984945f, 6.999572f, 1.103860f,
 1.200907f, 7.581982f, -0.005968f,
 0.997360f, 6.731747f, -0.020523f,
 0.997360f, 6.731747f, -0.020523f,
 0.984945f, 6.999572f, 1.103860f,
 2.030301f, 6.056417f, 1.171650f,
 2.030301f, 6.056417f, 1.171650f,
 2.030301f, 6.056417f, 1.171650f,
 1.693597f, 5.892503f, 2.415605f,
 1.693597f, 5.892503f, 2.415605f,
 1.173861f, 2.303648f, 1.080207f,
 1.773686f, -0.217383f, 1.383735f,
 1.773686f, -0.217383f, 1.383735f,
 -0.868441f, 9.573854f, 1.287462f,
 -0.723264f, 9.057188f, 0.164065f,
 -0.723264f, 9.057188f, 0.164065f,
 -0.749646f, 8.123215f, -0.037591f,
 -0.723264f, 9.057188f, 0.164065f,
 -0.303336f, 7.961018f, -0.129549f,
 -0.303336f, 7.961018f, -0.129549f,
 -0.723264f, 9.057188f, 0.164065f,
 -0.303336f, 7.961018f, -0.129549f,
 -0.494279f, 9.644298f, 1.527144f,
 0.033961f, 9.810679f, 1.597010f,
 0.033961f, 9.810679f, 1.597010f,
 -0.868441f, 9.561856f, 1.489886f,
 -0.494279f, 9.644298f, 1.527144f,
 -0.868441f, 9.573854f, 1.287462f,
 -0.868441f, 9.573854f, 1.287462f,
 -0.494279f, 9.644298f, 1.527144f,
 -0.868441f, 9.561856f, 1.489886f,
 -0.868441f, 9.561856f, 1.489886f,
 -1.204989f, 7.871778f, 1.390676f,
 0.033961f, 7.855094f, 1.674901f,
 -0.374288f, 7.871596f, 1.393782f,
 -0.374288f, 7.871596f, 1.393782f,
 -0.361660f, 7.890792f, 1.066767f,
 -0.374288f, 7.871596f, 1.393782f,
 -0.377078f, 7.619389f, 1.573699f,
 -0.377078f, 7.619389f, 1.573699f,
 -0.364450f, 7.280521f, 1.563492f,
 -0.364450f, 7.280521f, 1.563492f,
 -0.364450f, 7.280521f, 1.563492f,
 -0.714328f, 7.276638f, 1.629638f,
 -0.714328f, 7.276638f, 1.629638f,
 -0.714328f, 7.617675f, 1.602898f,
 -0.714328f, 7.617675f, 1.602898f,
 -1.204989f, 7.871778f, 1.390676f,
 -1.132985f, 7.581982f, -0.005969f,
 -0.708500f, 7.590402f, 1.049134f,
 -0.303336f, 7.961018f, -0.129549f,
 -0.303336f, 7.961018f, -0.129549f,
 -0.708500f, 7.590402f, 1.049134f,
 -0.361660f, 7.890792f, 1.066767f,
 -0.708500f, 7.590402f, 1.049134f,
 0.033961f, 7.622866f, 1.013905f,
 -0.361660f, 7.890792f, 1.066767f,
 -0.361660f, 7.890792f, 1.066767f,
 0.033961f, 7.622866f, 1.013905f,
 0.033961f, 7.966147f, -0.216928f,
 0.033961f, 7.588081f, -0.109716f,
 -0.303336f, 7.961018f, -0.129549f,
 -0.303336f, 7.961018f, -0.129549f,
 0.033961f, 7.588081f, -0.109716f,
 -1.132985f, 7.581982f, -0.005969f,
 -0.903658f, 6.633540f, 1.128592f,
 -0.616678f, 4.642639f, 0.621682f,
 -0.632440f, 4.701965f, -0.072491f,
 -0.616678f, 4.642639f, 0.621682f,
 -0.616678f, 4.642639f, 0.621682f,
 -1.093169f, 2.302823f, 1.094299f,
 -0.616678f, 4.642639f, 0.621682f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.642639f, 0.621682f,
 0.041336f, 2.308439f, 1.220357f,
 0.033961f, 4.627987f, 0.793219f,
 0.033961f, 4.736476f, -0.476210f,
 0.027591f, 2.251149f, -0.775053f,
 -0.632440f, 4.701965f, -0.072491f,
 -0.632440f, 4.701965f, -0.072491f,
 0.027591f, 2.251149f, -0.775053f,
 -1.137197f, 2.256875f, -0.373560f,
 -1.026720f, 6.948531f, 0.140255f,
 -1.526495f, 7.214871f, 0.576565f,
 -1.132985f, 7.581982f, -0.005969f,
 -1.132985f, 7.581982f, -0.005969f,
 -1.526495f, 7.214871f, 0.576565f,
 -0.708500f, 7.590402f, 1.049134f,
 -1.526495f, 7.214871f, 0.576565f,
 -1.314758f, 7.036665f, 1.113188f,
 -0.708500f, 7.590402f, 1.049134f,
 -0.708500f, 7.590402f, 1.049134f,
 -1.314758f, 7.036665f, 1.113188f,
 -0.903658f, 6.633540f, 1.128592f,
 -0.929437f, 6.731747f, -0.020523f,
 -0.903658f, 6.633540f, 1.128592f,
 -0.734649f, 6.732961f, 0.610148f,
 -0.903658f, 6.633540f, 1.128592f,
 -1.314758f, 7.036665f, 1.113188f,
 -0.734649f, 6.732961f, 0.610148f,
 -0.734649f, 6.732961f, 0.610148f,
 -1.026720f, 6.948531f, 0.140255f,
 -0.929437f, 6.731747f, -0.020523f,
 -0.929437f, 6.731747f, -0.020523f,
 -1.026720f, 6.948531f, 0.140255f,
 -1.132985f, 7.581982f, -0.005969f,
 -1.526495f, 7.214871f, 0.576565f,
 -1.869864f, 5.438860f, 0.933588f,
 -1.314758f, 7.036665f, 1.113188f,
 -1.314758f, 7.036665f, 1.113188f,
 -1.869864f, 5.438860f, 0.933588f,
 -1.700599f, 5.516466f, 1.174940f,
 -1.928399f, 4.468163f, 1.907627f,
 -1.700599f, 5.516466f, 1.174940f,
 -2.168678f, 4.357999f, 1.565017f,
 -2.168678f, 4.357999f, 1.565017f,
 -1.700599f, 5.516466f, 1.174940f,
 -1.869864f, 5.438860f, 0.933588f,
 -1.752450f, -0.170392f, -0.950717f,
 -1.694228f, -0.219090f, 1.395084f,
 -1.137197f, 2.256875f, -0.373560f,
 -1.137197f, 2.256875f, -0.373560f,
 -1.694228f, -0.219090f, 1.395084f,
 -1.093169f, 2.302823f, 1.094299f,
 2.037327f, 5.253312f, 2.337428f,
 2.063622f, 5.693141f, 3.137048f,
 1.969696f, 4.966692f, 2.979279f,
 1.619412f, 5.318775f, 2.290922f,
 2.037327f, 5.253312f, 2.337428f,
 1.401157f, 5.071687f, 2.849544f,
 1.401157f, 5.071687f, 2.849544f,
 2.037327f, 5.253312f, 2.337428f,
 1.969696f, 4.966692f, 2.979279f,
 1.693597f, 5.892503f, 2.415605f,
 1.619412f, 5.318775f, 2.290922f,
 1.506410f, 5.885816f, 3.029862f,
 1.506410f, 5.885816f, 3.029862f,
 1.619412f, 5.318775f, 2.290922f,
 1.401157f, 5.071687f, 2.849544f,
 -1.526975f, 4.184821f, 1.577795f,
 -2.063133f, 3.999120f, 2.325049f,
 -1.491995f, 3.599610f, 1.855376f,
 -1.526975f, 4.184821f, 1.577795f,
 -1.491995f, 3.599610f, 1.855376f,
 -1.822158f, 4.110002f, 1.280523f,
 -1.822158f, 4.110002f, 1.280523f,
 -1.491995f, 3.599610f, 1.855376f,
 -1.915335f, 3.437236f, 1.473919f,
 -2.168678f, 4.357999f, 1.565017f,
 -1.822158f, 4.110002f, 1.280523f,
 -2.423562f, 3.796080f, 1.891503f,
 -2.423562f, 3.796080f, 1.891503f,
 -1.822158f, 4.110002f, 1.280523f,
 -1.915335f, 3.437236f, 1.473919f,
 -2.168678f, 4.357999f, 1.565017f,
 -2.423562f, 3.796080f, 1.891503f,
 -1.928399f, 4.468163f, 1.907627f,
 2.236435f, 0.135277f, 0.982058f,
 1.992572f, -0.059085f, 1.692298f,
 1.832876f, 8.134534f, 3.032538f,
 1.832876f, 8.134534f, 3.032538f,
 1.992572f, -0.059085f, 1.692298f,
 1.589013f, 7.940173f, 3.742778f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.091983f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.258327f, -0.118870f},
{ 0.826605f, -0.305211f, -0.472832f},
{ 0.904768f, 0.139994f, -0.402239f},
{ 0.857718f, -0.284820f, -0.428015f},
{ 0.363845f, 0.422599f, -0.830076f},
{ 0.549456f, 0.807995f, -0.212704f},
{ 0.485921f, 0.176131f, -0.856072f},
{ 0.520281f, -0.839579f, -0.156252f},
{ 0.517275f, -0.046458f, 0.854557f},
{ 0.414373f, 0.019809f, 0.909892f},
{ 0.188089f, -0.146190f, 0.971211f},
{ 0.238558f, 0.273589f, 0.931793f},
{ -0.000000f, 0.395232f, 0.918582f},
{ 0.000000f, -0.273599f, 0.961844f},
{ 0.000000f, 0.543334f, -0.839516f},
{ 0.000000f, 0.993451f, -0.114261f},
{ 0.000000f, 0.062317f, -0.998056f},
{ 0.453144f, 0.291501f, 0.842430f},
{ -0.760936f, 0.207943f, 0.614602f},
{ 0.383690f, -0.837850f, -0.388316f},
{ -0.216585f, -0.815347f, -0.536936f},
{ -0.000000f, -0.917616f, 0.397468f},
{ 0.374472f, 0.660090f, 0.651193f},
{ 0.485809f, 0.642426f, -0.592688f},
{ 0.000000f, 0.278909f, 0.960317f},
{ 0.000000f, -0.021796f, -0.999763f},
{ 0.482669f, -0.745038f, 0.460380f},
{ 0.555505f, 0.218227f, 0.802366f},
{ -0.847544f, -0.465882f, 0.254210f},
{ -0.624320f, 0.543174f, 0.561415f},
{ -0.000000f, -0.119406f, 0.992845f},
{ 0.737897f, -0.181162f, 0.650145f},
{ 0.672099f, -0.049695f, -0.738792f},
{ -0.000000f, 0.124714f, -0.992193f},
{ 0.839444f, 0.041254f, 0.541879f},
{ 0.824162f, 0.059231f, -0.563248f},
{ 0.000431f, 0.069586f, -0.997576f},
{ -0.000244f, -0.047622f, 0.998865f},
{ 0.820151f, 0.293471f, -0.491149f},
{ 0.756898f, 0.280620f, 0.590219f},
{ 0.005778f, 0.236116f, 0.971708f},
{ -0.006888f, 0.270190f, -0.962783f},
{ 0.653896f, 0.661542f, 0.367128f},
{ 0.815772f, 0.179363f, -0.549859f},
{ -0.071153f, -0.226807f, 0.971337f},
{ -0.137839f, -0.866841f, -0.479153f},
{ 0.933439f, 0.333787f, -0.131447f},
{ 0.694853f, -0.540035f, -0.474912f},
{ -0.648016f, 0.217169f, 0.730009f},
{ -0.777485f, -0.527653f, -0.342197f},
{ 0.873268f, 0.455626f, 0.172648f},
{ 0.706337f, -0.694272f, -0.138110f},
{ -0.600840f, 0.792059f, -0.107860f},
{ -0.848783f, -0.346334f, -0.399526f},
{ 0.003439f, 0.198544f, 0.980086f},
{ 0.795181f, 0.258954f, 0.548297f},
{ 0.817836f, 0.320063f, -0.478231f},
{ -0.003470f, 0.322583f, -0.946535f},
{ -0.958716f, 0.258328f, -0.118870f},
{ -0.904768f, 0.139995f, -0.402240f},
{ -0.826605f, -0.305211f, -0.472832f},
{ -0.857718f, -0.284821f, -0.428015f},
{ -0.549456f, 0.807995f, -0.212704f},
{ -0.363846f, 0.422599f, -0.830076f},
{ -0.485922f, 0.176131f, -0.856071f},
{ -0.520281f, -0.839579f, -0.156254f},
{ -0.238558f, 0.273590f, 0.931793f},
{ -0.414372f, 0.019809f, 0.909892f},
{ -0.188089f, -0.146191f, 0.971211f},
{ -0.517274f, -0.046458f, 0.854558f},
{ -0.453143f, 0.291501f, 0.842430f},
{ -0.383691f, -0.837850f, -0.388315f},
{ 0.760938f, 0.207942f, 0.614601f},
{ 0.216585f, -0.815347f, -0.536936f},
{ -0.530591f, 0.659715f, -0.532212f},
{ -0.394836f, 0.650521f, 0.648789f},
{ -0.184177f, -0.832712f, -0.522177f},
{ 0.745605f, -0.504231f, 0.435689f},
{ -0.879668f, -0.457422f, 0.130194f},
{ -0.068130f, -0.071473f, 0.995113f},
{ -0.713502f, -0.210328f, 0.668339f},
{ -0.694664f, -0.024182f, -0.718927f},
{ -0.824472f, 0.060119f, -0.562700f},
{ -0.838159f, 0.041448f, 0.543850f},
{ -0.826772f, 0.292302f, -0.480633f},
{ -0.748252f, 0.280565f, 0.601168f},
{ -0.461705f, -0.312710f, -0.830085f},
{ -0.908354f, 0.365182f, -0.203804f},
{ -0.293523f, 0.191678f, 0.936538f},
{ 0.928052f, -0.351231f, 0.123919f},
{ -0.126987f, -0.348426f, -0.928695f},
{ -0.932363f, 0.095843f, -0.348587f},
{ 0.103504f, 0.235308f, 0.966394f},
{ 0.955485f, -0.197409f, 0.219266f},
{ -0.951023f, 0.175810f, -0.254257f},
{ -0.105711f, -0.346328f, -0.932139f},
{ 0.088978f, 0.596847f, 0.797406f},
{ 0.979487f, 0.067240f, 0.189959f},
{ -0.791700f, 0.256926f, 0.554257f},
{ -0.820615f, 0.320510f, -0.473144f},
{ -0.948897f, 0.055006f, -0.310754f},
{ -0.930596f, 0.044106f, -0.363382f},
{ -0.879145f, 0.050222f, -0.473900f},
{ -0.867994f, 0.040163f, -0.494949f},
{ -0.948040f, 0.033277f, -0.316405f},
{ -0.948040f, 0.033277f, -0.316405f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: block Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86