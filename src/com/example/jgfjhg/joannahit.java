package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class joannahit {

static String TextureName = "joannahit.mtl";

static int Vertices = 249;

static int VertTexts = 156;

static int Normals = 96;

static int Faces = 170;

static int FacesB = 0;

static int SmoothGroups = 4;

static float VertArray[] = new float[]{
 0.273082f, 0.719266f, -1.209155f,
 0.829321f, 0.806233f, -1.396615f,
 1.021455f, 0.634172f, -0.829302f,
 0.459072f, 0.569553f, -0.667437f,
 0.283554f, 0.064746f, -1.383834f,
 0.863753f, 0.061373f, -1.495291f,
 1.227995f, 0.061372f, 0.597434f,
 0.647718f, 0.061363f, 0.697606f,
 0.020554f, 3.456408f, -0.329976f,
 0.778081f, 3.546192f, -0.406937f,
 1.018970f, 3.560644f, 0.432740f,
 0.290269f, 3.473789f, 0.611242f,
 0.660515f, 2.108712f, 0.511553f,
 1.153225f, 2.161213f, 0.367494f,
 0.976241f, 2.327653f, -0.163900f,
 0.473903f, 2.292660f, -0.007581f,
 -0.100557f, 7.774198f, -0.501932f,
 -0.633407f, 6.876259f, 0.518366f,
 -0.439696f, 6.392091f, -1.145034f,
 -0.244625f, 7.609164f, -1.241303f,
 -1.349776f, 7.713436f, -0.256367f,
 0.424284f, 6.725686f, 0.027197f,
 0.466199f, 6.514295f, -0.857715f,
 -0.592709f, 5.171452f, -0.190674f,
 0.076451f, 5.191221f, -0.482303f,
 0.527921f, 5.198752f, -0.073216f,
 0.221325f, 5.098471f, 0.623990f,
 -1.242569f, 8.963490f, -0.387489f,
 -0.607172f, 8.655832f, -0.090071f,
 -0.686519f, 7.802975f, -0.024996f,
 -0.482872f, 7.450618f, -0.358499f,
 1.185197f, 6.802855f, -0.258920f,
 -0.148601f, 8.762214f, -1.281678f,
 -0.023485f, 8.548153f, -0.565295f,
 -0.285189f, 7.299260f, -0.810401f,
 1.222437f, 6.798341f, -0.721720f,
 0.795280f, 7.449230f, -0.287313f,
 0.829510f, 7.395416f, -0.774823f,
 1.655462f, 5.786170f, -0.397692f,
 1.967646f, 6.016277f, -0.440657f,
 1.983463f, 6.015330f, -0.878262f,
 1.687270f, 5.795482f, -0.889931f,
 -0.899022f, 7.457513f, -0.239289f,
 -0.297253f, 7.267151f, -1.155066f,
 3.012693f, 4.435079f, 0.061870f,
 3.193414f, 5.118247f, -0.071528f,
 3.206658f, 5.116018f, -0.587998f,
 3.012879f, 4.543410f, -0.751277f,
 -0.214207f, 2.303622f, 0.093756f,
 1.439305f, 3.373994f, 0.506340f,
 1.142069f, 3.136996f, -0.679999f,
 0.722454f, 3.626125f, 1.490928f,
 -2.199090f, 7.170141f, -0.305087f,
 -2.314010f, 6.588562f, 0.175699f,
 -2.279663f, 6.860855f, -0.654675f,
 -2.397230f, 6.300014f, -0.146263f,
 -1.404399f, 8.655585f, -1.070060f,
 -0.820996f, 8.547640f, -1.545117f,
 -0.479077f, 5.200864f, 0.928692f,
 -0.884097f, 5.190967f, 0.478117f,
 -1.594109f, 6.668602f, 0.184977f,
 -1.653922f, 6.172169f, -0.580707f,
 -1.031187f, 7.227927f, -1.115052f,
 -1.223179f, 7.406916f, -0.675517f,
 -1.483586f, 7.802866f, -1.005424f,
 -0.898049f, 7.773752f, -1.481778f,
 -2.238952f, 6.598559f, 2.301484f,
 -2.584622f, 5.857103f, 2.384370f,
 -2.844362f, 6.586377f, 1.910404f,
 -3.030953f, 6.112899f, 2.013305f,
 -2.322395f, 5.713804f, 0.665570f,
 -2.467199f, 5.330148f, 0.539210f,
 -2.816344f, 5.448780f, 0.537391f,
 -2.704096f, 5.794600f, 0.651787f,
 -1.075501f, 3.798073f, 1.798184f,
 -1.111355f, 3.007542f, 1.112789f,
 -0.303814f, 0.572743f, 1.747182f,
 -0.880112f, 0.584962f, 1.657246f,
 -0.996936f, 0.784946f, 2.235755f,
 -0.419431f, 0.770400f, 2.348247f,
 -0.284763f, 0.061682f, 1.593596f,
 -0.863753f, 0.061374f, 1.504708f,
 -1.227995f, 0.061371f, 3.597430f,
 -0.647717f, 0.061373f, 3.695955f,
 0.113368f, 3.293929f, 0.888702f,
 -0.643463f, 3.401713f, 0.887010f,
 -0.769884f, 3.901121f, 1.590348f,
 -0.025455f, 3.864250f, 1.712552f,
 -0.431080f, 2.699440f, 2.415158f,
 -0.936121f, 2.719620f, 2.334630f,
 -0.830494f, 2.531040f, 1.768062f,
 -0.319793f, 2.498760f, 1.772227f,
 2.542862f, 6.957972f, 5.399336f,
 2.681695f, 5.913167f, 5.650126f,
 2.725766f, 5.241844f, -1.754100f,
 2.850079f, 4.223911f, -1.508495f,
 0.473903f, 2.292660f, -0.007581f,
 0.473903f, 2.292660f, -0.007581f,
 0.020554f, 3.456408f, -0.329976f,
 0.273082f, 0.719266f, -1.209155f,
 0.283554f, 0.064746f, -1.383834f,
 0.283554f, 0.064746f, -1.383834f,
 0.273082f, 0.719266f, -1.209155f,
 0.283554f, 0.064746f, -1.383834f,
 0.459072f, 0.569553f, -0.667437f,
 0.459072f, 0.569553f, -0.667437f,
 0.283554f, 0.064746f, -1.383834f,
 0.647718f, 0.061363f, 0.697606f,
 0.459072f, 0.569553f, -0.667437f,
 0.647718f, 0.061363f, 0.697606f,
 0.647718f, 0.061363f, 0.697606f,
 1.021455f, 0.634172f, -0.829302f,
 1.021455f, 0.634172f, -0.829302f,
 1.021455f, 0.634172f, -0.829302f,
 1.021455f, 0.634172f, -0.829302f,
 0.829321f, 0.806233f, -1.396615f,
 0.829321f, 0.806233f, -1.396615f,
 0.473903f, 2.292660f, -0.007581f,
 0.473903f, 2.292660f, -0.007581f,
 0.829321f, 0.806233f, -1.396615f,
 0.273082f, 0.719266f, -1.209155f,
 -0.482872f, 7.450618f, -0.358499f,
 -0.482872f, 7.450618f, -0.358499f,
 0.424284f, 6.725686f, 0.027197f,
 0.424284f, 6.725686f, 0.027197f,
 -0.482872f, 7.450618f, -0.358499f,
 -0.482872f, 7.450618f, -0.358499f,
 -0.285189f, 7.299260f, -0.810401f,
 -0.285189f, 7.299260f, -0.810401f,
 -0.285189f, 7.299260f, -0.810401f,
 -0.482872f, 7.450618f, -0.358499f,
 -0.482872f, 7.450618f, -0.358499f,
 0.424284f, 6.725686f, 0.027197f,
 0.466199f, 6.514295f, -0.857715f,
 1.655462f, 5.786170f, -0.397692f,
 1.655462f, 5.786170f, -0.397692f,
 0.466199f, 6.514295f, -0.857715f,
 0.466199f, 6.514295f, -0.857715f,
 0.424284f, 6.725686f, 0.027197f,
 3.012693f, 4.435079f, 0.061870f,
 3.012693f, 4.435079f, 0.061870f,
 1.655462f, 5.786170f, -0.397692f,
 3.012879f, 4.543410f, -0.751277f,
 3.012879f, 4.543410f, -0.751277f,
 1.655462f, 5.786170f, -0.397692f,
 0.466199f, 6.514295f, -0.857715f,
 0.466199f, 6.514295f, -0.857715f,
 -0.285189f, 7.299260f, -0.810401f,
 -0.285189f, 7.299260f, -0.810401f,
 3.012879f, 4.543410f, -0.751277f,
 -0.214207f, 2.303622f, 0.093756f,
 1.142069f, 3.136996f, -0.679999f,
 0.722454f, 3.626125f, 1.490928f,
 0.722454f, 3.626125f, 1.490928f,
 1.142069f, 3.136996f, -0.679999f,
 1.439305f, 3.373994f, 0.506340f,
 -1.242569f, 8.963490f, -0.387489f,
 -0.148601f, 8.762214f, -1.281678f,
 -0.148601f, 8.762214f, -1.281678f,
 -0.633407f, 6.876259f, 0.518366f,
 -1.223179f, 7.406916f, -0.675517f,
 -0.633407f, 6.876259f, 0.518366f,
 -0.899022f, 7.457513f, -0.239289f,
 -1.223179f, 7.406916f, -0.675517f,
 -1.594109f, 6.668602f, 0.184977f,
 -1.594109f, 6.668602f, 0.184977f,
 -0.899022f, 7.457513f, -0.239289f,
 -1.349776f, 7.713436f, -0.256367f,
 -1.223179f, 7.406916f, -0.675517f,
 -1.349776f, 7.713436f, -0.256367f,
 -1.223179f, 7.406916f, -0.675517f,
 -0.297253f, 7.267151f, -1.155066f,
 -1.031187f, 7.227927f, -1.115052f,
 -0.244625f, 7.609164f, -1.241303f,
 -1.031187f, 7.227927f, -1.115052f,
 -0.244625f, 7.609164f, -1.241303f,
 -1.031187f, 7.227927f, -1.115052f,
 -1.223179f, 7.406916f, -0.675517f,
 -1.223179f, 7.406916f, -0.675517f,
 0.221325f, 5.098471f, 0.623990f,
 -0.633407f, 6.876259f, 0.518366f,
 -0.633407f, 6.876259f, 0.518366f,
 -1.594109f, 6.668602f, 0.184977f,
 -2.322395f, 5.713804f, 0.665570f,
 -1.653922f, 6.172169f, -0.580707f,
 -2.322395f, 5.713804f, 0.665570f,
 -1.653922f, 6.172169f, -0.580707f,
 -1.653922f, 6.172169f, -0.580707f,
 -1.594109f, 6.668602f, 0.184977f,
 -2.238952f, 6.598559f, 2.301484f,
 -2.238952f, 6.598559f, 2.301484f,
 -2.584622f, 5.857103f, 2.384370f,
 -2.322395f, 5.713804f, 0.665570f,
 -2.584622f, 5.857103f, 2.384370f,
 -2.322395f, 5.713804f, 0.665570f,
 -1.653922f, 6.172169f, -0.580707f,
 -1.653922f, 6.172169f, -0.580707f,
 -1.031187f, 7.227927f, -1.115052f,
 -0.439696f, 6.392091f, -1.145034f,
 -1.031187f, 7.227927f, -1.115052f,
 -0.297253f, 7.267151f, -1.155066f,
 -0.439696f, 6.392091f, -1.145034f,
 -2.584622f, 5.857103f, 2.384370f,
 -0.244625f, 7.609164f, -1.241303f,
 -0.148601f, 8.762214f, -1.281678f,
 -0.244625f, 7.609164f, -1.241303f,
 -1.242569f, 8.963490f, -0.387489f,
 -1.349776f, 7.713436f, -0.256367f,
 -1.349776f, 7.713436f, -0.256367f,
 -0.592709f, 5.171452f, -0.190674f,
 -0.439696f, 6.392091f, -1.145034f,
 -0.592709f, 5.171452f, -0.190674f,
 -0.214207f, 2.303622f, 0.093756f,
 -0.592709f, 5.171452f, -0.190674f,
 -0.592709f, 5.171452f, -0.190674f,
 0.722454f, 3.626125f, 1.490928f,
 0.221325f, 5.098471f, 0.623990f,
 0.221325f, 5.098471f, 0.623990f,
 -0.214207f, 2.303622f, 0.093756f,
 0.722454f, 3.626125f, 1.490928f,
 -1.111355f, 3.007542f, 1.112789f,
 0.722454f, 3.626125f, 1.490928f,
 -1.075501f, 3.798073f, 1.798184f,
 -1.111355f, 3.007542f, 1.112789f,
 -0.319793f, 2.498760f, 1.772227f,
 0.113368f, 3.293929f, 0.888702f,
 -0.319793f, 2.498760f, 1.772227f,
 -0.303814f, 0.572743f, 1.747182f,
 -0.284763f, 0.061682f, 1.593596f,
 -0.284763f, 0.061682f, 1.593596f,
 -0.303814f, 0.572743f, 1.747182f,
 -0.419431f, 0.770400f, 2.348247f,
 -0.284763f, 0.061682f, 1.593596f,
 -0.419431f, 0.770400f, 2.348247f,
 -0.647717f, 0.061373f, 3.695955f,
 -0.284763f, 0.061682f, 1.593596f,
 -0.419431f, 0.770400f, 2.348247f,
 -0.647717f, 0.061373f, 3.695955f,
 -0.647717f, 0.061373f, 3.695955f,
 -0.996936f, 0.784946f, 2.235755f,
 -0.996936f, 0.784946f, 2.235755f,
 -0.996936f, 0.784946f, 2.235755f,
 -0.880112f, 0.584962f, 1.657246f,
 -0.996936f, 0.784946f, 2.235755f,
 -0.319793f, 2.498760f, 1.772227f,
 -0.880112f, 0.584962f, 1.657246f,
 -0.319793f, 2.498760f, 1.772227f,
 -0.303814f, 0.572743f, 1.747182f,
 -0.880112f, 0.584962f, 1.657246f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.453876f, 0.791903f,
 0.201824f, 0.532079f,
 0.590263f, 0.596995f,
 0.556897f, 0.779659f,
 0.235400f, 0.777966f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.566387f, 0.397259f,
 0.470805f, 0.365178f,
 0.365778f, 0.346308f,
 0.249833f, 0.335338f,
 0.289739f, 0.984705f,
 0.362886f, 0.905310f,
 0.354538f, 0.788048f,
 0.662213f, 0.973243f,
 0.649436f, 0.842323f,
 0.523433f, 0.983917f,
 0.451956f, 0.900429f,
 0.700374f, 0.973112f,
 0.714202f, 0.842324f,
 0.662213f, 0.871337f,
 0.700374f, 0.871169f,
 0.611238f, 0.659338f,
 0.649436f, 0.659338f,
 0.714202f, 0.659338f,
 0.749335f, 0.659338f,
 0.262276f, 0.714547f,
 0.539459f, 0.732725f,
 0.635368f, 0.320085f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.727698f, 0.329948f,
 0.754615f, 0.048462f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.147427f, 0.097935f,
 0.662213f, 0.871337f,
 0.649436f, 0.842323f,
 0.700374f, 0.871169f,
 0.714202f, 0.842324f,
 0.362886f, 0.905310f,
 0.451956f, 0.900429f,
 0.365778f, 0.346308f,
 0.470805f, 0.365178f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.700374f, 0.973112f,
 0.662213f, 0.973243f,
 0.354538f, 0.788048f,
 0.453876f, 0.791903f,
 0.635368f, 0.320085f,
 0.727698f, 0.329948f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.611238f, 0.659338f,
 0.749335f, 0.659338f,
 0.714202f, 0.659338f,
 0.649436f, 0.659338f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.829311f, 0.001810f,
 0.999173f, 0.001810f,
 0.829311f, 0.998093f,
 0.999173f, 0.998093f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.132466f, 0.001616f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.326300f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.806916f, 0.873085f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.749335f, 0.410462f,
 0.747690f, 0.223911f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.737676f, 0.256798f,
 0.289739f, 0.984705f,
 0.523433f, 0.983917f,
 0.523433f, 0.983917f,
 0.201824f, 0.532079f,
 0.353637f, 0.718421f,
 0.201824f, 0.532079f,
 0.262276f, 0.714547f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.262276f, 0.714547f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.539459f, 0.732725f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.249833f, 0.335338f,
 0.201824f, 0.532079f,
 0.201824f, 0.532079f,
 0.806916f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.590263f, 0.596995f,
 0.452577f, 0.721572f,
 0.539459f, 0.732725f,
 0.590263f, 0.596995f,
 0.749335f, 0.410462f,
 0.556897f, 0.779659f,
 0.523433f, 0.983917f,
 0.556897f, 0.779659f,
 0.289739f, 0.984705f,
 0.235400f, 0.777966f,
 0.235400f, 0.777966f,
 0.566387f, 0.397259f,
 0.590263f, 0.596995f,
 0.566387f, 0.397259f,
 0.754615f, 0.048462f,
 0.566387f, 0.397259f,
 0.566387f, 0.397259f,
 0.147427f, 0.097935f,
 0.249833f, 0.335338f,
 0.249833f, 0.335338f,
 0.747690f, 0.223911f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.737676f, 0.256798f,
 0.756142f, 0.248493f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.196341f, 0.621715f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.132466f, 0.001616f,
 0.063514f, 0.126699f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.102748f, 0.326300f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.326300f,
 0.148951f, 0.326300f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.503382f, -0.836951f, -0.214755f},
{ 0.444372f, -0.809448f, -0.383833f},
{ -0.339468f, -0.705784f, 0.621796f},
{ 0.571285f, -0.671364f, 0.472127f},
{ -0.523567f, -0.211028f, 0.825436f},
{ -0.350760f, -0.374954f, 0.858124f},
{ 0.864358f, 0.067067f, 0.498385f},
{ 0.856900f, -0.205948f, 0.472555f},
{ -0.779803f, -0.429860f, -0.455113f},
{ -0.958866f, -0.026991f, -0.282573f},
{ 0.649186f, 0.276354f, -0.708650f},
{ 0.574478f, -0.115438f, -0.810339f},
{ -0.839368f, 0.334073f, -0.428785f},
{ 0.365067f, 0.466122f, -0.805889f},
{ 0.994070f, 0.042385f, 0.100147f},
{ -0.811263f, 0.054769f, 0.582111f},
{ 0.231108f, 0.756299f, 0.612047f},
{ 0.567977f, 0.313319f, 0.761074f},
{ 0.252025f, 0.577918f, -0.776205f},
{ 0.460810f, 0.432372f, -0.775054f},
{ -0.465431f, 0.804190f, 0.369665f},
{ 0.201555f, 0.560280f, 0.803407f},
{ 0.644708f, 0.564574f, -0.515372f},
{ 0.910496f, 0.318282f, 0.263995f},
{ 0.939624f, 0.339962f, -0.039142f},
{ 0.211361f, 0.010066f, -0.977356f},
{ 0.422785f, -0.022934f, 0.905940f},
{ 0.287032f, -0.524146f, -0.801801f},
{ 0.504541f, 0.431551f, -0.747798f},
{ 0.318962f, 0.616936f, 0.719481f},
{ 0.042804f, 0.440579f, 0.896693f},
{ -0.392363f, 0.499617f, 0.772291f},
{ -0.764098f, -0.110830f, 0.635509f},
{ 0.122001f, -0.173005f, 0.977336f},
{ 0.432035f, -0.151972f, -0.888960f},
{ 0.695689f, -0.228759f, -0.680945f},
{ 0.914533f, -0.167301f, 0.368293f},
{ 0.584915f, 0.480989f, 0.653088f},
{ -0.424425f, -0.717823f, 0.551900f},
{ -0.310343f, -0.739127f, -0.597811f},
{ 0.426948f, 0.419288f, 0.801195f},
{ 0.656541f, 0.431485f, -0.618688f},
{ -0.533949f, -0.663252f, 0.524399f},
{ -0.420547f, -0.568701f, -0.706908f},
{ 0.506790f, 0.521394f, -0.686522f},
{ 0.475963f, 0.652740f, 0.589398f},
{ 0.001184f, -0.400310f, -0.916379f},
{ 0.991472f, 0.079169f, 0.103521f},
{ 0.412317f, -0.338500f, -0.845820f},
{ -0.560221f, -0.326884f, -0.761118f},
{ -0.303040f, -0.825057f, -0.476915f},
{ 0.564836f, -0.115036f, 0.817146f},
{ -0.382978f, 0.881261f, 0.276960f},
{ -0.583000f, 0.013421f, -0.812362f},
{ -0.470709f, 0.580815f, 0.664144f},
{ -0.744548f, -0.283688f, -0.604293f},
{ -0.758354f, 0.550981f, -0.348311f},
{ -0.090120f, 0.328369f, -0.940241f},
{ -0.010497f, 0.360701f, 0.932622f},
{ -0.288682f, 0.253754f, 0.923186f},
{ -0.989018f, -0.128285f, 0.073390f},
{ -0.426591f, -0.661900f, -0.616367f},
{ -0.373443f, -0.128168f, -0.918756f},
{ -0.746312f, 0.629513f, 0.216176f},
{ -0.913458f, -0.201507f, -0.353537f},
{ -0.210949f, -0.267459f, -0.940195f},
{ 0.929211f, 0.319075f, 0.186438f},
{ -0.275817f, 0.929454f, -0.245034f},
{ 0.418140f, -0.748275f, 0.515018f},
{ -0.919031f, -0.350405f, 0.180552f},
{ 0.950863f, -0.063239f, 0.303084f},
{ 0.218369f, -0.969437f, -0.111835f},
{ -0.740126f, -0.641022f, -0.203236f},
{ -0.654645f, 0.726486f, -0.208945f},
{ -0.489730f, 0.076784f, 0.868487f},
{ -0.784896f, -0.618490f, 0.037530f},
{ 0.593307f, -0.797252f, -0.111250f},
{ 0.502599f, -0.572523f, 0.647775f},
{ -0.528965f, -0.793117f, -0.301930f},
{ -0.695893f, -0.567872f, 0.439606f},
{ 0.643338f, 0.200611f, 0.738831f},
{ -0.788458f, 0.403724f, 0.464048f},
{ 0.552681f, 0.115128f, 0.825402f},
{ -0.793303f, 0.178062f, 0.582206f},
{ 0.743319f, -0.635835f, -0.207826f},
{ 0.898831f, -0.271995f, -0.343689f},
{ -0.795566f, -0.091931f, -0.598852f},
{ -0.705413f, -0.433857f, -0.560500f},
{ 0.798822f, 0.054315f, -0.599111f},
{ -0.527532f, 0.079989f, -0.845761f},
{ -0.949022f, 0.212416f, 0.232889f},
{ 0.802935f, 0.210458f, 0.557676f},
{ 0.991454f, 0.130325f, -0.005915f},
{ 0.991573f, 0.129416f, -0.005832f},
{ 0.992637f, 0.121020f, -0.005064f},
{ 0.992757f, 0.120039f, -0.004975f}};

static int[] FaceArray = new int[]{
4, 5, 7,
7, 5, 6,
11, 12, 10,
10, 12, 13,
8, 15, 11,
11, 15, 12,
14, 96, 9,
9, 97, 98,
13, 14, 10,
10, 14, 9,
99, 1, 100,
101, 1, 5,
1, 2, 5,
5, 2, 6,
102, 103, 104,
105, 106, 107,
108, 109, 2,
2, 110, 6,
13, 12, 111,
112, 12, 3,
13, 113, 14,
14, 114, 115,
14, 116, 117,
118, 119, 120,
12, 15, 3,
3, 15, 0,
36, 31, 37,
37, 31, 35,
27, 28, 32,
32, 28, 33,
25, 24, 21,
21, 24, 22,
37, 34, 36,
36, 34, 30,
21, 121, 17,
17, 122, 42,
31, 36, 123,
124, 36, 30,
42, 125, 20,
20, 126, 29,
43, 19, 127,
128, 19, 16,
129, 16, 130,
131, 16, 29,
29, 16, 28,
28, 16, 33,
26, 25, 17,
17, 25, 21,
44, 47, 45,
45, 47, 46,
132, 133, 134,
135, 136, 41,
137, 35, 41,
41, 35, 40,
138, 38, 31,
31, 38, 39,
31, 39, 35,
35, 39, 40,
39, 38, 45,
45, 38, 139,
140, 141, 142,
143, 144, 41,
40, 39, 46,
46, 39, 45,
35, 145, 37,
37, 146, 34,
22, 18, 147,
148, 18, 43,
149, 41, 46,
46, 41, 40,
16, 19, 33,
33, 19, 32,
27, 20, 28,
28, 20, 29,
25, 49, 24,
24, 49, 50,
24, 23, 22,
22, 23, 18,
48, 23, 50,
50, 23, 24,
51, 49, 26,
26, 49, 25,
150, 151, 152,
153, 154, 155,
52, 54, 53,
54, 55, 53,
156, 157, 56,
158, 57, 56,
58, 60, 59,
60, 61, 59,
54, 52, 62,
52, 63, 62,
60, 159, 160,
161, 162, 163,
53, 164, 52,
165, 63, 52,
166, 167, 168,
169, 64, 170,
171, 172, 173,
174, 65, 175,
176, 177, 65,
178, 64, 65,
64, 56, 65,
56, 57, 65,
179, 180, 58,
181, 60, 58,
66, 68, 67,
68, 69, 67,
182, 183, 184,
185, 71, 186,
187, 71, 55,
71, 72, 55,
188, 53, 70,
53, 73, 70,
53, 55, 73,
55, 72, 73,
73, 68, 70,
68, 189, 70,
190, 191, 192,
193, 71, 194,
72, 69, 73,
69, 68, 73,
55, 54, 195,
54, 62, 196,
61, 197, 198,
199, 200, 201,
202, 69, 71,
69, 72, 71,
65, 57, 203,
57, 204, 205,
206, 56, 207,
56, 64, 208,
58, 59, 74,
59, 75, 74,
59, 61, 209,
61, 210, 211,
212, 75, 213,
75, 59, 214,
215, 216, 74,
217, 58, 74,
218, 219, 220,
221, 222, 223,
80, 83, 81,
83, 82, 81,
87, 86, 88,
86, 89, 88,
84, 87, 91,
87, 88, 91,
90, 85, 224,
85, 225, 226,
89, 86, 90,
86, 85, 90,
227, 228, 77,
229, 81, 77,
77, 81, 78,
81, 82, 78,
230, 231, 232,
233, 234, 235,
236, 78, 237,
78, 82, 238,
89, 239, 88,
240, 79, 88,
89, 90, 241,
90, 242, 243,
90, 244, 245,
246, 247, 248,
88, 79, 91,
79, 76, 91,
92, 93, 94,
94, 93, 95, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 249  Texture Co-ords: 156  Normals: 96  Texture: joannahit.mtl Faces: 170 Smooth Groups: 4 sucess: 80 Doubles: 90 Redos needed: 153 Correct: 117