package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phablockb {

static String TextureName = "block";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.855276f, 0.717890f,
 0.936363f, 9.546576f, 0.793428f,
 0.791186f, 9.023396f, -0.525197f,
 0.817567f, 8.086690f, -0.713757f,
 0.562201f, 9.629532f, 0.829529f,
 0.444292f, 9.426693f, -0.611435f,
 0.371258f, 7.923222f, -0.803435f,
 0.442211f, 7.855136f, 0.720998f,
 0.033961f, 7.842572f, 1.002321f,
 0.033961f, 9.796875f, 0.897057f,
 0.033961f, 9.592265f, -0.604040f,
 0.033961f, 7.927127f, -0.890878f,
 0.033961f, 9.935073f, 0.123496f,
 0.541219f, 9.833223f, 0.118947f,
 0.936363f, 9.555739f, 0.590856f,
 0.936363f, 7.866796f, 0.459938f,
 0.429582f, 7.869752f, 0.393747f,
 0.033961f, 7.869752f, 0.393747f,
 0.445001f, 7.605474f, 0.904429f,
 0.782250f, 7.604168f, 0.933649f,
 0.432372f, 7.266496f, 0.898967f,
 0.782250f, 7.263539f, 0.965161f,
 1.200907f, 7.545954f, -0.674560f,
 0.776421f, 7.569145f, 0.380321f,
 0.033961f, 7.601112f, 0.344641f,
 0.033961f, 7.550600f, -0.778383f,
 0.700363f, 4.587032f, -0.057915f,
 0.684600f, 4.682535f, 0.632212f,
 0.033961f, 4.706143f, 0.802747f,
 0.033961f, 4.531497f, -0.459282f,
 0.971581f, 6.736232f, 0.686746f,
 0.997360f, 6.578138f, -0.455670f,
 0.033961f, 6.724753f, -0.632570f,
 0.033961f, 6.863042f, 0.909177f,
 1.813281f, -0.149204f, -0.968262f,
 1.773807f, -0.249705f, 1.372020f,
 0.041906f, -0.274557f, 1.876451f,
 0.027805f, -0.110680f, -1.643825f,
 1.514834f, 7.202672f, -0.138442f,
 1.068113f, 7.664498f, 0.174982f,
 0.729659f, 7.288501f, 0.504572f,
 1.242205f, 6.754118f, 0.139136f,
 2.125332f, 6.858335f, 1.585429f,
 1.891196f, 7.128709f, 1.633913f,
 1.627532f, 6.975789f, 1.638484f,
 1.897508f, 6.663556f, 1.580033f,
 2.453398f, 6.428580f, 3.503210f,
 1.968133f, 6.989777f, 3.608170f,
 1.456117f, 6.684505f, 3.546962f,
 1.999881f, 6.055178f, 3.425849f,
 0.041391f, 2.255263f, 1.308593f,
 1.173886f, 2.257479f, 1.168026f,
 1.197358f, 2.282212f, -0.310777f,
 0.027262f, 2.292076f, -0.695895f,
 -0.868441f, 9.555739f, 0.590856f,
 -0.868441f, 7.866796f, 0.459938f,
 -0.749646f, 8.086690f, -0.713757f,
 -0.723264f, 9.023396f, -0.525197f,
 -0.376369f, 9.426693f, -0.611435f,
 -0.473295f, 9.833223f, 0.118947f,
 -0.303336f, 7.923222f, -0.803435f,
 -0.361660f, 7.869752f, 0.393747f,
 -0.374288f, 7.855136f, 0.720998f,
 -1.204989f, 7.855276f, 0.717890f,
 -0.868441f, 9.546576f, 0.793428f,
 -0.494279f, 9.629532f, 0.829529f,
 -0.714328f, 7.604168f, 0.933649f,
 -0.377078f, 7.605474f, 0.904429f,
 -0.364450f, 7.266496f, 0.898967f,
 -0.714328f, 7.263539f, 0.965161f,
 -0.708500f, 7.569145f, 0.380321f,
 -1.132985f, 7.545954f, -0.674560f,
 -2.157384f, 4.414194f, 2.523202f,
 -2.406706f, 5.059082f, 2.811989f,
 -1.880115f, 5.316785f, 2.936036f,
 -1.599710f, 4.595030f, 2.609169f,
 -0.903658f, 6.736232f, 0.686746f,
 -0.929437f, 6.578138f, -0.455670f,
 -0.616678f, 4.682535f, 0.632212f,
 -0.632440f, 4.587032f, -0.057915f,
 -1.093140f, 2.256474f, 1.181269f,
 -1.137451f, 2.280160f, -0.293714f,
 -1.476689f, 7.309621f, 0.115845f,
 -1.220732f, 6.816091f, -0.333591f,
 -1.157788f, 7.185770f, 0.613356f,
 -0.858282f, 6.618644f, 0.093282f,
 -2.135006f, 5.829574f, 1.007708f,
 -2.015429f, 5.517937f, 0.870387f,
 -1.873865f, 5.952929f, 1.105243f,
 -1.735133f, 5.594159f, 0.944524f,
 -1.694103f, -0.251816f, 1.383935f,
 -1.752559f, -0.150038f, -0.956253f,
 1.559564f, 6.758971f, 2.917558f,
 1.933847f, 6.976048f, 2.911069f,
 2.266215f, 6.592238f, 2.842243f,
 1.942808f, 6.315742f, 2.834583f,
 -1.883378f, 5.478364f, 2.314523f,
 -1.686442f, 4.969074f, 2.086374f,
 -2.084335f, 4.860874f, 1.981133f,
 -2.254079f, 5.303257f, 2.176068f,
 5.491337f, 2.843434f, 1.907414f,
 5.595707f, 2.773533f, 2.672860f,
 -1.370440f, 10.362797f, 2.859249f,
 -1.360728f, 9.862556f, 4.978067f,
 -0.113501f, 8.779328f, 3.213703f,
 -0.009131f, 8.709427f, 3.979150f,
 0.791186f, 9.023396f, -0.525197f,
 0.791186f, 9.023396f, -0.525197f,
 0.936363f, 9.555739f, 0.590856f,
 0.817567f, 8.086690f, -0.713757f,
 0.371258f, 7.923222f, -0.803435f,
 0.791186f, 9.023396f, -0.525197f,
 0.791186f, 9.023396f, -0.525197f,
 0.371258f, 7.923222f, -0.803435f,
 0.371258f, 7.923222f, -0.803435f,
 0.033961f, 9.796875f, 0.897057f,
 0.033961f, 9.796875f, 0.897057f,
 0.562201f, 9.629532f, 0.829529f,
 0.562201f, 9.629532f, 0.829529f,
 0.936363f, 9.555739f, 0.590856f,
 0.936363f, 9.555739f, 0.590856f,
 0.562201f, 9.629532f, 0.829529f,
 0.936363f, 9.546576f, 0.793428f,
 1.272911f, 7.855276f, 0.717890f,
 0.936363f, 9.546576f, 0.793428f,
 0.936363f, 9.546576f, 0.793428f,
 0.429582f, 7.869752f, 0.393747f,
 0.442211f, 7.855136f, 0.720998f,
 0.442211f, 7.855136f, 0.720998f,
 0.033961f, 7.842572f, 1.002321f,
 0.442211f, 7.855136f, 0.720998f,
 0.445001f, 7.605474f, 0.904429f,
 0.445001f, 7.605474f, 0.904429f,
 0.432372f, 7.266496f, 0.898967f,
 0.432372f, 7.266496f, 0.898967f,
 0.432372f, 7.266496f, 0.898967f,
 0.782250f, 7.263539f, 0.965161f,
 1.272911f, 7.855276f, 0.717890f,
 0.782250f, 7.604168f, 0.933649f,
 0.782250f, 7.604168f, 0.933649f,
 0.782250f, 7.263539f, 0.965161f,
 0.429582f, 7.869752f, 0.393747f,
 0.776421f, 7.569145f, 0.380321f,
 0.371258f, 7.923222f, -0.803435f,
 0.371258f, 7.923222f, -0.803435f,
 0.776421f, 7.569145f, 0.380321f,
 1.200907f, 7.545954f, -0.674560f,
 0.033961f, 7.601112f, 0.344641f,
 0.429582f, 7.869752f, 0.393747f,
 0.429582f, 7.869752f, 0.393747f,
 0.033961f, 7.601112f, 0.344641f,
 0.776421f, 7.569145f, 0.380321f,
 0.033961f, 7.927127f, -0.890878f,
 0.371258f, 7.923222f, -0.803435f,
 0.033961f, 7.550600f, -0.778383f,
 0.033961f, 7.550600f, -0.778383f,
 0.371258f, 7.923222f, -0.803435f,
 1.200907f, 7.545954f, -0.674560f,
 0.971581f, 6.736232f, 0.686746f,
 0.684600f, 4.682535f, 0.632212f,
 0.700363f, 4.587032f, -0.057915f,
 0.684600f, 4.682535f, 0.632212f,
 0.684600f, 4.682535f, 0.632212f,
 1.173886f, 2.257479f, 1.168026f,
 0.033961f, 4.706143f, 0.802747f,
 0.684600f, 4.682535f, 0.632212f,
 0.684600f, 4.682535f, 0.632212f,
 0.033961f, 4.531497f, -0.459282f,
 0.700363f, 4.587032f, -0.057915f,
 0.700363f, 4.587032f, -0.057915f,
 0.776421f, 7.569145f, 0.380321f,
 1.200907f, 7.545954f, -0.674560f,
 1.200907f, 7.545954f, -0.674560f,
 0.971581f, 6.736232f, 0.686746f,
 0.776421f, 7.569145f, 0.380321f,
 0.776421f, 7.569145f, 0.380321f,
 0.997360f, 6.578138f, -0.455670f,
 0.971581f, 6.736232f, 0.686746f,
 0.971581f, 6.736232f, 0.686746f,
 0.729659f, 7.288501f, 0.504572f,
 1.200907f, 7.545954f, -0.674560f,
 0.997360f, 6.578138f, -0.455670f,
 0.997360f, 6.578138f, -0.455670f,
 0.729659f, 7.288501f, 0.504572f,
 1.627532f, 6.975789f, 1.638484f,
 1.627532f, 6.975789f, 1.638484f,
 1.627532f, 6.975789f, 1.638484f,
 1.559564f, 6.758971f, 2.917558f,
 1.559564f, 6.758971f, 2.917558f,
 1.173886f, 2.257479f, 1.168026f,
 1.773807f, -0.249705f, 1.372020f,
 1.773807f, -0.249705f, 1.372020f,
 -0.868441f, 9.555739f, 0.590856f,
 -0.723264f, 9.023396f, -0.525197f,
 -0.723264f, 9.023396f, -0.525197f,
 -0.749646f, 8.086690f, -0.713757f,
 -0.723264f, 9.023396f, -0.525197f,
 -0.303336f, 7.923222f, -0.803435f,
 -0.303336f, 7.923222f, -0.803435f,
 -0.723264f, 9.023396f, -0.525197f,
 -0.303336f, 7.923222f, -0.803435f,
 -0.494279f, 9.629532f, 0.829529f,
 0.033961f, 9.796875f, 0.897057f,
 0.033961f, 9.796875f, 0.897057f,
 -0.868441f, 9.546576f, 0.793428f,
 -0.494279f, 9.629532f, 0.829529f,
 -0.868441f, 9.555739f, 0.590856f,
 -0.868441f, 9.555739f, 0.590856f,
 -0.494279f, 9.629532f, 0.829529f,
 -0.868441f, 9.546576f, 0.793428f,
 -0.868441f, 9.546576f, 0.793428f,
 -1.204989f, 7.855276f, 0.717890f,
 0.033961f, 7.842572f, 1.002321f,
 -0.374288f, 7.855136f, 0.720998f,
 -0.374288f, 7.855136f, 0.720998f,
 -0.361660f, 7.869752f, 0.393747f,
 -0.374288f, 7.855136f, 0.720998f,
 -0.377078f, 7.605474f, 0.904429f,
 -0.377078f, 7.605474f, 0.904429f,
 -0.364450f, 7.266496f, 0.898967f,
 -0.364450f, 7.266496f, 0.898967f,
 -0.364450f, 7.266496f, 0.898967f,
 -0.714328f, 7.263539f, 0.965161f,
 -0.714328f, 7.263539f, 0.965161f,
 -0.714328f, 7.604168f, 0.933649f,
 -0.714328f, 7.604168f, 0.933649f,
 -1.204989f, 7.855276f, 0.717890f,
 -1.132985f, 7.545954f, -0.674560f,
 -0.708500f, 7.569145f, 0.380321f,
 -0.303336f, 7.923222f, -0.803435f,
 -0.303336f, 7.923222f, -0.803435f,
 -0.708500f, 7.569145f, 0.380321f,
 -0.361660f, 7.869752f, 0.393747f,
 -0.708500f, 7.569145f, 0.380321f,
 0.033961f, 7.601112f, 0.344641f,
 -0.361660f, 7.869752f, 0.393747f,
 -0.361660f, 7.869752f, 0.393747f,
 0.033961f, 7.601112f, 0.344641f,
 0.033961f, 7.927127f, -0.890878f,
 0.033961f, 7.550600f, -0.778383f,
 -0.303336f, 7.923222f, -0.803435f,
 -0.303336f, 7.923222f, -0.803435f,
 0.033961f, 7.550600f, -0.778383f,
 -1.132985f, 7.545954f, -0.674560f,
 -0.903658f, 6.736232f, 0.686746f,
 -0.616678f, 4.682535f, 0.632212f,
 -0.632440f, 4.587032f, -0.057915f,
 -0.616678f, 4.682535f, 0.632212f,
 -0.616678f, 4.682535f, 0.632212f,
 -1.093140f, 2.256474f, 1.181269f,
 -0.616678f, 4.682535f, 0.632212f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.682535f, 0.632212f,
 0.041391f, 2.255263f, 1.308593f,
 0.033961f, 4.706143f, 0.802747f,
 0.033961f, 4.531497f, -0.459282f,
 0.027262f, 2.292076f, -0.695895f,
 -0.632440f, 4.587032f, -0.057915f,
 -0.632440f, 4.587032f, -0.057915f,
 0.027262f, 2.292076f, -0.695895f,
 -1.137451f, 2.280160f, -0.293714f,
 -1.220732f, 6.816091f, -0.333591f,
 -1.476689f, 7.309621f, 0.115845f,
 -1.132985f, 7.545954f, -0.674560f,
 -1.132985f, 7.545954f, -0.674560f,
 -1.476689f, 7.309621f, 0.115845f,
 -0.708500f, 7.569145f, 0.380321f,
 -1.476689f, 7.309621f, 0.115845f,
 -1.157788f, 7.185770f, 0.613356f,
 -0.708500f, 7.569145f, 0.380321f,
 -0.708500f, 7.569145f, 0.380321f,
 -1.157788f, 7.185770f, 0.613356f,
 -0.903658f, 6.736232f, 0.686746f,
 -1.157788f, 7.185770f, 0.613356f,
 -0.858282f, 6.618644f, 0.093282f,
 -0.903658f, 6.736232f, 0.686746f,
 -0.903658f, 6.736232f, 0.686746f,
 -0.858282f, 6.618644f, 0.093282f,
 -0.929437f, 6.578138f, -0.455670f,
 -0.858282f, 6.618644f, 0.093282f,
 -1.220732f, 6.816091f, -0.333591f,
 -0.929437f, 6.578138f, -0.455670f,
 -0.929437f, 6.578138f, -0.455670f,
 -1.220732f, 6.816091f, -0.333591f,
 -1.132985f, 7.545954f, -0.674560f,
 -1.476689f, 7.309621f, 0.115845f,
 -2.135006f, 5.829574f, 1.007708f,
 -1.157788f, 7.185770f, 0.613356f,
 -1.157788f, 7.185770f, 0.613356f,
 -2.135006f, 5.829574f, 1.007708f,
 -1.873865f, 5.952929f, 1.105243f,
 -1.883378f, 5.478364f, 2.314523f,
 -1.873865f, 5.952929f, 1.105243f,
 -2.254079f, 5.303257f, 2.176068f,
 -2.254079f, 5.303257f, 2.176068f,
 -1.873865f, 5.952929f, 1.105243f,
 -2.135006f, 5.829574f, 1.007708f,
 -1.752559f, -0.150038f, -0.956253f,
 -1.694103f, -0.251816f, 1.383935f,
 -1.137451f, 2.280160f, -0.293714f,
 -1.137451f, 2.280160f, -0.293714f,
 -1.694103f, -0.251816f, 1.383935f,
 -1.093140f, 2.256474f, 1.181269f,
 2.266215f, 6.592238f, 2.842243f,
 1.968133f, 6.989777f, 3.608170f,
 2.453398f, 6.428580f, 3.503210f,
 1.942808f, 6.315742f, 2.834583f,
 2.266215f, 6.592238f, 2.842243f,
 1.999881f, 6.055178f, 3.425849f,
 1.999881f, 6.055178f, 3.425849f,
 2.266215f, 6.592238f, 2.842243f,
 2.453398f, 6.428580f, 3.503210f,
 1.559564f, 6.758971f, 2.917558f,
 1.942808f, 6.315742f, 2.834583f,
 1.456117f, 6.684505f, 3.546962f,
 1.456117f, 6.684505f, 3.546962f,
 1.942808f, 6.315742f, 2.834583f,
 1.999881f, 6.055178f, 3.425849f,
 -1.686442f, 4.969074f, 2.086374f,
 -1.880115f, 5.316785f, 2.936036f,
 -1.599710f, 4.595030f, 2.609169f,
 -1.686442f, 4.969074f, 2.086374f,
 -1.599710f, 4.595030f, 2.609169f,
 -2.084335f, 4.860874f, 1.981133f,
 -2.084335f, 4.860874f, 1.981133f,
 -1.599710f, 4.595030f, 2.609169f,
 -2.157384f, 4.414194f, 2.523202f,
 -2.254079f, 5.303257f, 2.176068f,
 -2.084335f, 4.860874f, 1.981133f,
 -2.406706f, 5.059082f, 2.811989f,
 -2.406706f, 5.059082f, 2.811989f,
 -2.084335f, 4.860874f, 1.981133f,
 -2.157384f, 4.414194f, 2.523202f,
 -2.254079f, 5.303257f, 2.176068f,
 -2.406706f, 5.059082f, 2.811989f,
 -1.883378f, 5.478364f, 2.314523f,
 5.491337f, 2.843434f, 1.907414f,
 5.595707f, 2.773533f, 2.672860f,
 -0.113501f, 8.779328f, 3.213703f,
 -0.113501f, 8.779328f, 3.213703f,
 5.595707f, 2.773533f, 2.672860f,
 -0.009131f, 8.709427f, 3.979150f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.256638f, -0.122475f},
{ 0.826605f, -0.311801f, -0.468512f},
{ 0.904768f, 0.134349f, -0.404160f},
{ 0.857718f, -0.290785f, -0.423985f},
{ 0.363846f, 0.410937f, -0.835911f},
{ 0.549456f, 0.804937f, -0.223995f},
{ 0.485920f, 0.164129f, -0.858454f},
{ 0.520280f, -0.841685f, -0.144482f},
{ 0.517276f, -0.034489f, 0.855124f},
{ 0.414372f, 0.032546f, 0.909525f},
{ 0.188090f, -0.132578f, 0.973162f},
{ 0.238558f, 0.286608f, 0.927872f},
{ -0.000000f, 0.408053f, 0.912958f},
{ 0.000000f, -0.260106f, 0.965580f},
{ -0.000000f, 0.531528f, -0.847041f},
{ 0.000000f, 0.991754f, -0.128158f},
{ 0.000000f, 0.048337f, -0.998831f},
{ 0.453143f, 0.303267f, 0.838266f},
{ -0.760936f, 0.216528f, 0.611631f},
{ 0.383691f, -0.843206f, -0.376545f},
{ -0.216586f, -0.822786f, -0.525466f},
{ -0.000000f, -0.911961f, 0.410276f},
{ 0.343062f, 0.745429f, 0.571528f},
{ 0.547603f, 0.392774f, -0.738823f},
{ 0.000000f, 0.490246f, 0.871584f},
{ 0.000000f, -0.203525f, -0.979070f},
{ 0.889488f, -0.069546f, 0.451635f},
{ 0.215233f, 0.650997f, 0.727927f},
{ -0.194807f, -0.910241f, 0.365393f},
{ -0.806342f, -0.050990f, 0.589247f},
{ 0.000000f, 0.110734f, 0.993850f},
{ 0.740203f, -0.009427f, 0.672317f},
{ 0.677303f, -0.225576f, -0.700269f},
{ -0.000000f, -0.109424f, -0.993995f},
{ 0.810550f, 0.097925f, 0.577424f},
{ 0.839402f, 0.008004f, -0.543452f},
{ 0.000458f, -0.048474f, -0.998824f},
{ -0.000246f, 0.075489f, 0.997147f},
{ 0.830424f, 0.299350f, -0.469879f},
{ 0.749055f, 0.271101f, 0.604500f},
{ 0.005412f, 0.226886f, 0.973906f},
{ -0.007345f, 0.282546f, -0.959226f},
{ 0.278156f, 0.955529f, 0.097944f},
{ 0.931575f, 0.150487f, -0.330941f},
{ -0.760570f, 0.042980f, 0.647831f},
{ 0.347257f, -0.937490f, -0.022895f},
{ 0.378906f, 0.919226f, 0.107022f},
{ 0.974823f, 0.056807f, -0.215624f},
{ -0.931295f, -0.174592f, 0.319700f},
{ -0.171109f, -0.975357f, -0.139284f},
{ 0.228869f, 0.971814f, 0.056534f},
{ 0.983723f, 0.062793f, -0.168366f},
{ -0.994382f, 0.051828f, -0.092291f},
{ -0.300698f, -0.908339f, -0.290692f},
{ 0.003524f, 0.162101f, 0.986768f},
{ 0.801890f, 0.238580f, 0.547771f},
{ 0.814272f, 0.334549f, -0.474381f},
{ -0.003699f, 0.351481f, -0.936188f},
{ -0.958716f, 0.256638f, -0.122475f},
{ -0.904768f, 0.134349f, -0.404160f},
{ -0.826605f, -0.311802f, -0.468512f},
{ -0.857718f, -0.290785f, -0.423985f},
{ -0.549456f, 0.804938f, -0.223995f},
{ -0.363846f, 0.410937f, -0.835911f},
{ -0.485921f, 0.164128f, -0.858453f},
{ -0.520280f, -0.841685f, -0.144484f},
{ -0.238558f, 0.286609f, 0.927872f},
{ -0.414372f, 0.032546f, 0.909525f},
{ -0.188090f, -0.132579f, 0.973162f},
{ -0.517274f, -0.034489f, 0.855125f},
{ -0.453143f, 0.303268f, 0.838266f},
{ -0.383691f, -0.843205f, -0.376545f},
{ 0.760937f, 0.216526f, 0.611630f},
{ 0.216586f, -0.822786f, -0.525466f},
{ -0.534312f, 0.512557f, -0.672158f},
{ -0.346686f, 0.777990f, 0.523966f},
{ -0.468679f, -0.878597f, 0.091697f},
{ 0.803077f, -0.450323f, 0.390227f},
{ -0.788173f, -0.056146f, 0.612888f},
{ 0.344016f, 0.413857f, 0.842838f},
{ -0.731561f, -0.055732f, 0.679495f},
{ -0.665662f, -0.215811f, -0.714366f},
{ -0.839778f, 0.009054f, -0.542854f},
{ -0.809130f, 0.097966f, 0.579406f},
{ -0.836998f, 0.297944f, -0.458980f},
{ -0.740195f, 0.270908f, 0.615402f},
{ -0.644182f, -0.345318f, -0.682484f},
{ -0.855699f, 0.511072f, -0.081143f},
{ -0.032285f, 0.390911f, 0.919862f},
{ 0.701879f, -0.712148f, -0.014493f},
{ -0.516474f, -0.574796f, -0.634716f},
{ -0.956733f, 0.220418f, -0.189944f},
{ 0.480267f, 0.443975f, 0.756459f},
{ 0.913041f, -0.407637f, -0.013700f},
{ -0.947207f, 0.320498f, -0.008984f},
{ -0.517933f, -0.682004f, -0.516349f},
{ 0.472615f, 0.835421f, 0.280547f},
{ 0.971209f, -0.155010f, -0.180899f},
{ -0.798171f, 0.236466f, 0.554083f},
{ -0.817193f, 0.334753f, -0.469186f},
{ -0.737769f, -0.673923f, 0.039053f},
{ -0.727288f, -0.686160f, -0.015389f},
{ -0.717182f, -0.683288f, -0.136996f},
{ -0.706332f, -0.689657f, -0.159586f},
{ -0.722720f, -0.690228f, 0.035513f},
{ -0.722720f, -0.690228f, 0.035513f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: block Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86