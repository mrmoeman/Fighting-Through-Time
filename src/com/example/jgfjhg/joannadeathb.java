package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class joannadeathb {

static String TextureName = "joannadeath2.mtl";

static int Vertices = 249;

static int VertTexts = 156;

static int Normals = 96;

static int Faces = 170;

static int FacesB = 0;

static int SmoothGroups = 4;

static float VertArray[] = new float[]{
 0.294858f, 0.850721f, -1.240682f,
 0.871553f, 0.891833f, -1.349002f,
 0.988275f, 0.535858f, -0.851007f,
 0.410030f, 0.510278f, -0.743996f,
 0.235529f, 0.392021f, -1.671586f,
 0.814510f, 0.388216f, -1.774559f,
 1.126665f, -0.700067f, 0.022762f,
 0.546514f, -0.698571f, 0.122656f,
 0.186341f, 2.808398f, -0.335954f,
 0.953575f, 2.883600f, -0.328562f,
 1.097412f, 3.094458f, 0.506585f,
 0.351056f, 3.050926f, 0.613678f,
 0.692694f, 1.649612f, 0.839363f,
 1.199830f, 1.670755f, 0.751366f,
 1.100119f, 1.842698f, 0.271002f,
 0.580057f, 1.841906f, 0.341586f,
 0.678559f, 7.811720f, -0.146665f,
 0.044309f, 6.294063f, 0.822544f,
 0.000963f, 6.788586f, -1.058046f,
 0.011886f, 7.953311f, -0.481753f,
 0.104519f, 6.976135f, 0.656395f,
 0.861587f, 6.321245f, 0.306404f,
 1.061873f, 6.349934f, -0.572821f,
 0.044305f, 4.860409f, -0.573569f,
 0.723507f, 4.789620f, -0.315592f,
 0.749302f, 4.598188f, 0.250671f,
 0.044260f, 4.406176f, 0.486269f,
 0.170550f, 7.964206f, 1.418857f,
 0.765822f, 7.965719f, 0.935860f,
 0.722599f, 7.293899f, 0.402584f,
 0.534391f, 7.181949f, 0.091005f,
 1.329615f, 5.984163f, 0.259170f,
 0.079873f, 8.831385f, 0.282490f,
 0.717415f, 8.426288f, 0.332318f,
 0.538944f, 7.370488f, -0.451525f,
 1.532822f, 6.005824f, -0.148163f,
 1.465676f, 6.730864f, 0.387594f,
 1.655887f, 6.812719f, -0.086641f,
 1.058604f, 4.910723f, -0.154461f,
 1.430338f, 4.862023f, -0.052050f,
 1.609326f, 4.971277f, -0.427751f,
 1.275292f, 5.031620f, -0.570722f,
 0.056503f, 7.015680f, 0.364685f,
 0.004409f, 7.640942f, -0.636875f,
 1.204066f, 2.938864f, -0.541293f,
 1.761365f, 3.309958f, -0.278843f,
 1.948168f, 3.522860f, -0.710774f,
 1.543449f, 3.357767f, -1.159021f,
 0.037273f, 1.941482f, -0.938111f,
 1.498444f, 2.922966f, 0.669481f,
 1.456376f, 2.522831f, -0.512022f,
 0.035132f, 2.768253f, 1.054011f,
 -1.300222f, 6.673738f, 0.443074f,
 -1.062973f, 5.965443f, 0.306445f,
 -1.546368f, 6.619741f, 0.046070f,
 -1.274175f, 5.909079f, -0.058376f,
 -0.494944f, 7.965755f, 1.037401f,
 -0.543867f, 8.426264f, 0.433844f,
 -0.666556f, 4.596139f, 0.257155f,
 -0.634138f, 4.789938f, -0.316478f,
 -0.719259f, 6.375242f, 0.306192f,
 -0.949952f, 6.325912f, -0.553058f,
 -0.487363f, 7.366044f, -0.416694f,
 -0.437861f, 7.185307f, 0.125486f,
 -0.537756f, 7.293964f, 0.504202f,
 -0.582344f, 7.811761f, -0.045172f,
 -0.144175f, 5.917610f, 1.470428f,
 0.087003f, 5.134153f, 1.374260f,
 -0.736913f, 5.508356f, 1.441970f,
 -0.537688f, 5.030376f, 1.403701f,
 -0.727186f, 5.141154f, -0.132581f,
 -0.766052f, 4.878906f, -0.346425f,
 -1.044349f, 4.757613f, -0.137686f,
 -1.019986f, 4.982827f, 0.063473f,
 -1.302730f, 3.114692f, 0.812769f,
 -1.394503f, 2.507862f, -0.402976f,
 -0.294119f, 0.815903f, -0.750022f,
 -0.870758f, 0.851243f, -0.851956f,
 -0.991635f, 0.564397f, -0.312095f,
 -0.413298f, 0.538856f, -0.205690f,
 -0.235626f, 0.391121f, -1.163169f,
 -0.814510f, 0.388198f, -1.261978f,
 -1.126665f, -0.700086f, 0.535342f,
 -0.546515f, -0.698589f, 0.634955f,
 -0.123337f, 2.736812f, -0.190816f,
 -0.886591f, 2.844105f, -0.191320f,
 -1.008599f, 3.242645f, 0.575706f,
 -0.262959f, 3.192792f, 0.685048f,
 -0.656323f, 1.882065f, 1.211061f,
 -1.163399f, 1.907287f, 1.127444f,
 -1.067341f, 1.983957f, 0.636880f,
 -0.547288f, 1.969163f, 0.684708f,
 0.388828f, 2.537994f, 5.309777f,
 -0.182371f, 1.720321f, 4.955616f,
 2.051318f, 4.411719f, -1.602055f,
 1.505609f, 3.588500f, -1.963823f,
 0.580057f, 1.841906f, 0.341586f,
 0.580057f, 1.841906f, 0.341586f,
 0.186341f, 2.808398f, -0.335954f,
 0.294858f, 0.850721f, -1.240682f,
 0.235529f, 0.392021f, -1.671586f,
 0.235529f, 0.392021f, -1.671586f,
 0.294858f, 0.850721f, -1.240682f,
 0.235529f, 0.392021f, -1.671586f,
 0.410030f, 0.510278f, -0.743996f,
 0.410030f, 0.510278f, -0.743996f,
 0.235529f, 0.392021f, -1.671586f,
 0.546514f, -0.698571f, 0.122656f,
 0.410030f, 0.510278f, -0.743996f,
 0.546514f, -0.698571f, 0.122656f,
 0.546514f, -0.698571f, 0.122656f,
 0.988275f, 0.535858f, -0.851007f,
 0.988275f, 0.535858f, -0.851007f,
 0.988275f, 0.535858f, -0.851007f,
 0.988275f, 0.535858f, -0.851007f,
 0.871553f, 0.891833f, -1.349002f,
 0.871553f, 0.891833f, -1.349002f,
 0.580057f, 1.841906f, 0.341586f,
 0.580057f, 1.841906f, 0.341586f,
 0.871553f, 0.891833f, -1.349002f,
 0.294858f, 0.850721f, -1.240682f,
 0.534391f, 7.181949f, 0.091005f,
 0.534391f, 7.181949f, 0.091005f,
 0.861587f, 6.321245f, 0.306404f,
 0.861587f, 6.321245f, 0.306404f,
 0.534391f, 7.181949f, 0.091005f,
 0.534391f, 7.181949f, 0.091005f,
 0.538944f, 7.370488f, -0.451525f,
 0.538944f, 7.370488f, -0.451525f,
 0.538944f, 7.370488f, -0.451525f,
 0.534391f, 7.181949f, 0.091005f,
 0.534391f, 7.181949f, 0.091005f,
 0.861587f, 6.321245f, 0.306404f,
 1.061873f, 6.349934f, -0.572821f,
 1.058604f, 4.910723f, -0.154461f,
 1.058604f, 4.910723f, -0.154461f,
 1.061873f, 6.349934f, -0.572821f,
 1.061873f, 6.349934f, -0.572821f,
 0.861587f, 6.321245f, 0.306404f,
 1.204066f, 2.938864f, -0.541293f,
 1.204066f, 2.938864f, -0.541293f,
 1.058604f, 4.910723f, -0.154461f,
 1.543449f, 3.357767f, -1.159021f,
 1.543449f, 3.357767f, -1.159021f,
 1.058604f, 4.910723f, -0.154461f,
 1.061873f, 6.349934f, -0.572821f,
 1.061873f, 6.349934f, -0.572821f,
 0.538944f, 7.370488f, -0.451525f,
 0.538944f, 7.370488f, -0.451525f,
 1.543449f, 3.357767f, -1.159021f,
 0.037273f, 1.941482f, -0.938111f,
 1.456376f, 2.522831f, -0.512022f,
 0.035132f, 2.768253f, 1.054011f,
 0.035132f, 2.768253f, 1.054011f,
 1.456376f, 2.522831f, -0.512022f,
 1.498444f, 2.922966f, 0.669481f,
 0.170550f, 7.964206f, 1.418857f,
 0.079873f, 8.831385f, 0.282490f,
 0.079873f, 8.831385f, 0.282490f,
 0.044309f, 6.294063f, 0.822544f,
 -0.437861f, 7.185307f, 0.125486f,
 0.044309f, 6.294063f, 0.822544f,
 0.056503f, 7.015680f, 0.364685f,
 -0.437861f, 7.185307f, 0.125486f,
 -0.719259f, 6.375242f, 0.306192f,
 -0.719259f, 6.375242f, 0.306192f,
 0.056503f, 7.015680f, 0.364685f,
 0.104519f, 6.976135f, 0.656395f,
 -0.437861f, 7.185307f, 0.125486f,
 0.104519f, 6.976135f, 0.656395f,
 -0.437861f, 7.185307f, 0.125486f,
 0.004409f, 7.640942f, -0.636875f,
 -0.487363f, 7.366044f, -0.416694f,
 0.011886f, 7.953311f, -0.481753f,
 -0.487363f, 7.366044f, -0.416694f,
 0.011886f, 7.953311f, -0.481753f,
 -0.487363f, 7.366044f, -0.416694f,
 -0.437861f, 7.185307f, 0.125486f,
 -0.437861f, 7.185307f, 0.125486f,
 0.044260f, 4.406176f, 0.486269f,
 0.044309f, 6.294063f, 0.822544f,
 0.044309f, 6.294063f, 0.822544f,
 -0.719259f, 6.375242f, 0.306192f,
 -0.727186f, 5.141154f, -0.132581f,
 -0.949952f, 6.325912f, -0.553058f,
 -0.727186f, 5.141154f, -0.132581f,
 -0.949952f, 6.325912f, -0.553058f,
 -0.949952f, 6.325912f, -0.553058f,
 -0.719259f, 6.375242f, 0.306192f,
 -0.144175f, 5.917610f, 1.470428f,
 -0.144175f, 5.917610f, 1.470428f,
 0.087003f, 5.134153f, 1.374260f,
 -0.727186f, 5.141154f, -0.132581f,
 0.087003f, 5.134153f, 1.374260f,
 -0.727186f, 5.141154f, -0.132581f,
 -0.949952f, 6.325912f, -0.553058f,
 -0.949952f, 6.325912f, -0.553058f,
 -0.487363f, 7.366044f, -0.416694f,
 0.000963f, 6.788586f, -1.058046f,
 -0.487363f, 7.366044f, -0.416694f,
 0.004409f, 7.640942f, -0.636875f,
 0.000963f, 6.788586f, -1.058046f,
 0.087003f, 5.134153f, 1.374260f,
 0.011886f, 7.953311f, -0.481753f,
 0.079873f, 8.831385f, 0.282490f,
 0.011886f, 7.953311f, -0.481753f,
 0.170550f, 7.964206f, 1.418857f,
 0.104519f, 6.976135f, 0.656395f,
 0.104519f, 6.976135f, 0.656395f,
 0.044305f, 4.860409f, -0.573569f,
 0.000963f, 6.788586f, -1.058046f,
 0.044305f, 4.860409f, -0.573569f,
 0.037273f, 1.941482f, -0.938111f,
 0.044305f, 4.860409f, -0.573569f,
 0.044305f, 4.860409f, -0.573569f,
 0.035132f, 2.768253f, 1.054011f,
 0.044260f, 4.406176f, 0.486269f,
 0.044260f, 4.406176f, 0.486269f,
 0.037273f, 1.941482f, -0.938111f,
 0.035132f, 2.768253f, 1.054011f,
 -1.394503f, 2.507862f, -0.402976f,
 0.035132f, 2.768253f, 1.054011f,
 -1.302730f, 3.114692f, 0.812769f,
 -1.394503f, 2.507862f, -0.402976f,
 -0.547288f, 1.969163f, 0.684708f,
 -0.123337f, 2.736812f, -0.190816f,
 -0.547288f, 1.969163f, 0.684708f,
 -0.294119f, 0.815903f, -0.750022f,
 -0.235626f, 0.391121f, -1.163169f,
 -0.235626f, 0.391121f, -1.163169f,
 -0.294119f, 0.815903f, -0.750022f,
 -0.413298f, 0.538856f, -0.205690f,
 -0.235626f, 0.391121f, -1.163169f,
 -0.413298f, 0.538856f, -0.205690f,
 -0.546515f, -0.698589f, 0.634955f,
 -0.235626f, 0.391121f, -1.163169f,
 -0.413298f, 0.538856f, -0.205690f,
 -0.546515f, -0.698589f, 0.634955f,
 -0.546515f, -0.698589f, 0.634955f,
 -0.991635f, 0.564397f, -0.312095f,
 -0.991635f, 0.564397f, -0.312095f,
 -0.991635f, 0.564397f, -0.312095f,
 -0.870758f, 0.851243f, -0.851956f,
 -0.991635f, 0.564397f, -0.312095f,
 -0.547288f, 1.969163f, 0.684708f,
 -0.870758f, 0.851243f, -0.851956f,
 -0.547288f, 1.969163f, 0.684708f,
 -0.294119f, 0.815903f, -0.750022f,
 -0.870758f, 0.851243f, -0.851956f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.453876f, 0.791903f,
 0.201824f, 0.532079f,
 0.590263f, 0.596995f,
 0.556897f, 0.779659f,
 0.235400f, 0.777966f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.566387f, 0.397259f,
 0.470805f, 0.365178f,
 0.365778f, 0.346308f,
 0.249833f, 0.335338f,
 0.289739f, 0.984705f,
 0.362886f, 0.905310f,
 0.354538f, 0.788048f,
 0.662213f, 0.973243f,
 0.649436f, 0.842323f,
 0.523433f, 0.983917f,
 0.451956f, 0.900429f,
 0.700374f, 0.973112f,
 0.714202f, 0.842324f,
 0.662213f, 0.871337f,
 0.700374f, 0.871169f,
 0.611238f, 0.659338f,
 0.649436f, 0.659338f,
 0.714202f, 0.659338f,
 0.749335f, 0.659338f,
 0.262276f, 0.714547f,
 0.539459f, 0.732725f,
 0.635368f, 0.320085f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.727698f, 0.329948f,
 0.754615f, 0.048462f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.147427f, 0.097935f,
 0.662213f, 0.871337f,
 0.649436f, 0.842323f,
 0.700374f, 0.871169f,
 0.714202f, 0.842324f,
 0.362886f, 0.905310f,
 0.451956f, 0.900429f,
 0.365778f, 0.346308f,
 0.470805f, 0.365178f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.700374f, 0.973112f,
 0.662213f, 0.973243f,
 0.354538f, 0.788048f,
 0.453876f, 0.791903f,
 0.635368f, 0.320085f,
 0.727698f, 0.329948f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.611238f, 0.659338f,
 0.749335f, 0.659338f,
 0.714202f, 0.659338f,
 0.649436f, 0.659338f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.829311f, 0.001810f,
 0.999173f, 0.001810f,
 0.829311f, 0.998093f,
 0.999173f, 0.998093f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.132466f, 0.001616f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.326300f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.806916f, 0.873085f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.749335f, 0.410462f,
 0.747690f, 0.223911f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.737676f, 0.256798f,
 0.289739f, 0.984705f,
 0.523433f, 0.983917f,
 0.523433f, 0.983917f,
 0.201824f, 0.532079f,
 0.353637f, 0.718421f,
 0.201824f, 0.532079f,
 0.262276f, 0.714547f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.262276f, 0.714547f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.539459f, 0.732725f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.249833f, 0.335338f,
 0.201824f, 0.532079f,
 0.201824f, 0.532079f,
 0.806916f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.590263f, 0.596995f,
 0.452577f, 0.721572f,
 0.539459f, 0.732725f,
 0.590263f, 0.596995f,
 0.749335f, 0.410462f,
 0.556897f, 0.779659f,
 0.523433f, 0.983917f,
 0.556897f, 0.779659f,
 0.289739f, 0.984705f,
 0.235400f, 0.777966f,
 0.235400f, 0.777966f,
 0.566387f, 0.397259f,
 0.590263f, 0.596995f,
 0.566387f, 0.397259f,
 0.754615f, 0.048462f,
 0.566387f, 0.397259f,
 0.566387f, 0.397259f,
 0.147427f, 0.097935f,
 0.249833f, 0.335338f,
 0.249833f, 0.335338f,
 0.747690f, 0.223911f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.737676f, 0.256798f,
 0.756142f, 0.248493f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.196341f, 0.621715f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.132466f, 0.001616f,
 0.063514f, 0.126699f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.102748f, 0.326300f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.326300f,
 0.148951f, 0.326300f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.605989f, -0.571013f, -0.553825f},
{ 0.394995f, -0.565791f, -0.723781f},
{ -0.475687f, -0.853551f, 0.212539f},
{ 0.529170f, -0.847448f, 0.042548f},
{ -0.576040f, -0.029113f, 0.816903f},
{ -0.344431f, -0.409517f, 0.844786f},
{ 0.764909f, 0.166934f, 0.622131f},
{ 0.672918f, -0.370736f, 0.640107f},
{ -0.698303f, -0.579258f, -0.420515f},
{ -0.963726f, 0.034052f, -0.264711f},
{ 0.814345f, 0.243687f, -0.526744f},
{ 0.645624f, -0.348311f, -0.679595f},
{ -0.740763f, 0.597841f, -0.306359f},
{ 0.512708f, 0.660034f, -0.549077f},
{ 0.971319f, -0.100838f, 0.215341f},
{ -0.809144f, -0.125401f, 0.574073f},
{ 0.413123f, 0.432981f, 0.801160f},
{ 0.367952f, -0.259284f, 0.892963f},
{ 0.769402f, 0.537960f, -0.344413f},
{ 0.954286f, 0.003731f, -0.298872f},
{ 0.080170f, 0.148357f, 0.985679f},
{ 0.799036f, 0.137117f, 0.585441f},
{ -0.012872f, 0.984100f, -0.177146f},
{ 0.769916f, 0.604691f, -0.203907f},
{ 0.690412f, 0.172275f, 0.702604f},
{ 0.790849f, 0.099664f, -0.603841f},
{ 0.391905f, -0.037812f, 0.919229f},
{ 0.460691f, -0.060251f, -0.885513f},
{ 0.592446f, 0.459473f, -0.661734f},
{ 0.645792f, 0.405232f, 0.647101f},
{ -0.004247f, 0.056594f, 0.998388f},
{ 0.032941f, 0.235698f, 0.971268f},
{ 0.052072f, -0.744371f, 0.665733f},
{ 0.867020f, -0.443586f, 0.226955f},
{ -0.034320f, 0.443641f, -0.895547f},
{ -0.067387f, 0.588307f, -0.805825f},
{ 0.834834f, 0.237201f, -0.496777f},
{ 0.037316f, 0.169190f, 0.984877f},
{ -0.908648f, -0.410358f, 0.077234f},
{ -0.450808f, -0.013632f, -0.892517f},
{ 0.272959f, -0.349663f, 0.896231f},
{ 0.954512f, 0.110333f, -0.277007f},
{ -0.975157f, -0.165911f, 0.146772f},
{ -0.410673f, 0.113375f, -0.904706f},
{ 0.944287f, 0.215025f, -0.249172f},
{ 0.423190f, -0.111366f, 0.899171f},
{ -0.015301f, 0.003211f, -0.999878f},
{ 0.834533f, -0.123052f, 0.537041f},
{ 0.724957f, -0.356716f, -0.589229f},
{ -0.012992f, -0.003509f, -0.999909f},
{ -0.024777f, -0.601163f, -0.798742f},
{ 0.036515f, -0.451066f, 0.891743f},
{ -0.432609f, 0.459667f, 0.775600f},
{ -0.876172f, 0.390604f, -0.282403f},
{ -0.181129f, -0.331732f, 0.925822f},
{ -0.914076f, -0.246285f, -0.322194f},
{ -0.694915f, 0.139987f, 0.705335f},
{ -0.792042f, 0.605915f, -0.074404f},
{ -0.694502f, 0.193276f, 0.693045f},
{ -0.427962f, 0.019307f, 0.903591f},
{ -0.797283f, 0.094400f, -0.596178f},
{ -0.590307f, -0.054527f, -0.805335f},
{ -0.674176f, 0.452643f, -0.583610f},
{ -0.676816f, 0.367492f, 0.637863f},
{ -0.817621f, -0.443140f, 0.367591f},
{ -0.905333f, 0.244494f, -0.347268f},
{ 0.468704f, 0.867819f, -0.164942f},
{ -0.796654f, 0.530228f, 0.290174f},
{ 0.948857f, -0.293176f, -0.117128f},
{ -0.231739f, -0.888289f, 0.396534f},
{ 0.865221f, 0.427794f, -0.261505f},
{ 0.206026f, -0.686163f, -0.697663f},
{ -0.230415f, -0.928283f, -0.291888f},
{ -0.899044f, 0.169291f, 0.403807f},
{ -0.811582f, -0.033819f, 0.583260f},
{ -0.764007f, -0.359299f, -0.535908f},
{ 0.619992f, -0.576601f, -0.532110f},
{ 0.507564f, -0.828597f, 0.236235f},
{ -0.418690f, -0.570051f, -0.706924f},
{ -0.565190f, -0.823240f, 0.053251f},
{ 0.581822f, 0.123387f, 0.803902f},
{ -0.741618f, 0.330646f, 0.583675f},
{ 0.323985f, -0.273560f, 0.905648f},
{ -0.649810f, -0.242905f, 0.720239f},
{ 0.667994f, -0.689161f, -0.280789f},
{ 0.966288f, -0.038691f, -0.254539f},
{ -0.830651f, 0.172147f, -0.529514f},
{ -0.669265f, -0.465051f, -0.579492f},
{ 0.746654f, 0.561751f, -0.356292f},
{ -0.515174f, 0.616240f, -0.595687f},
{ -0.965025f, -0.076377f, 0.250785f},
{ 0.793777f, -0.096807f, 0.600456f},
{ 0.811592f, -0.583042f, 0.037154f},
{ 0.812616f, -0.581551f, 0.038115f},
{ 0.821749f, -0.567923f, 0.046819f},
{ 0.822747f, -0.566396f, 0.047785f}};

static int[] FaceArray = new int[]{
4, 5, 7,
7, 5, 6,
11, 12, 10,
10, 12, 13,
8, 15, 11,
11, 15, 12,
14, 96, 9,
9, 97, 98,
13, 14, 10,
10, 14, 9,
99, 1, 100,
101, 1, 5,
1, 2, 5,
5, 2, 6,
102, 103, 104,
105, 106, 107,
108, 109, 2,
2, 110, 6,
13, 12, 111,
112, 12, 3,
13, 113, 14,
14, 114, 115,
14, 116, 117,
118, 119, 120,
12, 15, 3,
3, 15, 0,
36, 31, 37,
37, 31, 35,
27, 28, 32,
32, 28, 33,
25, 24, 21,
21, 24, 22,
37, 34, 36,
36, 34, 30,
21, 121, 17,
17, 122, 42,
31, 36, 123,
124, 36, 30,
42, 125, 20,
20, 126, 29,
43, 19, 127,
128, 19, 16,
129, 16, 130,
131, 16, 29,
29, 16, 28,
28, 16, 33,
26, 25, 17,
17, 25, 21,
44, 47, 45,
45, 47, 46,
132, 133, 134,
135, 136, 41,
137, 35, 41,
41, 35, 40,
138, 38, 31,
31, 38, 39,
31, 39, 35,
35, 39, 40,
39, 38, 45,
45, 38, 139,
140, 141, 142,
143, 144, 41,
40, 39, 46,
46, 39, 45,
35, 145, 37,
37, 146, 34,
22, 18, 147,
148, 18, 43,
149, 41, 46,
46, 41, 40,
16, 19, 33,
33, 19, 32,
27, 20, 28,
28, 20, 29,
25, 49, 24,
24, 49, 50,
24, 23, 22,
22, 23, 18,
48, 23, 50,
50, 23, 24,
51, 49, 26,
26, 49, 25,
150, 151, 152,
153, 154, 155,
52, 54, 53,
54, 55, 53,
156, 157, 56,
158, 57, 56,
58, 60, 59,
60, 61, 59,
54, 52, 62,
52, 63, 62,
60, 159, 160,
161, 162, 163,
53, 164, 52,
165, 63, 52,
166, 167, 168,
169, 64, 170,
171, 172, 173,
174, 65, 175,
176, 177, 65,
178, 64, 65,
64, 56, 65,
56, 57, 65,
179, 180, 58,
181, 60, 58,
66, 68, 67,
68, 69, 67,
182, 183, 184,
185, 71, 186,
187, 71, 55,
71, 72, 55,
188, 53, 70,
53, 73, 70,
53, 55, 73,
55, 72, 73,
73, 68, 70,
68, 189, 70,
190, 191, 192,
193, 71, 194,
72, 69, 73,
69, 68, 73,
55, 54, 195,
54, 62, 196,
61, 197, 198,
199, 200, 201,
202, 69, 71,
69, 72, 71,
65, 57, 203,
57, 204, 205,
206, 56, 207,
56, 64, 208,
58, 59, 74,
59, 75, 74,
59, 61, 209,
61, 210, 211,
212, 75, 213,
75, 59, 214,
215, 216, 74,
217, 58, 74,
218, 219, 220,
221, 222, 223,
80, 83, 81,
83, 82, 81,
87, 86, 88,
86, 89, 88,
84, 87, 91,
87, 88, 91,
90, 85, 224,
85, 225, 226,
89, 86, 90,
86, 85, 90,
227, 228, 77,
229, 81, 77,
77, 81, 78,
81, 82, 78,
230, 231, 232,
233, 234, 235,
236, 78, 237,
78, 82, 238,
89, 239, 88,
240, 79, 88,
89, 90, 241,
90, 242, 243,
90, 244, 245,
246, 247, 248,
88, 79, 91,
79, 76, 91,
92, 93, 94,
94, 93, 95, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 249  Texture Co-ords: 156  Normals: 96  Texture: joannadeath2.mtl Faces: 170 Smooth Groups: 4 sucess: 80 Doubles: 90 Redos needed: 153 Correct: 117