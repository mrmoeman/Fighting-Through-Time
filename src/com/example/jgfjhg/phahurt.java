package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phahurt {

static String TextureName = "Hurt";

static int Vertices = 344;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 31;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.959307f, -0.037801f,
 0.936363f, 9.475606f, -0.790824f,
 0.791186f, 8.379255f, -1.691104f,
 0.817567f, 7.468413f, -1.402421f,
 0.562201f, 9.565667f, -0.799415f,
 0.444292f, 8.690332f, -1.961874f,
 0.371258f, 7.281963f, -1.401711f,
 0.442211f, 7.960691f, -0.035014f,
 0.033961f, 8.085945f, 0.217200f,
 0.033961f, 9.744781f, -0.821380f,
 0.033961f, 8.838773f, -2.035592f,
 0.033961f, 7.243031f, -1.480106f,
 0.033961f, 9.491047f, -1.565097f,
 0.541219f, 9.399735f, -1.519750f,
 0.936363f, 9.385515f, -0.972491f,
 0.936363f, 7.844459f, -0.269061f,
 0.429582f, 7.814988f, -0.328404f,
 0.033961f, 7.814988f, -0.328404f,
 0.445001f, 7.831099f, 0.246383f,
 0.782250f, 7.844109f, 0.272580f,
 0.432372f, 7.531883f, 0.405775f,
 0.782250f, 7.561354f, 0.465119f,
 1.200907f, 7.014307f, -1.106244f,
 0.776421f, 7.545485f, -0.194563f,
 0.033961f, 7.556173f, -0.241262f,
 0.033961f, 6.968090f, -1.199329f,
 0.700363f, 4.412949f, -0.023202f,
 0.684600f, 4.644412f, 0.633930f,
 0.033961f, 4.701615f, 0.796310f,
 0.033961f, 4.278342f, -0.405381f,
 0.971581f, 6.667596f, 0.277044f,
 0.997360f, 6.284440f, -0.810752f,
 0.033961f, 6.392755f, -1.013378f,
 0.033961f, 6.836290f, 0.469655f,
 1.813203f, -0.124197f, -0.966923f,
 1.774020f, -0.289228f, 1.369428f,
 0.042165f, -0.328486f, 1.870578f,
 0.027640f, -0.066722f, -1.641730f,
 1.484525f, 7.029000f, -0.735890f,
 1.123312f, 7.349111f, -0.208507f,
 0.938149f, 6.869967f, 0.108808f,
 1.351116f, 6.499454f, -0.502739f,
 2.733162f, 6.345943f, 0.646752f,
 2.704571f, 6.691917f, 0.547970f,
 2.424792f, 6.693813f, 0.426956f,
 2.458460f, 6.293602f, 0.538720f,
 1.982485f, 6.519450f, 2.484299f,
 1.921994f, 7.238749f, 2.283325f,
 1.400696f, 7.211017f, 1.989085f,
 1.469542f, 6.403389f, 2.211332f,
 0.041802f, 2.186136f, 1.430251f,
 1.174271f, 2.193946f, 1.289877f,
 1.197454f, 2.277690f, -0.194278f,
 0.027288f, 2.302756f, -0.577774f,
 -0.868441f, 9.385515f, -0.972491f,
 -0.868441f, 7.844459f, -0.269061f,
 -0.749646f, 7.468413f, -1.402421f,
 -0.723264f, 8.379255f, -1.691104f,
 -0.376369f, 8.690332f, -1.961874f,
 -0.473295f, 9.399735f, -1.519750f,
 -0.303336f, 7.281963f, -1.401711f,
 -0.361660f, 7.814988f, -0.328404f,
 -0.374288f, 7.960691f, -0.035014f,
 -1.204989f, 7.959307f, -0.037801f,
 -0.868441f, 9.475606f, -0.790824f,
 -0.494279f, 9.565667f, -0.799415f,
 -0.714328f, 7.844109f, 0.272580f,
 -0.377078f, 7.831099f, 0.246383f,
 -0.364450f, 7.531883f, 0.405775f,
 -0.714328f, 7.561354f, 0.465119f,
 -0.708500f, 7.545485f, -0.194563f,
 -1.132985f, 7.014307f, -1.106244f,
 -2.097468f, 4.425884f, 1.774276f,
 -2.372754f, 5.087892f, 1.992001f,
 -1.865482f, 5.406888f, 1.988272f,
 -1.556560f, 4.665449f, 1.740817f,
 -0.903658f, 6.667596f, 0.277044f,
 -0.929437f, 6.284440f, -0.810752f,
 -0.616678f, 4.644412f, 0.633930f,
 -0.632440f, 4.412949f, -0.023202f,
 -1.092758f, 2.193021f, 1.301792f,
 -1.137352f, 2.274908f, -0.176289f,
 -1.453703f, 7.117303f, -0.331406f,
 -1.250095f, 6.721836f, -0.891074f,
 -1.192002f, 6.815629f, 0.121428f,
 -0.952491f, 6.361216f, -0.525067f,
 -2.446113f, 5.551400f, 0.067764f,
 -2.313659f, 5.231804f, -0.035131f,
 -2.188956f, 5.711529f, 0.101721f,
 -2.035789f, 5.343227f, -0.019467f,
 -1.693890f, -0.291846f, 1.381301f,
 -1.752637f, -0.125525f, -0.954847f,
 1.759443f, 7.000905f, 1.499647f,
 2.156602f, 6.998214f, 1.671431f,
 2.197189f, 6.507088f, 1.811657f,
 1.807237f, 6.432786f, 1.658300f,
 -1.974608f, 5.456509f, 1.357380f,
 -1.757180f, 4.933687f, 1.185347f,
 -2.151628f, 4.775517f, 1.163112f,
 -2.339653f, 5.229198f, 1.309176f,
 1.827151f, 1.046742f, 3.207850f,
 1.442453f, 1.243983f, 3.851893f,
 2.611569f, 10.697246f, -0.075936f,
 1.191868f, 11.163674f, 1.507294f,
 2.058322f, 8.986620f, 0.914308f,
 1.673624f, 9.183862f, 1.558351f,
 0.791186f, 8.379255f, -1.691104f,
 0.791186f, 8.379255f, -1.691104f,
 0.936363f, 9.385515f, -0.972491f,
 0.817567f, 7.468413f, -1.402421f,
 0.371258f, 7.281963f, -1.401711f,
 0.791186f, 8.379255f, -1.691104f,
 0.791186f, 8.379255f, -1.691104f,
 0.371258f, 7.281963f, -1.401711f,
 0.371258f, 7.281963f, -1.401711f,
 0.033961f, 9.744781f, -0.821380f,
 0.033961f, 9.744781f, -0.821380f,
 0.562201f, 9.565667f, -0.799415f,
 0.562201f, 9.565667f, -0.799415f,
 0.936363f, 9.385515f, -0.972491f,
 0.936363f, 9.385515f, -0.972491f,
 0.562201f, 9.565667f, -0.799415f,
 0.936363f, 9.475606f, -0.790824f,
 1.272911f, 7.959307f, -0.037801f,
 0.936363f, 9.475606f, -0.790824f,
 0.936363f, 9.475606f, -0.790824f,
 0.429582f, 7.814988f, -0.328404f,
 0.442211f, 7.960691f, -0.035014f,
 0.442211f, 7.960691f, -0.035014f,
 0.033961f, 8.085945f, 0.217200f,
 0.442211f, 7.960691f, -0.035014f,
 0.445001f, 7.831099f, 0.246383f,
 0.445001f, 7.831099f, 0.246383f,
 0.432372f, 7.531883f, 0.405775f,
 0.432372f, 7.531883f, 0.405775f,
 0.432372f, 7.531883f, 0.405775f,
 0.782250f, 7.561354f, 0.465119f,
 1.272911f, 7.959307f, -0.037801f,
 0.782250f, 7.844109f, 0.272580f,
 0.782250f, 7.844109f, 0.272580f,
 0.782250f, 7.561354f, 0.465119f,
 0.429582f, 7.814988f, -0.328404f,
 0.776421f, 7.545485f, -0.194563f,
 0.371258f, 7.281963f, -1.401711f,
 0.371258f, 7.281963f, -1.401711f,
 0.776421f, 7.545485f, -0.194563f,
 1.200907f, 7.014307f, -1.106244f,
 0.033961f, 7.556173f, -0.241262f,
 0.429582f, 7.814988f, -0.328404f,
 0.429582f, 7.814988f, -0.328404f,
 0.033961f, 7.556173f, -0.241262f,
 0.776421f, 7.545485f, -0.194563f,
 0.033961f, 7.243031f, -1.480106f,
 0.371258f, 7.281963f, -1.401711f,
 0.033961f, 6.968090f, -1.199329f,
 0.033961f, 6.968090f, -1.199329f,
 0.371258f, 7.281963f, -1.401711f,
 1.200907f, 7.014307f, -1.106244f,
 0.971581f, 6.667596f, 0.277044f,
 0.684600f, 4.644412f, 0.633930f,
 0.700363f, 4.412949f, -0.023202f,
 0.684600f, 4.644412f, 0.633930f,
 0.684600f, 4.644412f, 0.633930f,
 1.174271f, 2.193946f, 1.289877f,
 0.033961f, 4.701615f, 0.796310f,
 0.684600f, 4.644412f, 0.633930f,
 0.684600f, 4.644412f, 0.633930f,
 0.033961f, 4.278342f, -0.405381f,
 0.700363f, 4.412949f, -0.023202f,
 0.700363f, 4.412949f, -0.023202f,
 0.776421f, 7.545485f, -0.194563f,
 1.200907f, 7.014307f, -1.106244f,
 1.200907f, 7.014307f, -1.106244f,
 0.971581f, 6.667596f, 0.277044f,
 0.776421f, 7.545485f, -0.194563f,
 0.776421f, 7.545485f, -0.194563f,
 0.971581f, 6.667596f, 0.277044f,
 0.997360f, 6.284440f, -0.810752f,
 0.938149f, 6.869967f, 0.108808f,
 0.997360f, 6.284440f, -0.810752f,
 0.938149f, 6.869967f, 0.108808f,
 0.997360f, 6.284440f, -0.810752f,
 1.200907f, 7.014307f, -1.106244f,
 1.200907f, 7.014307f, -1.106244f,
 0.938149f, 6.869967f, 0.108808f,
 2.424792f, 6.693813f, 0.426956f,
 2.424792f, 6.693813f, 0.426956f,
 2.424792f, 6.693813f, 0.426956f,
 1.759443f, 7.000905f, 1.499647f,
 1.759443f, 7.000905f, 1.499647f,
 1.174271f, 2.193946f, 1.289877f,
 1.774020f, -0.289228f, 1.369428f,
 1.774020f, -0.289228f, 1.369428f,
 -0.868441f, 9.385515f, -0.972491f,
 -0.723264f, 8.379255f, -1.691104f,
 -0.723264f, 8.379255f, -1.691104f,
 -0.749646f, 7.468413f, -1.402421f,
 -0.723264f, 8.379255f, -1.691104f,
 -0.303336f, 7.281963f, -1.401711f,
 -0.303336f, 7.281963f, -1.401711f,
 -0.723264f, 8.379255f, -1.691104f,
 -0.303336f, 7.281963f, -1.401711f,
 -0.494279f, 9.565667f, -0.799415f,
 0.033961f, 9.744781f, -0.821380f,
 0.033961f, 9.744781f, -0.821380f,
 -0.868441f, 9.475606f, -0.790824f,
 -0.494279f, 9.565667f, -0.799415f,
 -0.868441f, 9.385515f, -0.972491f,
 -0.868441f, 9.385515f, -0.972491f,
 -0.494279f, 9.565667f, -0.799415f,
 -0.868441f, 9.475606f, -0.790824f,
 -0.868441f, 9.475606f, -0.790824f,
 -1.204989f, 7.959307f, -0.037801f,
 0.033961f, 8.085945f, 0.217200f,
 -0.374288f, 7.960691f, -0.035014f,
 -0.374288f, 7.960691f, -0.035014f,
 -0.361660f, 7.814988f, -0.328404f,
 -0.374288f, 7.960691f, -0.035014f,
 -0.377078f, 7.831099f, 0.246383f,
 -0.377078f, 7.831099f, 0.246383f,
 -0.364450f, 7.531883f, 0.405775f,
 -0.364450f, 7.531883f, 0.405775f,
 -0.364450f, 7.531883f, 0.405775f,
 -0.714328f, 7.561354f, 0.465119f,
 -0.714328f, 7.561354f, 0.465119f,
 -0.714328f, 7.844109f, 0.272580f,
 -0.714328f, 7.844109f, 0.272580f,
 -1.204989f, 7.959307f, -0.037801f,
 -1.132985f, 7.014307f, -1.106244f,
 -0.708500f, 7.545485f, -0.194563f,
 -0.303336f, 7.281963f, -1.401711f,
 -0.303336f, 7.281963f, -1.401711f,
 -0.708500f, 7.545485f, -0.194563f,
 -0.361660f, 7.814988f, -0.328404f,
 -0.708500f, 7.545485f, -0.194563f,
 0.033961f, 7.556173f, -0.241262f,
 -0.361660f, 7.814988f, -0.328404f,
 -0.361660f, 7.814988f, -0.328404f,
 0.033961f, 7.556173f, -0.241262f,
 0.033961f, 7.243031f, -1.480106f,
 0.033961f, 6.968090f, -1.199329f,
 -0.303336f, 7.281963f, -1.401711f,
 -0.303336f, 7.281963f, -1.401711f,
 0.033961f, 6.968090f, -1.199329f,
 -1.132985f, 7.014307f, -1.106244f,
 -0.903658f, 6.667596f, 0.277044f,
 -0.616678f, 4.644412f, 0.633930f,
 -0.632440f, 4.412949f, -0.023202f,
 -0.616678f, 4.644412f, 0.633930f,
 -0.616678f, 4.644412f, 0.633930f,
 -1.092758f, 2.193021f, 1.301792f,};

static float VertArrayB[] = new float[]{
 -1.092758f, 2.193021f, 1.301792f,
 0.041802f, 2.186136f, 1.430251f,
 -0.616678f, 4.644412f, 0.633930f,
 -0.616678f, 4.644412f, 0.633930f,
 0.041802f, 2.186136f, 1.430251f,
 0.033961f, 4.701615f, 0.796310f,
 0.033961f, 4.278342f, -0.405381f,
 0.027288f, 2.302756f, -0.577774f,
 -0.632440f, 4.412949f, -0.023202f,
 -0.632440f, 4.412949f, -0.023202f,
 0.027288f, 2.302756f, -0.577774f,
 -1.137352f, 2.274908f, -0.176289f,
 -1.250095f, 6.721836f, -0.891074f,
 -1.453703f, 7.117303f, -0.331406f,
 -1.132985f, 7.014307f, -1.106244f,
 -1.132985f, 7.014307f, -1.106244f,
 -1.453703f, 7.117303f, -0.331406f,
 -0.708500f, 7.545485f, -0.194563f,
 -1.453703f, 7.117303f, -0.331406f,
 -1.192002f, 6.815629f, 0.121428f,
 -0.708500f, 7.545485f, -0.194563f,
 -0.708500f, 7.545485f, -0.194563f,
 -1.192002f, 6.815629f, 0.121428f,
 -0.903658f, 6.667596f, 0.277044f,
 -1.192002f, 6.815629f, 0.121428f,
 -0.952491f, 6.361216f, -0.525067f,
 -0.903658f, 6.667596f, 0.277044f,
 -0.903658f, 6.667596f, 0.277044f,
 -0.952491f, 6.361216f, -0.525067f,
 -0.929437f, 6.284440f, -0.810752f,
 -0.952491f, 6.361216f, -0.525067f,
 -1.250095f, 6.721836f, -0.891074f,
 -0.929437f, 6.284440f, -0.810752f,
 -0.929437f, 6.284440f, -0.810752f,
 -1.250095f, 6.721836f, -0.891074f,
 -1.132985f, 7.014307f, -1.106244f,
 -2.446113f, 5.551400f, 0.067764f,
 -2.188956f, 5.711529f, 0.101721f,
 -1.453703f, 7.117303f, -0.331406f,
 -1.453703f, 7.117303f, -0.331406f,
 -2.188956f, 5.711529f, 0.101721f,
 -1.192002f, 6.815629f, 0.121428f,
 -1.974608f, 5.456509f, 1.357380f,
 -2.188956f, 5.711529f, 0.101721f,
 -2.339653f, 5.229198f, 1.309176f,
 -2.339653f, 5.229198f, 1.309176f,
 -2.188956f, 5.711529f, 0.101721f,
 -2.446113f, 5.551400f, 0.067764f,
 -1.752637f, -0.125525f, -0.954847f,
 -1.693890f, -0.291846f, 1.381301f,
 -1.137352f, 2.274908f, -0.176289f,
 -1.137352f, 2.274908f, -0.176289f,
 -1.693890f, -0.291846f, 1.381301f,
 -1.092758f, 2.193021f, 1.301792f,
 2.197189f, 6.507088f, 1.811657f,
 1.921994f, 7.238749f, 2.283325f,
 1.982485f, 6.519450f, 2.484299f,
 1.807237f, 6.432786f, 1.658300f,
 2.197189f, 6.507088f, 1.811657f,
 1.469542f, 6.403389f, 2.211332f,
 1.469542f, 6.403389f, 2.211332f,
 2.197189f, 6.507088f, 1.811657f,
 1.982485f, 6.519450f, 2.484299f,
 1.759443f, 7.000905f, 1.499647f,
 1.807237f, 6.432786f, 1.658300f,
 1.400696f, 7.211017f, 1.989085f,
 1.400696f, 7.211017f, 1.989085f,
 1.807237f, 6.432786f, 1.658300f,
 1.469542f, 6.403389f, 2.211332f,
 -1.757180f, 4.933687f, 1.185347f,
 -1.865482f, 5.406888f, 1.988272f,
 -1.556560f, 4.665449f, 1.740817f,
 -1.757180f, 4.933687f, 1.185347f,
 -1.556560f, 4.665449f, 1.740817f,
 -2.151628f, 4.775517f, 1.163112f,
 -2.151628f, 4.775517f, 1.163112f,
 -1.556560f, 4.665449f, 1.740817f,
 -2.097468f, 4.425884f, 1.774276f,
 -2.339653f, 5.229198f, 1.309176f,
 -2.151628f, 4.775517f, 1.163112f,
 -2.372754f, 5.087892f, 1.992001f,
 -2.372754f, 5.087892f, 1.992001f,
 -2.151628f, 4.775517f, 1.163112f,
 -2.097468f, 4.425884f, 1.774276f,
 -2.339653f, 5.229198f, 1.309176f,
 -2.372754f, 5.087892f, 1.992001f,
 -1.974608f, 5.456509f, 1.357380f,
 1.827151f, 1.046742f, 3.207850f,
 1.442453f, 1.243983f, 3.851893f,
 2.058322f, 8.986620f, 0.914308f,
 2.058322f, 8.986620f, 0.914308f,
 1.442453f, 1.243983f, 3.851893f,
 1.673624f, 9.183862f, 1.558351f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.008494f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.049042f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,};

static float[] TextArrayB = new float[]{
 0.230576f, 0.348630f,
 0.340574f, 0.348630f,
 0.277434f, 0.584799f,
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.165216f, -0.231445f},
{ 0.826605f, -0.499699f, -0.258892f},
{ 0.904768f, -0.078197f, -0.418665f},
{ 0.857718f, -0.459747f, -0.230114f},
{ 0.363845f, -0.045312f, -0.930357f},
{ 0.549456f, 0.595755f, -0.585811f},
{ 0.485921f, -0.272161f, -0.830548f},
{ 0.520281f, -0.806362f, 0.281227f},
{ 0.517275f, 0.383969f, 0.764849f},
{ 0.414372f, 0.468965f, 0.779979f},
{ 0.188090f, 0.355318f, 0.915626f},
{ 0.238558f, 0.700129f, 0.672986f},
{ -0.000000f, 0.799158f, 0.601121f},
{ 0.000000f, 0.240073f, 0.970755f},
{ -0.000000f, 0.054803f, -0.998497f},
{ 0.000000f, 0.805614f, -0.592440f},
{ 0.000000f, -0.441452f, -0.897285f},
{ 0.453144f, 0.671307f, 0.586521f},
{ -0.760935f, 0.485658f, 0.430249f},
{ 0.383690f, -0.920082f, 0.078934f},
{ -0.216585f, -0.974341f, -0.061247f},
{ -0.000000f, -0.599172f, 0.800621f},
{ 0.395020f, 0.857822f, 0.328786f},
{ 0.468392f, 0.294974f, -0.832826f},
{ 0.000000f, 0.650659f, 0.759370f},
{ 0.000000f, -0.440943f, -0.897535f},
{ 0.423421f, -0.315562f, 0.849197f},
{ 0.254836f, 0.681913f, 0.685604f},
{ -0.810426f, -0.516159f, 0.277110f},
{ -0.833096f, 0.545577f, 0.091089f},
{ 0.000000f, 0.297739f, 0.954647f},
{ 0.738952f, 0.111400f, 0.664485f},
{ 0.690209f, -0.359747f, -0.627848f},
{ -0.000000f, -0.284280f, -0.958741f},
{ 0.783953f, 0.161430f, 0.599465f},
{ 0.847825f, -0.043352f, -0.528501f},
{ 0.000459f, -0.165514f, -0.986207f},
{ -0.000256f, 0.195151f, 0.980773f},
{ 0.840332f, 0.310770f, -0.444144f},
{ 0.737306f, 0.264709f, 0.621538f},
{ 0.004875f, 0.222452f, 0.974932f},
{ -0.007856f, 0.304146f, -0.952593f},
{ 0.339781f, 0.913776f, 0.222628f},
{ 0.679956f, 0.513664f, -0.523267f},
{ 0.137166f, -0.218527f, 0.966143f},
{ 0.307813f, -0.947965f, -0.081327f},
{ 0.821797f, 0.462303f, -0.333055f},
{ 0.888521f, -0.450334f, -0.087914f},
{ -0.805794f, 0.166063f, 0.568437f},
{ -0.413165f, -0.842409f, -0.345892f},
{ 0.709024f, 0.698582f, 0.096272f},
{ 0.805717f, -0.471203f, 0.358870f},
{ -0.646604f, 0.477144f, -0.595178f},
{ -0.633707f, -0.695919f, -0.337805f},
{ 0.003421f, 0.114706f, 0.993394f},
{ 0.808676f, 0.214233f, 0.547858f},
{ 0.808168f, 0.357694f, -0.467888f},
{ -0.003807f, 0.394721f, -0.918793f},
{ -0.958716f, 0.165216f, -0.231445f},
{ -0.904768f, -0.078196f, -0.418665f},
{ -0.826605f, -0.499699f, -0.258892f},
{ -0.857718f, -0.459747f, -0.230114f},
{ -0.549456f, 0.595755f, -0.585811f},
{ -0.363845f, -0.045311f, -0.930357f},
{ -0.485922f, -0.272161f, -0.830547f},
{ -0.520281f, -0.806362f, 0.281226f},
{ -0.238558f, 0.700129f, 0.672985f},
{ -0.414372f, 0.468966f, 0.779979f},
{ -0.188090f, 0.355318f, 0.915626f},
{ -0.517274f, 0.383969f, 0.764850f},
{ -0.453143f, 0.671308f, 0.586522f},
{ -0.383691f, -0.920082f, 0.078935f},
{ 0.760937f, 0.485656f, 0.430248f},
{ 0.216585f, -0.974341f, -0.061248f},
{ -0.463618f, 0.418600f, -0.780918f},
{ -0.408240f, 0.860604f, 0.304468f},
{ -0.351381f, -0.885481f, 0.304063f},
{ 0.894926f, -0.305671f, 0.325075f},
{ -0.682282f, -0.014610f, 0.730943f},
{ 0.412408f, 0.582354f, 0.700560f},
{ -0.700376f, 0.085226f, 0.708668f},
{ -0.687006f, -0.328202f, -0.648310f},
{ -0.848348f, -0.042286f, -0.527749f},
{ -0.782343f, 0.161221f, 0.601621f},
{ -0.846759f, 0.309191f, -0.432898f},
{ -0.728193f, 0.264308f, 0.632358f},
{ -0.643084f, -0.040183f, -0.764741f},
{ -0.760519f, 0.646321f, -0.062289f},
{ -0.168928f, 0.050049f, 0.984357f},
{ 0.479483f, -0.875878f, -0.054165f},
{ -0.553621f, -0.562564f, -0.614024f},
{ -0.905490f, 0.184443f, -0.382190f},
{ 0.311423f, 0.395232f, 0.864180f},
{ 0.857592f, -0.464013f, -0.221876f},
{ -0.968365f, 0.232753f, 0.089972f},
{ -0.507694f, -0.803048f, -0.312027f},
{ 0.412790f, 0.908510f, 0.064914f},
{ 0.946841f, -0.101565f, -0.305250f},
{ -0.804694f, 0.212063f, 0.554524f},
{ -0.811085f, 0.357946f, -0.462618f},
{ -0.867056f, -0.092759f, -0.489499f},
{ -0.841422f, -0.129180f, -0.524711f},
{ -0.771317f, -0.180910f, -0.610198f},
{ -0.758017f, -0.200458f, -0.620667f},
{ -0.867904f, -0.114364f, -0.483388f},
{ -0.867904f, -0.114364f, -0.483388f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 177, 178,
179, 41, 180,
181, 182, 41,
41, 183, 38,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
184, 41, 185,
186, 41, 45,
41, 38, 45,
45, 38, 42,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
187, 45, 188,
189, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
190, 191, 52,
52, 192, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
193, 59, 194,
195, 59, 58,
196, 197, 198,
199, 200, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 201,
202, 203, 59,
59, 204, 12,
205, 206, 207,
208, 209, 59,
54, 55, 210,
211, 55, 212,
66, 69, 67,
67, 69, 68,
213, 214, 17,
17, 215, 216,
63, 66, 62,
62, 66, 67,
217, 218, 61,
61, 219, 220,
61, 221, 55,
55, 222, 223,
224, 225, 55,
55, 226, 227,
228, 229, 230,
231, 232, 233,
234, 235, 236,
237, 238, 17,
239, 240, 241,
242, 243, 244,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 245,
32, 29, 77,
77, 29, 79,
246, 28, 76,
76, 28, 33,
247, 81, 248,
249, 81, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
85, 89, 83,
83, 89, 87,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 344  Texture Co-ords: 191  Normals: 106  Texture: Hurt Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 83