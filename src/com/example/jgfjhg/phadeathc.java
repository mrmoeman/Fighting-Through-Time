package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phadeathc {

static String TextureName = "defeat";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.921386f, -5.067690f,
 0.936363f, 8.883818f, -6.460505f,
 0.791186f, 7.488706f, -6.717707f,
 0.817567f, 6.831365f, -6.024256f,
 0.562201f, 8.958469f, -6.511611f,
 0.444292f, 7.629876f, -7.105208f,
 0.371258f, 6.668550f, -5.933397f,
 0.442211f, 7.923946f, -5.065921f,
 0.033961f, 8.155620f, -4.905835f,
 0.033961f, 9.104577f, -6.617519f,
 0.033961f, 7.724094f, -7.241560f,
 0.033961f, 6.596539f, -5.983156f,
 0.033961f, 8.522595f, -7.145528f,
 0.541219f, 8.464638f, -7.061653f,
 0.936363f, 8.717057f, -6.575876f,
 0.936363f, 7.708959f, -5.214477f,
 0.429582f, 7.654449f, -5.252143f,
 0.033961f, 7.654449f, -5.252143f,
 0.445001f, 7.946733f, -4.756957f,
 0.782250f, 7.970797f, -4.740329f,
 0.432372f, 7.762038f, -4.472662f,
 0.782250f, 7.816550f, -4.434995f,
 1.200907f, 6.577331f, -5.545300f,
 0.776421f, 7.483388f, -5.004588f,
 0.033961f, 7.470141f, -5.050625f,
 0.033961f, 6.491835f, -5.604388f,
 0.700363f, 4.040786f, -4.357142f,
 0.684600f, 4.481499f, -3.817542f,
 0.033961f, 4.590409f, -3.684207f,
 0.033961f, 3.784481f, -4.670970f,
 0.971581f, 6.514309f, -4.532743f,
 0.997360f, 5.784766f, -5.425982f,
 0.033961f, 5.817897f, -5.653340f,
 0.033961f, 6.738352f, -4.408803f,
 1.812852f, 1.465097f, -0.171443f,
 1.774361f, 3.360399f, 1.029998f,
 0.042706f, 3.773729f, 1.289631f,
 0.027133f, 0.932757f, -0.543356f,
 1.484269f, 6.725360f, -5.319420f,
 0.998429f, 7.246202f, -5.380741f,
 0.793665f, 7.277204f, -4.813587f,
 1.351234f, 6.672248f, -4.743176f,
 2.364833f, 7.901873f, -4.202448f,
 2.123474f, 8.168420f, -4.233611f,
 1.939932f, 8.107077f, -3.998083f,
 2.217147f, 7.797669f, -3.963278f,
 3.655214f, 8.835075f, -3.004845f,
 3.156892f, 9.391130f, -3.067448f,
 2.769335f, 9.218646f, -2.644191f,
 3.326189f, 8.592851f, -2.575705f,
 0.041880f, 4.095028f, -1.731725f,
 1.174261f, 3.957599f, -1.767347f,
 1.196604f, 2.634660f, -2.095850f,
 0.026218f, 2.270034f, -2.210061f,
 -0.868441f, 8.717057f, -6.575876f,
 -0.868441f, 7.708959f, -5.214477f,
 -0.749646f, 6.831365f, -6.024256f,
 -0.723264f, 7.488706f, -6.717707f,
 -0.376369f, 7.629876f, -7.105208f,
 -0.473295f, 8.464638f, -7.061653f,
 -0.303336f, 6.668550f, -5.933397f,
 -0.361660f, 7.654449f, -5.252143f,
 -0.374288f, 7.923946f, -5.065921f,
 -1.204989f, 7.921386f, -5.067690f,
 -0.868441f, 8.883818f, -6.460505f,
 -0.494279f, 8.958469f, -6.511611f,
 -0.714328f, 7.970797f, -4.740329f,
 -0.377078f, 7.946733f, -4.756957f,
 -0.364450f, 7.762038f, -4.472662f,
 -0.714328f, 7.816550f, -4.434995f,
 -0.708500f, 7.483388f, -5.004588f,
 -1.132985f, 6.577330f, -5.545300f,
 -3.962679f, 8.538122f, -3.025211f,
 -3.438755f, 9.036506f, -2.828847f,
 -3.206146f, 8.748274f, -2.357772f,
 -3.791411f, 8.187286f, -2.579483f,
 -0.903658f, 6.514309f, -4.532743f,
 -0.929437f, 5.784766f, -5.425982f,
 -0.616678f, 4.481499f, -3.817542f,
 -0.632440f, 4.040786f, -4.357142f,
 -1.092757f, 3.985609f, -1.744425f,
 -1.138195f, 2.645571f, -2.091707f,
 -0.995646f, 7.149634f, -5.079395f,
 -1.548968f, 6.724685f, -5.235379f,
 -0.896151f, 6.998866f, -4.503267f,
 -1.532125f, 6.504307f, -4.684266f,
 -2.171906f, 7.934019f, -3.878860f,
 -2.425766f, 7.695191f, -3.972610f,
 -2.071152f, 7.811106f, -3.618735f,
 -2.362608f, 7.533785f, -3.728005f,
 -1.693537f, 3.372273f, 1.036769f,
 -1.752974f, 1.478767f, -0.168142f,
 2.540790f, 8.828559f, -3.100256f,
 2.801336f, 8.915638f, -3.434599f,
 3.143958f, 8.537262f, -3.390362f,
 2.934311f, 8.389339f, -3.050849f,
 -2.873099f, 8.423031f, -2.800144f,
 -3.286834f, 8.029361f, -2.955260f,
 -3.376490f, 8.258483f, -3.302488f,
 -3.016123f, 8.597511f, -3.169404f,
 2.667583f, 4.169382f, 2.318834f,
 2.282885f, 4.837960f, 2.400680f,
 3.452000f, 5.095904f, -7.832867f,
 2.032300f, 6.731945f, -7.614820f,
 2.898753f, 5.304532f, -5.867339f,
 2.514056f, 5.973110f, -5.785493f,
 0.791186f, 7.488706f, -6.717707f,
 0.791186f, 7.488706f, -6.717707f,
 0.936363f, 8.717057f, -6.575876f,
 0.817567f, 6.831365f, -6.024256f,
 0.371258f, 6.668550f, -5.933397f,
 0.791186f, 7.488706f, -6.717707f,
 0.791186f, 7.488706f, -6.717707f,
 0.371258f, 6.668550f, -5.933397f,
 0.371258f, 6.668550f, -5.933397f,
 0.033961f, 9.104577f, -6.617519f,
 0.033961f, 9.104577f, -6.617519f,
 0.562201f, 8.958469f, -6.511611f,
 0.562201f, 8.958469f, -6.511611f,
 0.936363f, 8.717057f, -6.575876f,
 0.936363f, 8.717057f, -6.575876f,
 0.562201f, 8.958469f, -6.511611f,
 0.936363f, 8.883818f, -6.460505f,
 1.272911f, 7.921386f, -5.067690f,
 0.936363f, 8.883818f, -6.460505f,
 0.936363f, 8.883818f, -6.460505f,
 0.429582f, 7.654449f, -5.252143f,
 0.442211f, 7.923946f, -5.065921f,
 0.442211f, 7.923946f, -5.065921f,
 0.033961f, 8.155620f, -4.905835f,
 0.442211f, 7.923946f, -5.065921f,
 0.445001f, 7.946733f, -4.756957f,
 0.445001f, 7.946733f, -4.756957f,
 0.432372f, 7.762038f, -4.472662f,
 0.432372f, 7.762038f, -4.472662f,
 0.432372f, 7.762038f, -4.472662f,
 0.782250f, 7.816550f, -4.434995f,
 1.272911f, 7.921386f, -5.067690f,
 0.782250f, 7.970797f, -4.740329f,
 0.782250f, 7.970797f, -4.740329f,
 0.782250f, 7.816550f, -4.434995f,
 0.429582f, 7.654449f, -5.252143f,
 0.776421f, 7.483388f, -5.004588f,
 0.371258f, 6.668550f, -5.933397f,
 0.371258f, 6.668550f, -5.933397f,
 0.776421f, 7.483388f, -5.004588f,
 1.200907f, 6.577331f, -5.545300f,
 0.033961f, 7.470141f, -5.050625f,
 0.429582f, 7.654449f, -5.252143f,
 0.429582f, 7.654449f, -5.252143f,
 0.033961f, 7.470141f, -5.050625f,
 0.776421f, 7.483388f, -5.004588f,
 0.033961f, 6.596539f, -5.983156f,
 0.371258f, 6.668550f, -5.933397f,
 0.033961f, 6.491835f, -5.604388f,
 0.033961f, 6.491835f, -5.604388f,
 0.371258f, 6.668550f, -5.933397f,
 1.200907f, 6.577331f, -5.545300f,
 0.971581f, 6.514309f, -4.532743f,
 0.684600f, 4.481499f, -3.817542f,
 0.700363f, 4.040786f, -4.357142f,
 0.684600f, 4.481499f, -3.817542f,
 0.684600f, 4.481499f, -3.817542f,
 1.174261f, 3.957599f, -1.767347f,
 0.033961f, 4.590409f, -3.684207f,
 0.684600f, 4.481499f, -3.817542f,
 0.684600f, 4.481499f, -3.817542f,
 0.033961f, 3.784481f, -4.670970f,
 0.700363f, 4.040786f, -4.357142f,
 0.700363f, 4.040786f, -4.357142f,
 0.776421f, 7.483388f, -5.004588f,
 1.200907f, 6.577331f, -5.545300f,
 1.200907f, 6.577331f, -5.545300f,
 0.776421f, 7.483388f, -5.004588f,
 0.776421f, 7.483388f, -5.004588f,
 0.971581f, 6.514309f, -4.532743f,
 0.997360f, 5.784766f, -5.425982f,
 0.971581f, 6.514309f, -4.532743f,
 0.971581f, 6.514309f, -4.532743f,
 0.793665f, 7.277204f, -4.813587f,
 0.997360f, 5.784766f, -5.425982f,
 1.200907f, 6.577331f, -5.545300f,
 1.200907f, 6.577331f, -5.545300f,
 0.793665f, 7.277204f, -4.813587f,
 1.939932f, 8.107077f, -3.998083f,
 1.939932f, 8.107077f, -3.998083f,
 1.939932f, 8.107077f, -3.998083f,
 2.540790f, 8.828559f, -3.100256f,
 2.540790f, 8.828559f, -3.100256f,
 1.174261f, 3.957599f, -1.767347f,
 1.174261f, 3.957599f, -1.767347f,
 1.774361f, 3.360399f, 1.029998f,
 -0.868441f, 8.717057f, -6.575876f,
 -0.723264f, 7.488706f, -6.717707f,
 -0.723264f, 7.488706f, -6.717707f,
 -0.749646f, 6.831365f, -6.024256f,
 -0.723264f, 7.488706f, -6.717707f,
 -0.303336f, 6.668550f, -5.933397f,
 -0.303336f, 6.668550f, -5.933397f,
 -0.723264f, 7.488706f, -6.717707f,
 -0.303336f, 6.668550f, -5.933397f,
 -0.494279f, 8.958469f, -6.511611f,
 0.033961f, 9.104577f, -6.617519f,
 0.033961f, 9.104577f, -6.617519f,
 -0.868441f, 8.883818f, -6.460505f,
 -0.494279f, 8.958469f, -6.511611f,
 -0.868441f, 8.717057f, -6.575876f,
 -0.868441f, 8.717057f, -6.575876f,
 -0.494279f, 8.958469f, -6.511611f,
 -0.868441f, 8.883818f, -6.460505f,
 -0.868441f, 8.883818f, -6.460505f,
 -1.204989f, 7.921386f, -5.067690f,
 0.033961f, 8.155620f, -4.905835f,
 -0.374288f, 7.923946f, -5.065921f,
 -0.374288f, 7.923946f, -5.065921f,
 -0.361660f, 7.654449f, -5.252143f,
 -0.374288f, 7.923946f, -5.065921f,
 -0.377078f, 7.946733f, -4.756957f,
 -0.377078f, 7.946733f, -4.756957f,
 -0.364450f, 7.762038f, -4.472662f,
 -0.364450f, 7.762038f, -4.472662f,
 -0.364450f, 7.762038f, -4.472662f,
 -0.714328f, 7.816550f, -4.434995f,
 -0.714328f, 7.816550f, -4.434995f,
 -0.714328f, 7.970797f, -4.740329f,
 -0.714328f, 7.970797f, -4.740329f,
 -1.204989f, 7.921386f, -5.067690f,
 -1.132985f, 6.577330f, -5.545300f,
 -0.708500f, 7.483388f, -5.004588f,
 -0.303336f, 6.668550f, -5.933397f,
 -0.303336f, 6.668550f, -5.933397f,
 -0.708500f, 7.483388f, -5.004588f,
 -0.361660f, 7.654449f, -5.252143f,
 -0.708500f, 7.483388f, -5.004588f,
 0.033961f, 7.470141f, -5.050625f,
 -0.361660f, 7.654449f, -5.252143f,
 -0.361660f, 7.654449f, -5.252143f,
 0.033961f, 7.470141f, -5.050625f,
 0.033961f, 6.596539f, -5.983156f,
 0.033961f, 6.491835f, -5.604388f,
 -0.303336f, 6.668550f, -5.933397f,
 -0.303336f, 6.668550f, -5.933397f,
 0.033961f, 6.491835f, -5.604388f,
 -1.132985f, 6.577330f, -5.545300f,
 -0.903658f, 6.514309f, -4.532743f,
 -0.616678f, 4.481499f, -3.817542f,
 -0.632440f, 4.040786f, -4.357142f,
 -0.616678f, 4.481499f, -3.817542f,
 -0.616678f, 4.481499f, -3.817542f,
 -1.092757f, 3.985609f, -1.744425f,
 -0.616678f, 4.481499f, -3.817542f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.481499f, -3.817542f,
 0.041880f, 4.095028f, -1.731725f,
 0.033961f, 4.590409f, -3.684207f,
 0.033961f, 3.784481f, -4.670970f,
 0.026218f, 2.270034f, -2.210061f,
 -0.632440f, 4.040786f, -4.357142f,
 -0.632440f, 4.040786f, -4.357142f,
 0.026218f, 2.270034f, -2.210061f,
 -1.138195f, 2.645571f, -2.091707f,
 -1.548968f, 6.724685f, -5.235379f,
 -0.995646f, 7.149634f, -5.079395f,
 -1.132985f, 6.577330f, -5.545300f,
 -1.132985f, 6.577330f, -5.545300f,
 -0.995646f, 7.149634f, -5.079395f,
 -0.708500f, 7.483388f, -5.004588f,
 -0.903658f, 6.514309f, -4.532743f,
 -0.708500f, 7.483388f, -5.004588f,
 -0.896151f, 6.998866f, -4.503267f,
 -0.708500f, 7.483388f, -5.004588f,
 -0.995646f, 7.149634f, -5.079395f,
 -0.896151f, 6.998866f, -4.503267f,
 -0.896151f, 6.998866f, -4.503267f,
 -1.532125f, 6.504307f, -4.684266f,
 -0.903658f, 6.514309f, -4.532743f,
 -0.903658f, 6.514309f, -4.532743f,
 -1.532125f, 6.504307f, -4.684266f,
 -0.929437f, 5.784766f, -5.425982f,
 -0.929437f, 5.784766f, -5.425982f,
 -1.532125f, 6.504307f, -4.684266f,
 -1.132985f, 6.577330f, -5.545300f,
 -1.132985f, 6.577330f, -5.545300f,
 -1.532125f, 6.504307f, -4.684266f,
 -1.548968f, 6.724685f, -5.235379f,
 -0.995646f, 7.149634f, -5.079395f,
 -2.171906f, 7.934019f, -3.878860f,
 -0.896151f, 6.998866f, -4.503267f,
 -0.896151f, 6.998866f, -4.503267f,
 -2.171906f, 7.934019f, -3.878860f,
 -2.071152f, 7.811106f, -3.618735f,
 -2.873099f, 8.423031f, -2.800144f,
 -2.071152f, 7.811106f, -3.618735f,
 -3.016123f, 8.597511f, -3.169404f,
 -3.016123f, 8.597511f, -3.169404f,
 -2.071152f, 7.811106f, -3.618735f,
 -2.171906f, 7.934019f, -3.878860f,
 -1.138195f, 2.645571f, -2.091707f,
 -1.752974f, 1.478767f, -0.168142f,
 -1.092757f, 3.985609f, -1.744425f,
 -1.092757f, 3.985609f, -1.744425f,
 -1.752974f, 1.478767f, -0.168142f,
 -1.693537f, 3.372273f, 1.036769f,
 3.143958f, 8.537262f, -3.390362f,
 3.156892f, 9.391130f, -3.067448f,
 3.655214f, 8.835075f, -3.004845f,
 2.934311f, 8.389339f, -3.050849f,
 3.143958f, 8.537262f, -3.390362f,
 3.326189f, 8.592851f, -2.575705f,
 3.326189f, 8.592851f, -2.575705f,
 3.143958f, 8.537262f, -3.390362f,
 3.655214f, 8.835075f, -3.004845f,
 2.540790f, 8.828559f, -3.100256f,
 2.934311f, 8.389339f, -3.050849f,
 2.769335f, 9.218646f, -2.644191f,
 2.769335f, 9.218646f, -2.644191f,
 2.934311f, 8.389339f, -3.050849f,
 3.326189f, 8.592851f, -2.575705f,
 -3.286834f, 8.029361f, -2.955260f,
 -3.206146f, 8.748274f, -2.357772f,
 -3.791411f, 8.187286f, -2.579483f,
 -3.286834f, 8.029361f, -2.955260f,
 -3.791411f, 8.187286f, -2.579483f,
 -3.376490f, 8.258483f, -3.302488f,
 -3.376490f, 8.258483f, -3.302488f,
 -3.791411f, 8.187286f, -2.579483f,
 -3.962679f, 8.538122f, -3.025211f,
 -3.016123f, 8.597511f, -3.169404f,
 -3.376490f, 8.258483f, -3.302488f,
 -3.438755f, 9.036506f, -2.828847f,
 -3.438755f, 9.036506f, -2.828847f,
 -3.376490f, 8.258483f, -3.302488f,
 -3.962679f, 8.538122f, -3.025211f,
 -3.016123f, 8.597511f, -3.169404f,
 -3.438755f, 9.036506f, -2.828847f,
 -2.873099f, 8.423031f, -2.800144f,
 2.667583f, 4.169382f, 2.318834f,
 2.282885f, 4.837960f, 2.400680f,
 2.898753f, 5.304532f, -5.867339f,
 2.898753f, 5.304532f, -5.867339f,
 2.282885f, 4.837960f, 2.400680f,
 2.514056f, 5.973110f, -5.785493f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.177173f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.049042f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.817124f, 0.248044f,
 0.853660f, 0.094340f,
 0.900004f, 0.283013f,
 0.900004f, 0.283013f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.032562f, -0.282494f},
{ 0.826605f, -0.562575f, 0.015294f},
{ 0.904768f, -0.271054f, -0.328519f},
{ 0.857718f, -0.513685f, 0.021141f},
{ 0.363847f, -0.489926f, -0.792205f},
{ 0.549456f, 0.237811f, -0.800964f},
{ 0.485921f, -0.640131f, -0.595074f},
{ 0.520280f, -0.569521f, 0.636360f},
{ 0.517275f, 0.706175f, 0.483471f},
{ 0.414373f, 0.787877f, 0.455571f},
{ 0.188089f, 0.754077f, 0.629277f},
{ 0.238558f, 0.938380f, 0.250065f},
{ 0.000000f, 0.990257f, 0.139249f},
{ 0.000000f, 0.679909f, 0.733296f},
{ -0.000000f, -0.435297f, -0.900287f},
{ 0.000000f, 0.418246f, -0.908334f},
{ -0.000000f, -0.820574f, -0.571540f},
{ 0.453144f, 0.871312f, 0.188350f},
{ -0.760935f, 0.633221f, 0.141453f},
{ 0.383690f, -0.766941f, 0.514376f},
{ -0.216586f, -0.882266f, 0.417968f},
{ -0.000000f, -0.136837f, 0.990594f},
{ 0.474239f, 0.857291f, 0.200372f},
{ 0.567569f, 0.045438f, -0.822071f},
{ -0.000000f, 0.679507f, 0.733669f},
{ 0.000000f, -0.328424f, -0.944530f},
{ 0.983490f, 0.103473f, -0.148465f},
{ 0.367320f, 0.921908f, -0.123132f},
{ 0.230818f, -0.371589f, 0.899247f},
{ -0.391036f, 0.500012f, 0.772709f},
{ -0.000000f, 0.394813f, 0.918762f},
{ 0.633146f, 0.147364f, 0.759875f},
{ 0.747227f, -0.376772f, -0.547444f},
{ 0.000000f, -0.376700f, -0.926335f},
{ 0.892373f, 0.371321f, 0.256498f},
{ 0.746659f, -0.464006f, -0.476654f},
{ 0.000549f, -0.692802f, -0.721128f},
{ -0.000249f, 0.697721f, 0.716370f},
{ 0.736993f, -0.453427f, -0.501244f},
{ 0.761186f, 0.646385f, -0.052750f},
{ 0.013257f, 0.988597f, 0.149999f},
{ -0.004849f, -0.801799f, -0.597574f},
{ 0.004476f, 0.627044f, -0.778971f},
{ 0.791621f, -0.121317f, -0.598848f},
{ -0.694083f, 0.423596f, 0.582079f},
{ 0.451587f, -0.586770f, 0.672139f},
{ 0.085095f, 0.721107f, -0.687578f},
{ 0.819758f, -0.151004f, -0.552444f},
{ -0.759889f, 0.198824f, 0.618900f},
{ -0.001898f, -0.706951f, 0.707260f},
{ -0.017384f, 0.695266f, -0.718542f},
{ 0.737437f, -0.237219f, -0.632388f},
{ -0.897862f, 0.144845f, 0.415769f},
{ -0.169749f, -0.795889f, 0.581160f},
{ 0.005413f, 0.988739f, 0.149552f},
{ 0.744833f, 0.667025f, -0.017383f},
{ 0.870724f, -0.268928f, -0.411724f},
{ -0.003405f, -0.794215f, -0.607627f},
{ -0.958716f, 0.032562f, -0.282495f},
{ -0.904768f, -0.271054f, -0.328519f},
{ -0.826605f, -0.562575f, 0.015295f},
{ -0.857718f, -0.513686f, 0.021141f},
{ -0.549456f, 0.237811f, -0.800965f},
{ -0.363847f, -0.489926f, -0.792205f},
{ -0.485921f, -0.640131f, -0.595074f},
{ -0.520281f, -0.569521f, 0.636360f},
{ -0.238558f, 0.938380f, 0.250065f},
{ -0.414373f, 0.787877f, 0.455572f},
{ -0.188089f, 0.754077f, 0.629278f},
{ -0.517273f, 0.706176f, 0.483471f},
{ -0.453143f, 0.871312f, 0.188351f},
{ -0.383691f, -0.766941f, 0.514377f},
{ 0.760937f, 0.633219f, 0.141453f},
{ 0.216586f, -0.882267f, 0.417967f},
{ -0.520023f, 0.083130f, -0.850097f},
{ -0.469359f, 0.859584f, 0.202035f},
{ -0.886383f, 0.238800f, -0.396612f},
{ -0.510056f, -0.498357f, 0.701058f},
{ -0.262190f, 0.964526f, -0.030765f},
{ 0.168040f, 0.305924f, 0.937109f},
{ -0.572891f, 0.075902f, 0.816110f},
{ -0.735625f, -0.401912f, -0.545273f},
{ -0.746986f, -0.462749f, -0.477363f},
{ -0.892112f, 0.373504f, 0.254228f},
{ -0.750312f, -0.439249f, -0.494057f},
{ -0.750830f, 0.658745f, -0.048053f},
{ -0.673690f, 0.174171f, -0.718196f},
{ -0.146804f, 0.868811f, -0.472881f},
{ 0.654617f, 0.162331f, 0.738326f},
{ -0.461776f, -0.772042f, 0.436708f},
{ -0.669096f, 0.146003f, -0.728693f},
{ 0.207396f, 0.874896f, -0.437656f},
{ 0.655270f, 0.002280f, 0.755391f},
{ -0.148800f, -0.810253f, 0.566876f},
{ 0.270369f, 0.806373f, -0.525988f},
{ -0.525589f, -0.035153f, -0.850012f},
{ 0.738286f, -0.034389f, 0.673611f},
{ -0.056465f, -0.901203f, 0.429704f},
{ -0.742447f, 0.669786f, -0.012672f},
{ -0.873917f, -0.260831f, -0.410166f},
{ -0.867056f, -0.484895f, -0.114415f},
{ -0.841422f, -0.531879f, -0.095470f},
{ -0.771317f, -0.631017f, -0.082995f},
{ -0.758017f, -0.648533f, -0.069397f},
{ -0.867904f, -0.488102f, -0.092192f},
{ -0.867904f, -0.488102f, -0.092192f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
31, 26, 32,
32, 26, 29,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
39, 173, 40,
174, 175, 40,
176, 41, 177,
178, 41, 179,
180, 181, 41,
41, 182, 38,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
52, 189, 34,
34, 190, 191,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
29, 79, 32,
32, 79, 77,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
83, 87, 82,
82, 87, 86,
88, 89, 84,
84, 89, 85,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: defeat Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86