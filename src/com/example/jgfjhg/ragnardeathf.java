package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class ragnardeathf {

static String TextureName = "RagDeath6.mtl";

static int Vertices = 238;

static int VertTexts = 170;

static int Normals = 123;

static int Faces = 168;

static int FacesB = 0;

static int SmoothGroups = 16;

static float VertArray[] = new float[]{
 -4.344085f, 4.406602f, -12.727647f,
 -3.160328f, 5.710306f, -13.725739f,
 -5.749362f, 7.785328f, -16.365835f,
 -6.605596f, 4.924563f, -14.477382f,
 -1.047977f, 4.394626f, -14.166945f,
 -2.586059f, 5.708755f, -13.972799f,
 -2.710964f, 7.757407f, -17.674059f,
 -0.823025f, 4.781965f, -17.035048f,
 -4.366854f, 5.586479f, -13.459436f,
 -3.844751f, 5.585903f, -12.232340f,
 -2.859181f, 4.188199f, -10.767024f,
 -0.965592f, 4.822879f, -10.081427f,
 -2.288646f, 6.030383f, -12.474777f,
 -3.219686f, 6.142178f, -14.663755f,
 -4.590876f, 4.491450f, -13.156653f,
 -4.998539f, 3.263573f, -13.969162f,
 -3.798568f, 2.846493f, -15.581897f,
 -0.278954f, 3.278840f, -9.485165f,
 -2.570898f, 4.376705f, -10.712515f,
 -1.447159f, 4.297678f, -7.002378f,
 -1.420888f, 1.461604f, -7.788953f,
 -4.815877f, 4.749710f, -11.230380f,
 -6.282065f, 0.649200f, -10.406523f,
 -3.262257f, 5.690926f, -14.647448f,
 -2.509611f, -0.080997f, -13.334735f,
 0.546101f, 0.829517f, -7.329985f,
 0.324835f, 5.016155f, -6.003421f,
 -7.062062f, 3.174909f, -11.068537f,
 -4.126166f, 2.252736f, -16.149410f,
 -1.900476f, 3.710239f, -9.008180f,
 -0.389271f, 4.145107f, -9.676240f,
 -0.658792f, 1.151650f, -10.161575f,
 -2.014996f, 1.724175f, -9.323804f,
 -2.453219f, 2.805846f, -9.057920f,
 -1.990687f, 2.773645f, -6.708035f,
 0.159018f, 2.135444f, -5.823870f,
 -6.080795f, 2.334676f, -9.692574f,
 -4.320751f, 1.113375f, -9.203948f,
 -5.421626f, -0.206482f, -8.545526f,
 -6.980349f, 0.461413f, -8.879407f,
 -4.263272f, 2.248196f, -6.499282f,
 -3.225326f, 1.406154f, -6.471546f,
 -3.939425f, 0.533479f, -6.033362f,
 -4.978914f, 1.389559f, -6.048851f,
 -5.341667f, 1.619275f, -12.054343f,
 -5.810851f, 3.720472f, -12.881666f,
 -4.349379f, 2.220898f, -10.941268f,
 -4.546842f, 4.037447f, -11.163673f,
 -0.842401f, 2.386525f, -4.973496f,
 -0.965876f, 4.185262f, -4.210246f,
 -1.943401f, 2.734408f, -5.066816f,
 -2.034445f, 4.108596f, -4.529896f,
 -1.031474f, 0.275086f, -3.564515f,
 -0.889365f, 4.131251f, -1.702129f,
 -2.385358f, 0.421046f, -3.497250f,
 -2.384412f, 4.082007f, -1.725997f,
 0.112090f, 2.320688f, -7.908749f,
 -0.830535f, 2.400459f, -7.619845f,
 -0.868224f, 3.553911f, -7.534806f,
 0.147033f, 3.562508f, -7.747774f,
 -2.171990f, 2.485756f, -3.859427f,
 -2.197125f, 1.195390f, -4.042477f,
 -1.104137f, 0.980309f, -4.144722f,
 -1.094062f, 2.551403f, -3.710176f,
 -1.562485f, 5.576912f, -14.668995f,
 -1.034344f, 5.584145f, -13.432637f,
 -0.662128f, 4.188199f, -11.701267f,
 -1.302601f, 4.491425f, -15.055158f,
 -1.802545f, 3.262507f, -15.814347f,
 -0.200733f, 4.376592f, -12.090204f,
 2.515425f, 4.201042f, -8.603490f,
 2.222803f, 1.464799f, -9.576881f,
 0.100721f, 3.551490f, -16.736872f,
 2.127082f, 1.393610f, -14.070881f,
 0.919434f, 1.218136f, -16.258320f,
 0.949420f, 3.710480f, -10.652597f,
 0.793700f, 1.727675f, -10.936089f,
 1.181134f, 2.806951f, -11.155830f,
 3.104462f, 2.676913f, -8.513368f,
 3.032224f, 1.054693f, -16.280697f,
 4.433483f, 2.729486f, -15.899460f,
 4.057656f, 2.616773f, -14.091569f,
 2.975549f, 1.309681f, -14.033781f,
 6.696940f, 0.894802f, -15.366661f,
 7.254338f, 2.088733f, -15.157304f,
 7.003856f, 2.014611f, -13.990396f,
 6.443853f, 0.807367f, -14.185615f,
 0.027330f, 1.619115f, -15.153310f,
 -0.493037f, 3.612925f, -16.042599f,
 0.495236f, 2.220898f, -13.738307f,
 0.404811f, 4.044304f, -14.042292f,
 1.128656f, 2.162230f, -6.445054f,
 1.202759f, 4.052340f, -6.015691f,
 2.262113f, 2.452746f, -6.350889f,
 2.307215f, 3.902024f, -5.985296f,
 1.293216f, 0.276789f, -4.450616f,
 2.107158f, 4.131250f, -2.767594f,
 2.503241f, 0.422144f, -5.057931f,
 3.389714f, 4.082006f, -3.535615f,
 0.828253f, 2.322358f, -8.444798f,
 1.670525f, 2.407977f, -9.118204f,
 1.809642f, 3.553424f, -9.049770f,
 0.842721f, 3.556037f, -8.411406f,
 2.169511f, 2.470527f, -5.127405f,
 2.070721f, 1.195102f, -5.444951f,
 1.071880f, 0.980054f, -4.992858f,
 1.155486f, 2.566677f, -4.877013f,
 3.690812f, 1.277070f, -9.457669f,
 8.070444f, 0.896594f, -8.554046f,
 5.954054f, 1.820127f, -18.960197f,
 10.230743f, 1.682254f, -17.813620f,
 -4.141401f, 4.466302f, -10.386559f,
 -1.416373f, 4.804986f, -5.105002f,
 -5.245639f, 0.047463f, -2.755166f,
 -8.062696f, -0.220683f, -8.138286f,
 -7.062062f, 3.174909f, -11.068537f,
 -4.126166f, 2.252736f, -16.149410f,
 -4.126166f, 2.252736f, -16.149410f,
 -2.453219f, 2.805846f, -9.057920f,
 -2.453219f, 2.805846f, -9.057920f,
 -7.062062f, 3.174909f, -11.068537f,
 -1.990687f, 2.773645f, -6.708035f,
 -2.453219f, 2.805846f, -9.057920f,
 -2.453219f, 2.805846f, -9.057920f,
 -1.990687f, 2.773645f, -6.708035f,
 0.159018f, 2.135444f, -5.823870f,
 -3.939425f, 0.533479f, -6.033362f,
 -4.978914f, 1.389559f, -6.048851f,
 -4.978914f, 1.389559f, -6.048851f,
 -3.939425f, 0.533479f, -6.033362f,
 -3.939425f, 0.533479f, -6.033362f,
 -5.421626f, -0.206482f, -8.545526f,
 -4.978914f, 1.389559f, -6.048851f,
 -4.978914f, 1.389559f, -6.048851f,
 -5.421626f, -0.206482f, -8.545526f,
 -4.349379f, 2.220898f, -10.941268f,
 -4.349379f, 2.220898f, -10.941268f,
 -0.842401f, 2.386525f, -4.973496f,
 -0.842401f, 2.386525f, -4.973496f,
 -1.104137f, 0.980309f, -4.144722f,
 0.112090f, 2.320688f, -7.908749f,
 -0.842401f, 2.386525f, -4.973496f,
 -0.842401f, 2.386525f, -4.973496f,
 -2.197125f, 1.195390f, -4.042477f,
 -2.171990f, 2.485756f, -3.859427f,
 -2.171990f, 2.485756f, -3.859427f,
 -1.031474f, 0.275086f, -3.564515f,
 -1.104137f, 0.980309f, -4.144722f,
 -1.104137f, 0.980309f, -4.144722f,
 -2.197125f, 1.195390f, -4.042477f,
 -0.889365f, 4.131251f, -1.702129f,
 -1.031474f, 0.275086f, -3.564515f,
 -1.094062f, 2.551403f, -3.710176f,
 -1.094062f, 2.551403f, -3.710176f,
 -1.031474f, 0.275086f, -3.564515f,
 -1.104137f, 0.980309f, -4.144722f,
 -2.171990f, 2.485756f, -3.859427f,
 -1.094062f, 2.551403f, -3.710176f,
 -1.094062f, 2.551403f, -3.710176f,
 -0.889365f, 4.131251f, -1.702129f,
 -0.965592f, 4.822879f, -10.081427f,
 -2.288646f, 6.030383f, -12.474777f,
 -2.288646f, 6.030383f, -12.474777f,
 -2.288646f, 6.030383f, -12.474777f,
 -2.288646f, 6.030383f, -12.474777f,
 -3.219686f, 6.142178f, -14.663755f,
 -3.798568f, 2.846493f, -15.581897f,
 -3.798568f, 2.846493f, -15.581897f,
 -3.219686f, 6.142178f, -14.663755f,
 -0.965592f, 4.822879f, -10.081427f,
 -0.965592f, 4.822879f, -10.081427f,
 -0.278954f, 3.278840f, -9.485165f,
 -4.126166f, 2.252736f, -16.149410f,
 -2.509611f, -0.080997f, -13.334735f,
 -2.509611f, -0.080997f, -13.334735f,
 0.919434f, 1.218136f, -16.258320f,
 -4.126166f, 2.252736f, -16.149410f,
 -4.126166f, 2.252736f, -16.149410f,
 -3.262257f, 5.690926f, -14.647448f,
 -0.658792f, 1.151650f, -10.161575f,
 -2.509611f, -0.080997f, -13.334735f,
 -2.509611f, -0.080997f, -13.334735f,
 -0.389271f, 4.145107f, -9.676240f,
 -0.389271f, 4.145107f, -9.676240f,
 0.324835f, 5.016155f, -6.003421f,
 0.919434f, 1.218136f, -16.258320f,
 1.181134f, 2.806951f, -11.155830f,
 1.181134f, 2.806951f, -11.155830f,
 -0.658792f, 1.151650f, -10.161575f,
 -0.658792f, 1.151650f, -10.161575f,
 0.546101f, 0.829517f, -7.329985f,
 -3.262257f, 5.690926f, -14.647448f,
 -0.389271f, 4.145107f, -9.676240f,
 -0.389271f, 4.145107f, -9.676240f,
 3.104462f, 2.676913f, -8.513368f,
 1.181134f, 2.806951f, -11.155830f,
 1.181134f, 2.806951f, -11.155830f,
 0.324835f, 5.016155f, -6.003421f,
 0.159018f, 2.135444f, -5.823870f,
 0.159018f, 2.135444f, -5.823870f,
 3.104462f, 2.676913f, -8.513368f,
 0.159018f, 2.135444f, -5.823870f,
 0.546101f, 0.829517f, -7.329985f,
 0.546101f, 0.829517f, -7.329985f,
 6.443853f, 0.807367f, -14.185615f,
 6.443853f, 0.807367f, -14.185615f,
 7.003856f, 2.014611f, -13.990396f,
 7.003856f, 2.014611f, -13.990396f,
 7.003856f, 2.014611f, -13.990396f,
 4.057656f, 2.616773f, -14.091569f,
 6.443853f, 0.807367f, -14.185615f,
 6.443853f, 0.807367f, -14.185615f,
 0.495236f, 2.220898f, -13.738307f,
 0.495236f, 2.220898f, -13.738307f,
 4.057656f, 2.616773f, -14.091569f,
 1.071880f, 0.980054f, -4.992858f,
 1.128656f, 2.162230f, -6.445054f,
 1.128656f, 2.162230f, -6.445054f,
 1.128656f, 2.162230f, -6.445054f,
 1.128656f, 2.162230f, -6.445054f,
 0.828253f, 2.322358f, -8.444798f,
 2.169511f, 2.470527f, -5.127405f,
 2.169511f, 2.470527f, -5.127405f,
 2.070721f, 1.195102f, -5.444951f,
 2.070721f, 1.195102f, -5.444951f,
 1.071880f, 0.980054f, -4.992858f,
 1.071880f, 0.980054f, -4.992858f,
 1.293216f, 0.276789f, -4.450616f,
 1.071880f, 0.980054f, -4.992858f,
 1.293216f, 0.276789f, -4.450616f,
 1.155486f, 2.566677f, -4.877013f,
 1.155486f, 2.566677f, -4.877013f,
 1.293216f, 0.276789f, -4.450616f,
 2.107158f, 4.131250f, -2.767594f,
 2.169511f, 2.470527f, -5.127405f,
 1.155486f, 2.566677f, -4.877013f,
 1.155486f, 2.566677f, -4.877013f,
 2.107158f, 4.131250f, -2.767594f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.210839f, -0.041423f,
 0.285887f, 0.101580f,
 0.176571f, 0.484642f,
 0.021531f, 0.163306f,
 0.210839f, -0.041423f,
 0.285887f, 0.101580f,
 0.176571f, 0.484642f,
 0.021531f, 0.163306f,
 0.092566f, 0.905169f,
 0.103424f, 0.808166f,
 0.093844f, 0.625832f,
 0.013347f, 0.528962f,
 0.013347f, 0.808166f,
 0.013347f, 0.941674f,
 0.192207f, 0.808166f,
 0.164310f, 0.929344f,
 0.013347f, 0.989437f,
 0.013347f, 0.412760f,
 0.165447f, 0.558111f,
 0.620875f, 0.595240f,
 0.893289f, 0.616672f,
 0.633892f, 0.833904f,
 0.846020f, 0.811014f,
 0.508256f, 0.857141f,
 0.999194f, 0.825257f,
 0.975622f, 0.556485f,
 0.551829f, 0.529642f,
 0.762511f, 0.879742f,
 0.968799f, 0.979409f,
 0.592427f, 0.672403f,
 0.542608f, 0.666950f,
 0.971098f, 0.678132f,
 0.889854f, 0.680554f,
 0.843077f, 0.676027f,
 0.846481f, 0.575682f,
 0.639777f, 0.472055f,
 0.356757f, 0.879728f,
 0.286059f, 0.832288f,
 0.480386f, 0.813107f,
 0.433271f, 0.853567f,
 0.350836f, 0.738776f,
 0.303186f, 0.720185f,
 0.320873f, 0.678150f,
 0.368114f, 0.697246f,
 0.443448f, 0.971941f,
 0.356050f, 0.998934f,
 0.503720f, 0.952628f,
 0.274924f, 0.967028f,
 0.230404f, 0.625207f,
 0.363360f, 0.611016f,
 0.276621f, 0.620714f,
 0.326923f, 0.611250f,
 0.843016f, 0.589495f,
 0.732209f, 0.478687f,
 0.806926f, 0.616705f,
 0.702961f, 0.512947f,
 0.171796f, 0.511290f,
 0.236933f, 0.493612f,
 0.323008f, 0.501337f,
 0.400130f, 0.507294f,
 0.314087f, 0.670139f,
 0.271059f, 0.699000f,
 0.224680f, 0.698634f,
 0.365599f, 0.674181f,
 0.092566f, 0.905169f,
 0.103424f, 0.808166f,
 0.093844f, 0.625832f,
 0.192207f, 0.808166f,
 0.164310f, 0.929344f,
 0.165447f, 0.558111f,
 0.620875f, 0.595240f,
 0.893289f, 0.616672f,
 0.633892f, 0.833904f,
 0.846020f, 0.811014f,
 0.762511f, 0.879742f,
 0.592427f, 0.672403f,
 0.889854f, 0.680554f,
 0.843077f, 0.676027f,
 0.846481f, 0.575682f,
 0.356757f, 0.879728f,
 0.286059f, 0.832288f,
 0.480386f, 0.813107f,
 0.433271f, 0.853567f,
 0.350836f, 0.738776f,
 0.303186f, 0.720185f,
 0.320873f, 0.678150f,
 0.368114f, 0.697246f,
 0.443448f, 0.971941f,
 0.356050f, 0.998934f,
 0.503720f, 0.952628f,
 0.274924f, 0.967028f,
 0.230404f, 0.625207f,
 0.363360f, 0.611016f,
 0.276621f, 0.620714f,
 0.326923f, 0.611250f,
 0.843016f, 0.589495f,
 0.732209f, 0.478687f,
 0.806926f, 0.616705f,
 0.702961f, 0.512947f,
 0.171796f, 0.511290f,
 0.236933f, 0.493612f,
 0.323008f, 0.501337f,
 0.400130f, 0.507294f,
 0.314087f, 0.670139f,
 0.271059f, 0.699000f,
 0.224680f, 0.698634f,
 0.365599f, 0.674181f,
 0.276795f, 0.002094f,
 0.555656f, 0.002094f,
 0.276795f, 0.471994f,
 0.555656f, 0.471994f,
 0.569079f, 0.470162f,
 0.997072f, 0.470162f,
 0.997072f, 0.002210f,
 0.569079f, 0.002210f,
 0.746989f, 0.877263f,
 0.555582f, 0.992492f,
 0.555582f, 0.992492f,
 0.661126f, 0.677823f,
 0.661126f, 0.677823f,
 0.746989f, 0.877263f,
 0.671984f, 0.579828f,
 0.661126f, 0.677823f,
 0.661126f, 0.677823f,
 0.671984f, 0.579828f,
 0.912281f, 0.487364f,
 0.440542f, 0.704543f,
 0.397521f, 0.732265f,
 0.397521f, 0.732265f,
 0.258556f, 0.708240f,
 0.258556f, 0.708240f,
 0.218498f, 0.814911f,
 0.397521f, 0.732265f,
 0.397521f, 0.732265f,
 0.218498f, 0.814911f,
 0.206379f, 0.950997f,
 0.206379f, 0.950997f,
 0.424695f, 0.637310f,
 0.424695f, 0.637310f,
 0.420018f, 0.712424f,
 0.489396f, 0.525040f,
 0.424695f, 0.637310f,
 0.424695f, 0.637310f,
 0.775316f, 0.625800f,
 0.731916f, 0.600795f,
 0.731916f, 0.600795f,
 0.817299f, 0.659726f,
 0.785650f, 0.664322f,
 0.785650f, 0.664322f,
 0.775316f, 0.625800f,
 0.773592f, 0.809902f,
 0.817299f, 0.659726f,
 0.756028f, 0.715566f,
 0.756028f, 0.715566f,
 0.817299f, 0.659726f,
 0.785650f, 0.664322f,
 0.731916f, 0.600795f,
 0.692441f, 0.608961f,
 0.692441f, 0.608961f,
 0.661792f, 0.529129f,
 0.013347f, 0.528962f,
 0.013347f, 0.808166f,
 0.013347f, 0.808166f,
 0.013347f, 0.808166f,
 0.013347f, 0.808166f,
 0.013347f, 0.941674f,
 0.013347f, 0.989437f,
 0.013347f, 0.989437f,
 0.013347f, 0.941674f,
 0.013347f, 0.528962f,
 0.013347f, 0.528962f,
 0.013347f, 0.412760f,
 0.968799f, 0.979409f,
 0.999194f, 0.825257f,
 0.999194f, 0.825257f,
 0.746989f, 0.877263f,
 0.555582f, 0.992492f,
 0.555582f, 0.992492f,
 0.508256f, 0.857141f,
 0.971098f, 0.678132f,
 0.999194f, 0.825257f,
 0.999194f, 0.825257f,
 0.542608f, 0.666950f,
 0.542608f, 0.666950f,
 0.551829f, 0.529642f,
 0.746989f, 0.877263f,
 0.661126f, 0.677823f,
 0.661126f, 0.677823f,
 0.971098f, 0.678132f,
 0.971098f, 0.678132f,
 0.975622f, 0.556485f,
 0.508256f, 0.857141f,
 0.542608f, 0.666950f,
 0.542608f, 0.666950f,
 0.671984f, 0.579828f,
 0.661126f, 0.677823f,
 0.661126f, 0.677823f,
 0.551829f, 0.529642f,
 0.639777f, 0.472055f,
 0.639777f, 0.472055f,
 0.671984f, 0.579828f,
 0.912281f, 0.487364f,
 0.975622f, 0.556485f,
 0.975622f, 0.556485f,
 0.397521f, 0.732265f,
 0.397521f, 0.732265f,
 0.440542f, 0.704543f,
 0.258556f, 0.708240f,
 0.258556f, 0.708240f,
 0.218498f, 0.814911f,
 0.397521f, 0.732265f,
 0.397521f, 0.732265f,
 0.206379f, 0.950997f,
 0.206379f, 0.950997f,
 0.218498f, 0.814911f,
 0.420018f, 0.712424f,
 0.424695f, 0.637310f,
 0.424695f, 0.637310f,
 0.424695f, 0.637310f,
 0.424695f, 0.637310f,
 0.489396f, 0.525040f,
 0.731916f, 0.600795f,
 0.731916f, 0.600795f,
 0.775316f, 0.625800f,
 0.775316f, 0.625800f,
 0.785650f, 0.664322f,
 0.785650f, 0.664322f,
 0.817299f, 0.659726f,
 0.785650f, 0.664322f,
 0.817299f, 0.659726f,
 0.756028f, 0.715566f,
 0.756028f, 0.715566f,
 0.817299f, 0.659726f,
 0.773592f, 0.809902f,
 0.731916f, 0.600795f,
 0.692441f, 0.608961f,
 0.692441f, 0.608961f,
 0.661792f, 0.529129f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.300212f, 0.736585f, 0.606066f},
{ -0.300232f, 0.638822f, 0.708356f},
{ -0.299449f, 0.616076f, 0.728547f},
{ -0.298058f, 0.586405f, 0.753187f},
{ 0.653075f, 0.741999f, 0.151430f},
{ 0.762080f, 0.593347f, 0.259177f},
{ 0.746337f, 0.619996f, 0.242048f},
{ 0.781685f, 0.556467f, 0.281626f},
{ 0.284214f, 0.730129f, 0.621398f},
{ 0.124623f, 0.928336f, 0.350231f},
{ -0.434978f, 0.589461f, 0.680683f},
{ -0.547865f, 0.579465f, 0.603377f},
{ -0.744470f, 0.608320f, -0.275157f},
{ -0.271516f, 0.694623f, -0.666167f},
{ -0.912383f, 0.168176f, 0.373194f},
{ -0.738338f, 0.329866f, -0.588257f},
{ -0.433044f, 0.369535f, -0.822142f},
{ -0.129291f, -0.406751f, 0.904344f},
{ 0.553639f, 0.502613f, 0.663976f},
{ -0.635338f, -0.313858f, -0.705577f},
{ -0.204999f, -0.966232f, -0.156113f},
{ -0.994669f, 0.102927f, -0.006354f},
{ -0.609120f, -0.741592f, 0.281096f},
{ -0.419143f, 0.893337f, 0.162074f},
{ -0.067177f, 0.958612f, -0.276677f},
{ 0.080554f, -0.991005f, 0.106866f},
{ -0.107349f, -0.857291f, 0.503516f},
{ -0.561413f, 0.092620f, 0.822336f},
{ 0.324316f, 0.712651f, 0.622051f},
{ 0.176190f, 0.984347f, -0.004340f},
{ -0.593749f, 0.717520f, 0.364179f},
{ -0.385131f, 0.839064f, 0.384246f},
{ -0.522105f, -0.808762f, 0.270758f},
{ -0.757187f, -0.122472f, 0.641614f},
{ 0.227728f, -0.906913f, 0.354471f},
{ 0.280459f, -0.305798f, 0.909852f},
{ 0.139067f, 0.978270f, 0.153781f},
{ -0.707354f, 0.110789f, 0.698123f},
{ 0.995809f, 0.069636f, -0.059295f},
{ 0.313471f, -0.862291f, 0.397731f},
{ 0.011460f, -0.987188f, -0.159148f},
{ -0.965213f, -0.261124f, -0.013337f},
{ -0.650766f, 0.724503f, 0.227155f},
{ -0.631861f, -0.720433f, -0.285879f},
{ -0.945240f, 0.320919f, 0.059442f},
{ 0.970660f, 0.113271f, -0.212105f},
{ 0.778740f, -0.603299f, -0.172032f},
{ -0.285360f, 0.810968f, 0.510785f},
{ -0.852467f, -0.305500f, -0.424228f},
{ -0.613794f, -0.755921f, -0.227684f},
{ 0.857845f, -0.505359f, 0.093346f},
{ 0.840157f, -0.462301f, 0.283573f},
{ -0.587587f, 0.718614f, -0.371935f},
{ -0.672540f, 0.739984f, -0.010647f},
{ 0.672703f, 0.624893f, 0.396206f},
{ 0.908573f, 0.352854f, 0.223583f},
{ 0.937247f, 0.345695f, -0.045419f},
{ 0.571200f, -0.449538f, -0.686765f},
{ -0.595188f, -0.349270f, -0.723714f},
{ -0.927492f, 0.341386f, -0.152364f},
{ -0.002138f, -0.434834f, 0.900508f},
{ -0.000454f, -0.435385f, 0.900244f},
{ -0.001688f, -0.434981f, 0.900438f},
{ -0.000026f, -0.435525f, 0.900177f},
{ -0.880176f, -0.164718f, -0.445149f},
{ -0.386421f, 0.710295f, -0.588353f},
{ 0.832406f, -0.292297f, -0.470811f},
{ 0.342954f, 0.720950f, -0.602174f},
{ 0.612210f, 0.789236f, -0.048007f},
{ 0.848341f, 0.529447f, -0.002070f},
{ 0.275682f, 0.633987f, -0.722537f},
{ -0.181458f, 0.451230f, -0.873764f},
{ 0.788441f, 0.307121f, -0.532951f},
{ 0.176837f, 0.971098f, 0.160306f},
{ 0.548502f, -0.540218f, -0.638209f},
{ 0.722999f, -0.689086f, -0.049336f},
{ 0.489459f, 0.605868f, -0.627179f},
{ 0.469794f, -0.879651f, 0.074212f},
{ 0.949224f, 0.223848f, -0.221057f},
{ 0.438751f, 0.873252f, -0.211961f},
{ 0.676817f, 0.728857f, 0.103376f},
{ 0.963403f, -0.068333f, 0.259201f},
{ 0.607092f, -0.759908f, -0.232335f},
{ 0.340267f, -0.621213f, -0.705912f},
{ 0.607517f, 0.613444f, -0.504588f},
{ 0.083934f, -0.820119f, 0.566003f},
{ 0.373430f, 0.596315f, 0.710604f},
{ -0.085282f, -0.799498f, 0.594585f},
{ 0.035495f, 0.797075f, 0.602836f},
{ 0.358480f, 0.563274f, -0.744456f},
{ -0.145401f, -0.425956f, -0.892984f},
{ -0.383171f, -0.810071f, -0.443808f},
{ 0.076622f, 0.701680f, -0.708360f},
{ 0.221621f, -0.092340f, 0.970751f},
{ 0.610592f, 0.791079f, 0.037030f},
{ -0.701254f, -0.711267f, 0.048389f},
{ 0.834804f, -0.516541f, -0.190496f},
{ -0.826742f, -0.549750f, -0.119466f},
{ 0.895648f, -0.394946f, -0.204532f},
{ 0.876709f, 0.409190f, -0.252874f},
{ 0.754724f, 0.645241f, 0.118557f},
{ -0.788868f, 0.614509f, -0.008124f},
{ -0.644986f, 0.728489f, 0.230861f},
{ -0.858637f, -0.420492f, -0.293137f},
{ -0.927689f, 0.294312f, 0.229726f},
{ 0.362764f, -0.521540f, -0.772269f},
{ 0.788760f, 0.381830f, -0.481729f},
{ 0.450603f, -0.433705f, 0.780293f},
{ 0.449476f, -0.434093f, 0.780727f},
{ 0.446219f, -0.435210f, 0.781973f},
{ 0.445030f, -0.435616f, 0.782424f},
{ 0.023351f, 0.744394f, -0.667332f},
{ 0.483608f, -0.172318f, -0.858155f},
{ -0.968702f, -0.226220f, 0.102184f},
{ -0.642135f, 0.725283f, -0.248247f},
{ 0.065709f, 0.992858f, 0.099573f},
{ 0.029299f, 0.997026f, 0.071277f},
{ 0.051746f, 0.994710f, 0.088734f},
{ 0.015870f, 0.998023f, 0.060815f},
{ -0.658324f, 0.692409f, 0.295262f},
{ -0.658954f, 0.688137f, 0.303722f},
{ -0.658896f, 0.688552f, 0.302907f},
{ -0.659451f, 0.684397f, 0.311008f}};

static int[] FaceArray = new int[]{
0, 1, 3,
3, 1, 2,
4, 7, 5,
5, 7, 6,
11, 12, 10,
10, 12, 9,
9, 12, 8,
8, 12, 13,
9, 8, 14,
14, 8, 15,
13, 16, 8,
8, 16, 15,
10, 18, 11,
11, 18, 17,
9, 14, 10,
10, 14, 18,
28, 24, 27,
27, 24, 22,
115, 21, 116,
117, 21, 23,
31, 32, 24,
24, 32, 22,
27, 22, 33,
33, 22, 32,
26, 30, 19,
19, 30, 29,
29, 21, 118,
119, 21, 120,
32, 20, 33,
33, 20, 34,
25, 20, 31,
31, 20, 32,
23, 21, 30,
30, 21, 29,
121, 19, 122,
123, 19, 29,
124, 35, 19,
19, 35, 26,
20, 25, 34,
34, 25, 125,
40, 43, 41,
41, 43, 42,
126, 127, 38,
38, 128, 39,
39, 36, 44,
44, 36, 45,
41, 37, 40,
40, 37, 36,
41, 129, 37,
37, 130, 131,
39, 132, 36,
36, 133, 40,
38, 39, 46,
46, 39, 44,
37, 47, 36,
36, 47, 45,
134, 135, 37,
37, 136, 47,
50, 57, 48,
48, 57, 56,
57, 50, 58,
58, 50, 51,
51, 49, 58,
58, 49, 59,
49, 63, 137,
138, 63, 139,
62, 61, 48,
48, 61, 50,
60, 63, 51,
51, 63, 49,
51, 50, 60,
60, 50, 61,
52, 53, 54,
54, 53, 55,
140, 59, 141,
142, 59, 49,
143, 54, 144,
145, 54, 55,
146, 54, 147,
148, 54, 149,
150, 151, 152,
153, 154, 155,
156, 55, 157,
158, 55, 159,
160, 66, 161,
162, 66, 65,
65, 64, 163,
164, 64, 165,
68, 64, 67,
67, 64, 65,
68, 166, 64,
64, 167, 168,
66, 169, 69,
69, 170, 171,
69, 67, 66,
66, 67, 65,
172, 74, 173,
174, 74, 73,
175, 176, 72,
72, 177, 178,
179, 180, 76,
76, 181, 73,
76, 73, 77,
77, 73, 74,
75, 182, 70,
70, 183, 184,
185, 72, 186,
187, 72, 75,
78, 71, 77,
77, 71, 76,
76, 71, 188,
189, 71, 190,
191, 192, 72,
72, 193, 75,
194, 195, 70,
70, 196, 75,
197, 198, 70,
70, 199, 200,
201, 202, 78,
78, 203, 71,
83, 84, 86,
86, 84, 85,
82, 204, 81,
81, 205, 206,
88, 79, 87,
87, 79, 82,
79, 80, 83,
83, 80, 84,
84, 80, 207,
208, 80, 209,
82, 79, 210,
211, 79, 83,
87, 82, 89,
89, 82, 81,
88, 90, 79,
79, 90, 80,
90, 212, 80,
80, 213, 214,
99, 100, 91,
91, 100, 93,
100, 101, 93,
93, 101, 94,
102, 92, 101,
101, 92, 94,
215, 106, 216,
217, 106, 92,
93, 104, 91,
91, 104, 105,
92, 106, 94,
94, 106, 103,
94, 103, 93,
93, 103, 104,
98, 96, 97,
97, 96, 95,
92, 102, 218,
219, 102, 220,
98, 97, 221,
222, 97, 223,
224, 97, 225,
226, 97, 227,
228, 229, 230,
231, 232, 233,
234, 235, 98,
98, 236, 237,
108, 110, 107,
107, 110, 109,
111, 114, 112,
112, 114, 113, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 238  Texture Co-ords: 170  Normals: 123  Texture: RagDeath6.mtl Faces: 168 Smooth Groups: 16 sucess: 92 Doubles: 76 Redos needed: 123 Correct: 105