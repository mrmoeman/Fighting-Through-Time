package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phadeathf {

static String TextureName = "defeat";

static int Vertices = 348;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 32;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.466977f, 0.732210f, -8.792762f,
 1.283386f, 1.083245f, -10.472803f,
 0.469120f, -0.010541f, -10.055470f,
 0.358651f, -0.249572f, -9.136596f,
 0.982804f, 1.310087f, -10.552646f,
 0.142892f, 0.119218f, -10.464320f,
 -0.077701f, -0.110800f, -8.980726f,
 0.753189f, 1.157157f, -8.792377f,
 0.543684f, 1.605340f, -8.757620f,
 0.568854f, 1.647978f, -10.714129f,
 -0.200065f, 0.345427f, -10.628790f,
 -0.412320f, -0.014134f, -8.991529f,
 0.182395f, 0.993315f, -10.913030f,
 0.612823f, 0.724613f, -10.811857f,
 1.181099f, 0.909970f, -10.497947f,
 1.046901f, 0.682639f, -8.824633f,
 0.577062f, 0.883640f, -8.832810f,
 0.236374f, 1.084755f, -8.832810f,
 0.838517f, 1.296215f, -8.528999f,
 1.143694f, 1.149769f, -8.525389f,
 0.811256f, 1.274876f, -8.191513f,
 1.145979f, 1.153638f, -8.183334f,
 0.686903f, -0.447595f, -8.594453f,
 0.856862f, 0.675340f, -8.534204f,
 0.200696f, 1.024317f, -8.568892f,
 -0.370439f, 0.056813f, -8.607289f,
 0.700363f, 0.560952f, -5.722365f,
 0.684600f, 1.257595f, -5.731540f,
 0.033961f, 1.429741f, -5.733816f,
 0.033961f, 0.155795f, -5.717037f,
 0.971581f, 1.445380f, -7.707768f,
 0.997360f, 0.292177f, -7.692579f,
 0.033961f, 0.134826f, -7.860002f,
 0.033961f, 1.681822f, -7.806012f,
 1.813823f, 0.164281f, -1.299161f,
 1.772382f, 0.924369f, -0.340564f,
 0.040170f, 1.113661f, -0.139096f,
 0.028930f, 0.000485f, -1.602928f,
 1.276892f, 0.183764f, -8.382245f,
 1.321366f, 0.865978f, -8.591254f,
 1.435768f, 1.138357f, -8.064684f,
 1.379715f, 0.351131f, -7.821896f,
 3.057448f, 0.374841f, -7.938240f,
 3.092966f, 0.718382f, -8.043077f,
 3.033661f, 0.864171f, -7.782017f,
 2.990165f, 0.467554f, -7.661204f,
 4.943800f, 0.059180f, -7.379460f,
 5.021878f, 0.772053f, -7.596614f,
 4.837264f, 1.044095f, -7.095605f,
 4.746299f, 0.244700f, -6.852519f,
 0.038678f, 1.622252f, -3.270204f,
 1.171358f, 1.482586f, -3.275548f,
 1.196812f, 0.230651f, -3.089651f,
 0.027197f, -0.119009f, -3.126818f,
 -0.373108f, 1.827445f, -10.497947f,
 -0.507305f, 1.600114f, -8.824633f,
 -0.990954f, 0.547124f, -9.136596f,
 -0.835048f, 0.759332f, -10.055470f,
 -0.563820f, 0.536402f, -10.464320f,
 -0.260825f, 1.240343f, -10.811857f,
 -0.658627f, 0.232131f, -8.980726f,
 -0.104315f, 1.285869f, -8.832810f,
 0.050062f, 1.572225f, -8.792377f,
 -0.666866f, 1.991854f, -8.792762f,
 -0.270820f, 2.000720f, -10.472803f,
 0.073016f, 1.847151f, -10.552646f,
 -0.145083f, 1.910557f, -8.525389f,
 0.130585f, 1.714120f, -8.528999f,
 0.125073f, 1.679942f, -8.191513f,
 -0.142799f, 1.914426f, -8.183334f,
 -0.421877f, 1.430202f, -8.534204f,
 -1.322927f, 0.738842f, -8.594453f,
 -4.847879f, -0.035215f, -7.082582f,
 -4.880055f, 0.706109f, -7.186715f,
 -4.605456f, 0.883951f, -6.684656f,
 -4.566063f, 0.052434f, -6.568782f,
 -0.903658f, 1.445380f, -7.707768f,
 -0.929437f, 0.292177f, -7.692579f,
 -0.616678f, 1.257595f, -5.731540f,
 -0.632440f, 0.560952f, -5.722365f,
 -1.095655f, 1.505720f, -3.215415f,
 -1.138019f, 0.230630f, -3.101686f,
 -1.307782f, 0.959966f, -8.394818f,
 -1.209653f, 0.255081f, -8.327091f,
 -1.434265f, 1.111874f, -7.824310f,
 -1.316288f, 0.298525f, -7.744581f,
 -3.040627f, 0.560831f, -7.906651f,
 -3.027177f, 0.203725f, -7.855982f,
 -2.933516f, 0.660521f, -7.639232f,
 -2.915559f, 0.248071f, -7.581306f,
 -1.695522f, 0.932005f, -0.337361f,
 -1.752020f, 0.178345f, -1.299557f,
 4.248419f, 0.933686f, -7.326835f,
 4.332605f, 0.726732f, -7.697423f,
 4.282186f, 0.239059f, -7.548601f,
 4.186674f, 0.370669f, -7.155335f,
 -4.065799f, 0.761164f, -7.010370f,
 -4.040307f, 0.175671f, -6.928142f,
 -4.198753f, 0.112721f, -7.318057f,
 -4.217847f, 0.619651f, -7.389984f,
 2.597181f, 0.151777f, 0.250850f,
 3.361722f, 0.035429f, 0.190621f,
 1.123168f, 0.113936f, -9.866296f,
 3.294121f, 0.202008f, -10.003882f,
 1.954967f, 0.198639f, -7.991771f,
 2.719508f, 0.082290f, -8.052001f,
 0.469120f, -0.010541f, -10.055470f,
 0.469120f, -0.010541f, -10.055470f,
 1.181099f, 0.909970f, -10.497947f,
 0.358651f, -0.249572f, -9.136596f,
 -0.077701f, -0.110800f, -8.980726f,
 0.469120f, -0.010541f, -10.055470f,
 0.469120f, -0.010541f, -10.055470f,
 -0.077701f, -0.110800f, -8.980726f,
 -0.077701f, -0.110800f, -8.980726f,
 0.568854f, 1.647978f, -10.714129f,
 0.568854f, 1.647978f, -10.714129f,
 0.982804f, 1.310087f, -10.552646f,
 0.982804f, 1.310087f, -10.552646f,
 1.181099f, 0.909970f, -10.497947f,
 1.181099f, 0.909970f, -10.497947f,
 0.982804f, 1.310087f, -10.552646f,
 1.283386f, 1.083245f, -10.472803f,
 1.466977f, 0.732210f, -8.792762f,
 1.283386f, 1.083245f, -10.472803f,
 1.283386f, 1.083245f, -10.472803f,
 0.577062f, 0.883640f, -8.832810f,
 0.753189f, 1.157157f, -8.792377f,
 0.753189f, 1.157157f, -8.792377f,
 0.543684f, 1.605340f, -8.757620f,
 0.753189f, 1.157157f, -8.792377f,
 0.838517f, 1.296215f, -8.528999f,
 0.838517f, 1.296215f, -8.528999f,
 0.811256f, 1.274876f, -8.191513f,
 0.811256f, 1.274876f, -8.191513f,
 0.811256f, 1.274876f, -8.191513f,
 1.145979f, 1.153638f, -8.183334f,
 1.466977f, 0.732210f, -8.792762f,
 1.143694f, 1.149769f, -8.525389f,
 1.143694f, 1.149769f, -8.525389f,
 1.145979f, 1.153638f, -8.183334f,
 0.577062f, 0.883640f, -8.832810f,
 0.856862f, 0.675340f, -8.534204f,
 -0.077701f, -0.110800f, -8.980726f,
 -0.077701f, -0.110800f, -8.980726f,
 0.856862f, 0.675340f, -8.534204f,
 0.686903f, -0.447595f, -8.594453f,
 0.200696f, 1.024317f, -8.568892f,
 0.577062f, 0.883640f, -8.832810f,
 0.577062f, 0.883640f, -8.832810f,
 0.200696f, 1.024317f, -8.568892f,
 0.856862f, 0.675340f, -8.534204f,
 -0.412320f, -0.014134f, -8.991529f,
 -0.077701f, -0.110800f, -8.980726f,
 -0.370439f, 0.056813f, -8.607289f,
 -0.370439f, 0.056813f, -8.607289f,
 -0.077701f, -0.110800f, -8.980726f,
 0.686903f, -0.447595f, -8.594453f,
 0.971581f, 1.445380f, -7.707768f,
 0.971581f, 1.445380f, -7.707768f,
 0.684600f, 1.257595f, -5.731540f,
 0.684600f, 1.257595f, -5.731540f,
 1.171358f, 1.482586f, -3.275548f,
 0.700363f, 0.560952f, -5.722365f,
 0.700363f, 0.560952f, -5.722365f,
 1.171358f, 1.482586f, -3.275548f,
 0.033961f, 1.429741f, -5.733816f,
 0.684600f, 1.257595f, -5.731540f,
 0.684600f, 1.257595f, -5.731540f,
 0.033961f, 0.155795f, -5.717037f,
 0.700363f, 0.560952f, -5.722365f,
 0.700363f, 0.560952f, -5.722365f,
 0.686903f, -0.447595f, -8.594453f,
 0.856862f, 0.675340f, -8.534204f,
 0.856862f, 0.675340f, -8.534204f,
 0.971581f, 1.445380f, -7.707768f,
 0.856862f, 0.675340f, -8.534204f,
 0.856862f, 0.675340f, -8.534204f,
 0.971581f, 1.445380f, -7.707768f,
 0.997360f, 0.292177f, -7.692579f,
 1.435768f, 1.138357f, -8.064684f,
 1.435768f, 1.138357f, -8.064684f,
 0.997360f, 0.292177f, -7.692579f,
 0.686903f, -0.447595f, -8.594453f,
 0.997360f, 0.292177f, -7.692579f,
 0.997360f, 0.292177f, -7.692579f,
 1.435768f, 1.138357f, -8.064684f,
 3.033661f, 0.864171f, -7.782017f,
 3.033661f, 0.864171f, -7.782017f,
 3.033661f, 0.864171f, -7.782017f,
 4.248419f, 0.933686f, -7.326835f,
 4.248419f, 0.933686f, -7.326835f,
 1.171358f, 1.482586f, -3.275548f,
 1.171358f, 1.482586f, -3.275548f,
 1.772382f, 0.924369f, -0.340564f,
 -0.373108f, 1.827445f, -10.497947f,
 -0.835048f, 0.759332f, -10.055470f,
 -0.835048f, 0.759332f, -10.055470f,
 -0.990954f, 0.547124f, -9.136596f,
 -0.835048f, 0.759332f, -10.055470f,
 -0.658627f, 0.232131f, -8.980726f,
 -0.658627f, 0.232131f, -8.980726f,
 -0.835048f, 0.759332f, -10.055470f,
 -0.658627f, 0.232131f, -8.980726f,
 0.073016f, 1.847151f, -10.552646f,
 0.568854f, 1.647978f, -10.714129f,
 0.568854f, 1.647978f, -10.714129f,
 -0.270820f, 2.000720f, -10.472803f,
 0.073016f, 1.847151f, -10.552646f,
 -0.373108f, 1.827445f, -10.497947f,
 -0.373108f, 1.827445f, -10.497947f,
 0.073016f, 1.847151f, -10.552646f,
 -0.270820f, 2.000720f, -10.472803f,
 -0.270820f, 2.000720f, -10.472803f,
 -0.666866f, 1.991854f, -8.792762f,
 0.543684f, 1.605340f, -8.757620f,
 0.050062f, 1.572225f, -8.792377f,
 0.050062f, 1.572225f, -8.792377f,
 -0.104315f, 1.285869f, -8.832810f,
 0.050062f, 1.572225f, -8.792377f,
 0.130585f, 1.714120f, -8.528999f,
 0.130585f, 1.714120f, -8.528999f,
 0.125073f, 1.679942f, -8.191513f,
 0.125073f, 1.679942f, -8.191513f,
 0.125073f, 1.679942f, -8.191513f,
 -0.142799f, 1.914426f, -8.183334f,
 -0.142799f, 1.914426f, -8.183334f,
 -0.145083f, 1.910557f, -8.525389f,
 -0.145083f, 1.910557f, -8.525389f,
 -0.666866f, 1.991854f, -8.792762f,
 -1.322927f, 0.738842f, -8.594453f,
 -0.421877f, 1.430202f, -8.534204f,
 -0.658627f, 0.232131f, -8.980726f,
 -0.658627f, 0.232131f, -8.980726f,
 -0.421877f, 1.430202f, -8.534204f,
 -0.104315f, 1.285869f, -8.832810f,
 -0.421877f, 1.430202f, -8.534204f,
 0.200696f, 1.024317f, -8.568892f,
 -0.104315f, 1.285869f, -8.832810f,
 -0.104315f, 1.285869f, -8.832810f,
 0.200696f, 1.024317f, -8.568892f,
 -0.412320f, -0.014134f, -8.991529f,
 -0.370439f, 0.056813f, -8.607289f,
 -0.658627f, 0.232131f, -8.980726f,
 -0.658627f, 0.232131f, -8.980726f,
 -0.370439f, 0.056813f, -8.607289f,
 -1.322927f, 0.738842f, -8.594453f,
 -0.903658f, 1.445380f, -7.707768f,
 -0.903658f, 1.445380f, -7.707768f,
 -0.616678f, 1.257595f, -5.731540f,
 -1.095655f, 1.505720f, -3.215415f,
 -0.632440f, 0.560952f, -5.722365f,};

static float VertArrayB[] = new float[]{
 -0.632440f, 0.560952f, -5.722365f,
 -1.095655f, 1.505720f, -3.215415f,
 -0.616678f, 1.257595f, -5.731540f,
 -1.095655f, 1.505720f, -3.215415f,
 0.038678f, 1.622252f, -3.270204f,
 -0.616678f, 1.257595f, -5.731540f,
 -0.616678f, 1.257595f, -5.731540f,
 0.038678f, 1.622252f, -3.270204f,
 0.033961f, 1.429741f, -5.733816f,
 0.033961f, 0.155795f, -5.717037f,
 0.027197f, -0.119009f, -3.126818f,
 -0.632440f, 0.560952f, -5.722365f,
 -0.632440f, 0.560952f, -5.722365f,
 0.027197f, -0.119009f, -3.126818f,
 -1.138019f, 0.230630f, -3.101686f,
 -1.209653f, 0.255081f, -8.327091f,
 -1.307782f, 0.959966f, -8.394818f,
 -1.322927f, 0.738842f, -8.594453f,
 -1.322927f, 0.738842f, -8.594453f,
 -1.307782f, 0.959966f, -8.394818f,
 -0.421877f, 1.430202f, -8.534204f,
 -0.421877f, 1.430202f, -8.534204f,
 -1.307782f, 0.959966f, -8.394818f,
 -0.903658f, 1.445380f, -7.707768f,
 -0.903658f, 1.445380f, -7.707768f,
 -1.307782f, 0.959966f, -8.394818f,
 -1.434265f, 1.111874f, -7.824310f,
 -0.903658f, 1.445380f, -7.707768f,
 -1.434265f, 1.111874f, -7.824310f,
 -0.929437f, 0.292177f, -7.692579f,
 -0.929437f, 0.292177f, -7.692579f,
 -1.434265f, 1.111874f, -7.824310f,
 -1.316288f, 0.298525f, -7.744581f,
 -1.322927f, 0.738842f, -8.594453f,
 -0.929437f, 0.292177f, -7.692579f,
 -1.209653f, 0.255081f, -8.327091f,
 -0.929437f, 0.292177f, -7.692579f,
 -1.316288f, 0.298525f, -7.744581f,
 -1.209653f, 0.255081f, -8.327091f,
 -1.307782f, 0.959966f, -8.394818f,
 -3.040627f, 0.560831f, -7.906651f,
 -1.434265f, 1.111874f, -7.824310f,
 -1.434265f, 1.111874f, -7.824310f,
 -3.040627f, 0.560831f, -7.906651f,
 -2.933516f, 0.660521f, -7.639232f,
 -4.065799f, 0.761164f, -7.010370f,
 -2.933516f, 0.660521f, -7.639232f,
 -4.217847f, 0.619651f, -7.389984f,
 -4.217847f, 0.619651f, -7.389984f,
 -2.933516f, 0.660521f, -7.639232f,
 -3.040627f, 0.560831f, -7.906651f,
 -1.138019f, 0.230630f, -3.101686f,
 -1.752020f, 0.178345f, -1.299557f,
 -1.095655f, 1.505720f, -3.215415f,
 -1.095655f, 1.505720f, -3.215415f,
 -1.752020f, 0.178345f, -1.299557f,
 -1.695522f, 0.932005f, -0.337361f,
 4.282186f, 0.239059f, -7.548601f,
 5.021878f, 0.772053f, -7.596614f,
 4.943800f, 0.059180f, -7.379460f,
 4.186674f, 0.370669f, -7.155335f,
 4.282186f, 0.239059f, -7.548601f,
 4.746299f, 0.244700f, -6.852519f,
 4.746299f, 0.244700f, -6.852519f,
 4.282186f, 0.239059f, -7.548601f,
 4.943800f, 0.059180f, -7.379460f,
 4.248419f, 0.933686f, -7.326835f,
 4.186674f, 0.370669f, -7.155335f,
 4.837264f, 1.044095f, -7.095605f,
 4.837264f, 1.044095f, -7.095605f,
 4.186674f, 0.370669f, -7.155335f,
 4.746299f, 0.244700f, -6.852519f,
 -4.040307f, 0.175671f, -6.928142f,
 -4.605456f, 0.883951f, -6.684656f,
 -4.566063f, 0.052434f, -6.568782f,
 -4.040307f, 0.175671f, -6.928142f,
 -4.566063f, 0.052434f, -6.568782f,
 -4.198753f, 0.112721f, -7.318057f,
 -4.198753f, 0.112721f, -7.318057f,
 -4.566063f, 0.052434f, -6.568782f,
 -4.847879f, -0.035215f, -7.082582f,
 -4.217847f, 0.619651f, -7.389984f,
 -4.198753f, 0.112721f, -7.318057f,
 -4.880055f, 0.706109f, -7.186715f,
 -4.880055f, 0.706109f, -7.186715f,
 -4.198753f, 0.112721f, -7.318057f,
 -4.847879f, -0.035215f, -7.082582f,
 -4.217847f, 0.619651f, -7.389984f,
 -4.880055f, 0.706109f, -7.186715f,
 -4.065799f, 0.761164f, -7.010370f,
 2.597181f, 0.151777f, 0.250850f,
 3.361722f, 0.035429f, 0.190621f,
 1.954967f, 0.198639f, -7.991771f,
 1.954967f, 0.198639f, -7.991771f,
 3.361722f, 0.035429f, 0.190621f,
 2.719508f, 0.082290f, -8.052001f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.878348f, 0.646869f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.730977f, 0.646869f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.425500f, 0.583551f,
 0.490451f, 0.415698f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.088712f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.008494f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.403165f,
 0.049042f, 0.357626f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.791908f, 0.583549f,
 0.726955f, 0.415697f,
 0.900004f, 0.283013f,
 0.785732f, 0.396285f,};

static float[] TextArrayB = new float[]{
 0.785732f, 0.396285f,
 0.900004f, 0.283013f,
 0.824556f, 0.412442f,
 0.230576f, 0.348630f,
 0.340574f, 0.348630f,
 0.277434f, 0.584799f,
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.137216f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.817124f, 0.248044f,
 0.853660f, 0.094340f,
 0.900004f, 0.283013f,
 0.900004f, 0.283013f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.773843f, -0.575038f, -0.265514f},
{ 0.461880f, -0.843623f, 0.273800f},
{ 0.579725f, -0.797751f, -0.165869f},
{ 0.512082f, -0.819785f, 0.256368f},
{ -0.093774f, -0.874588f, -0.475713f},
{ 0.391990f, -0.416826f, -0.820122f},
{ -0.009986f, -0.972794f, -0.231459f},
{ 0.341007f, -0.445800f, 0.827633f},
{ 0.877409f, 0.468782f, 0.101962f},
{ 0.819056f, 0.572356f, 0.039435f},
{ 0.649808f, 0.730779f, 0.209072f},
{ 0.687158f, 0.694772f, -0.212382f},
{ 0.479046f, 0.811505f, -0.334626f},
{ 0.478869f, 0.811206f, 0.335602f},
{ -0.407894f, -0.690974f, -0.596806f},
{ -0.025102f, -0.042523f, -0.998780f},
{ -0.504227f, -0.854163f, -0.127124f},
{ 0.827210f, 0.509897f, -0.236070f},
{ -0.336630f, 0.926617f, -0.167513f},
{ 0.105716f, -0.575684f, 0.810809f},
{ -0.485856f, -0.396983f, 0.778684f},
{ 0.171275f, 0.290140f, 0.941533f},
{ 0.371712f, 0.281374f, -0.884680f},
{ 0.328666f, -0.893595f, -0.305723f},
{ 0.399093f, 0.771967f, -0.494764f},
{ -0.432605f, -0.894979f, 0.108927f},
{ 0.592291f, -0.749042f, -0.296861f},
{ 0.821820f, 0.223495f, -0.524082f},
{ 0.222359f, -0.269061f, 0.937103f},
{ 0.427054f, 0.716686f, 0.551350f},
{ 0.729081f, 0.684102f, 0.021108f},
{ 0.043938f, 0.997006f, -0.063634f},
{ -0.064913f, -0.985659f, 0.155766f},
{ 0.693686f, -0.646953f, 0.316626f},
{ 0.863713f, -0.503333f, -0.025602f},
{ 0.751482f, 0.659133f, -0.028627f},
{ 0.000442f, -0.999948f, 0.010155f},
{ -0.000160f, 0.999766f, 0.021624f},
{ 0.632027f, 0.771749f, -0.070328f},
{ 0.729376f, -0.649257f, -0.215581f},
{ 0.010761f, 0.999011f, 0.043141f},
{ 0.000465f, -0.996902f, -0.078655f},
{ 0.420397f, -0.699105f, -0.578376f},
{ 0.178641f, 0.279365f, -0.943421f},
{ 0.216701f, 0.913409f, 0.344564f},
{ 0.032647f, -0.429264f, 0.902589f},
{ 0.182975f, -0.788610f, -0.587039f},
{ 0.289592f, 0.302677f, -0.908033f},
{ -0.076409f, 0.818070f, 0.570021f},
{ -0.224747f, -0.300792f, 0.926830f},
{ 0.203067f, 0.312677f, -0.927899f},
{ 0.017377f, -0.820813f, -0.570933f},
{ -0.261530f, 0.863881f, 0.430479f},
{ -0.437829f, -0.241420f, 0.866038f},
{ 0.005072f, 0.986245f, 0.165212f},
{ 0.381653f, 0.919236f, 0.096679f},
{ 0.938587f, -0.277972f, -0.204415f},
{ -0.002617f, -0.999578f, -0.028945f},
{ -0.877353f, 0.399691f, -0.265515f},
{ -0.978556f, 0.122130f, -0.165870f},
{ -0.961781f, -0.003211f, 0.273800f},
{ -0.965166f, 0.052259f, 0.256368f},
{ -0.554337f, 0.141808f, -0.820123f},
{ -0.720423f, -0.504665f, -0.475714f},
{ -0.846888f, -0.478756f, -0.231458f},
{ -0.555072f, 0.083172f, 0.827634f},
{ 0.276290f, 0.937314f, -0.212382f},
{ 0.105384f, 0.993649f, 0.039435f},
{ 0.325862f, 0.922010f, 0.209073f},
{ -0.013492f, 0.994697f, 0.101962f},
{ 0.046763f, 0.970610f, -0.236071f},
{ -0.555110f, -0.185583f, 0.810809f},
{ 0.973930f, 0.152970f, -0.167512f},
{ -0.112829f, -0.617187f, 0.778685f},
{ -0.617133f, -0.171804f, -0.767873f},
{ -0.197719f, 0.791493f, -0.578313f},
{ -0.699112f, -0.644727f, -0.309144f},
{ -0.125816f, -0.386963f, 0.913471f},
{ -0.855426f, 0.366448f, -0.366008f},
{ -0.276756f, 0.658896f, 0.699473f},
{ -0.703750f, 0.696503f, 0.140067f},
{ -0.688959f, -0.704857f, 0.168855f},
{ -0.867370f, -0.496962f, -0.026419f},
{ -0.754544f, 0.655650f, -0.028050f},
{ -0.746637f, -0.629056f, -0.216383f},
{ -0.617318f, 0.783790f, -0.067764f},
{ 0.080602f, -0.620496f, -0.780057f},
{ -0.434593f, 0.527962f, -0.729647f},
{ -0.268515f, 0.716219f, 0.644151f},
{ 0.052481f, -0.610831f, 0.790020f},
{ -0.202938f, -0.710478f, -0.673823f},
{ -0.337744f, 0.358308f, -0.870370f},
{ 0.092905f, 0.695172f, 0.712815f},
{ 0.282430f, -0.494878f, 0.821784f},
{ -0.288153f, 0.463672f, -0.837840f},
{ -0.174778f, -0.721882f, -0.669581f},
{ 0.401863f, 0.765182f, 0.502994f},
{ 0.519005f, -0.403582f, 0.753496f},
{ -0.379321f, 0.919378f, 0.104209f},
{ -0.942015f, -0.268178f, -0.201712f},
{ 0.148195f, 0.988549f, -0.028462f},
{ 0.099464f, 0.995041f, -0.000061f},
{ -0.017905f, 0.999289f, 0.033184f},
{ -0.037306f, 0.998041f, 0.050232f},
{ 0.149979f, 0.988671f, -0.006065f},
{ 0.149979f, 0.988671f, -0.006065f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
23, 24, 30,
30, 24, 33,
25, 22, 32,
32, 22, 31,
31, 158, 26,
26, 159, 160,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 27,
161, 162, 163,
164, 165, 52,
166, 50, 167,
168, 50, 51,
169, 170, 53,
53, 171, 52,
172, 173, 38,
38, 174, 39,
175, 40, 176,
177, 40, 39,
178, 179, 180,
181, 182, 41,
183, 38, 184,
185, 38, 41,
38, 39, 42,
42, 39, 43,
39, 40, 43,
43, 40, 44,
186, 41, 187,
188, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
189, 45, 190,
191, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
52, 192, 34,
34, 193, 194,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
195, 59, 196,
197, 59, 58,
198, 199, 200,
201, 202, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 203,
204, 205, 59,
59, 206, 12,
207, 208, 209,
210, 211, 59,
54, 55, 212,
213, 55, 214,
66, 69, 67,
67, 69, 68,
215, 216, 17,
17, 217, 218,
63, 66, 62,
62, 66, 67,
219, 220, 61,
61, 221, 222,
61, 223, 55,
55, 224, 225,
226, 227, 55,
55, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 238,
239, 240, 17,
241, 242, 243,
244, 245, 246,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
77, 79, 247,
248, 79, 249,
32, 29, 77,
77, 29, 79,
78, 28, 76,
76, 28, 33,
81, 250, 251,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,
93, 94, 95,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 348  Texture Co-ords: 191  Normals: 106  Texture: defeat Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 146 Correct: 79