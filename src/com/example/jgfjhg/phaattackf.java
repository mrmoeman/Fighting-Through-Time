package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phaattackf {

static String TextureName = "attack";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.091772f, 1.922926f,
 0.936363f, 8.776437f, 2.090586f,
 0.791186f, 8.325944f, 0.745392f,
 0.817567f, 7.400916f, 0.506030f,
 0.562201f, 8.857300f, 2.131157f,
 0.444292f, 8.733344f, 0.681276f,
 0.371258f, 7.242582f, 0.407571f,
 0.442211f, 7.091464f, 1.926023f,
 0.033961f, 7.063576f, 2.206242f,
 0.033961f, 9.020711f, 2.207711f,
 0.033961f, 8.898267f, 0.697689f,
 0.033961f, 7.251250f, 0.320471f,
 0.033961f, 9.200890f, 1.442838f,
 0.541219f, 9.099439f, 1.432741f,
 0.936363f, 8.796633f, 1.888816f,
 0.936363f, 7.117342f, 1.665987f,
 0.429582f, 7.123904f, 1.600055f,
 0.033961f, 7.123904f, 1.600055f,
 0.445001f, 6.832169f, 2.095565f,
 0.782250f, 6.829272f, 2.124671f,
 0.432372f, 6.493993f, 2.071626f,
 0.782250f, 6.487432f, 2.137559f,
 1.200907f, 6.858847f, 0.515680f,
 0.776421f, 6.824476f, 1.570256f,
 0.033961f, 6.858342f, 1.536372f,
 0.033961f, 6.869148f, 0.412265f,
 0.700363f, 4.387566f, -0.536563f,
 0.684600f, 4.093725f, 0.095145f,
 0.033961f, 4.021122f, 0.251248f,
 0.033961f, 4.558465f, -0.903950f,
 0.971581f, 5.789957f, 1.254214f,
 0.997360f, 6.276372f, 0.208504f,
 0.033961f, 6.495469f, 0.139324f,
 0.033961f, 5.775946f, 1.509870f,
 1.814057f, -0.206228f, -0.886172f,
 1.773767f, -0.105875f, 1.487292f,
 0.041435f, -0.103993f, 1.962565f,
 0.028640f, -0.196167f, -1.601566f,
 1.424707f, 6.575524f, 0.464970f,
 1.492898f, 6.603303f, 1.176065f,
 1.143636f, 6.139362f, 1.341380f,
 1.060614f, 6.109754f, 0.520379f,
 2.294388f, 4.869861f, 0.561851f,
 2.359045f, 5.158839f, 0.768209f,
 2.076878f, 5.226658f, 0.861518f,
 2.001575f, 4.894382f, 0.621278f,
 2.469100f, 3.475741f, 1.974687f,
 2.604418f, 4.073022f, 2.406410f,
 2.039430f, 4.233407f, 2.525419f,
 1.886902f, 3.565518f, 2.038533f,
 0.043180f, 2.444579f, 1.095782f,
 1.175840f, 2.404591f, 0.968889f,
 1.200747f, 2.022645f, -0.372336f,
 0.031052f, 1.941220f, -0.732449f,
 -0.868441f, 8.796633f, 1.888816f,
 -0.868441f, 7.117342f, 1.665987f,
 -0.749646f, 7.400916f, 0.506030f,
 -0.723264f, 8.325944f, 0.745392f,
 -0.376369f, 8.733344f, 0.681276f,
 -0.473295f, 9.099439f, 1.432741f,
 -0.303336f, 7.242582f, 0.407571f,
 -0.361660f, 7.123904f, 1.600055f,
 -0.374288f, 7.091464f, 1.926023f,
 -1.204989f, 7.091772f, 1.922926f,
 -0.868441f, 8.776437f, 2.090586f,
 -0.494279f, 8.857300f, 2.131157f,
 -0.714328f, 6.829272f, 2.124671f,
 -0.377078f, 6.832169f, 2.095565f,
 -0.364450f, 6.493993f, 2.071626f,
 -0.714328f, 6.487432f, 2.137559f,
 -0.708500f, 6.824476f, 1.570256f,
 -1.132985f, 6.858847f, 0.515680f,
 -1.815352f, 3.052739f, 0.488467f,
 -2.412820f, 3.401231f, 0.776611f,
 -2.150972f, 3.663930f, 1.247272f,
 -1.479714f, 3.276003f, 0.922739f,
 -0.903658f, 5.789957f, 1.254214f,
 -0.929437f, 6.276372f, 0.208504f,
 -0.616678f, 4.093725f, 0.095145f,
 -0.632440f, 4.387566f, -0.536563f,
 -1.091226f, 2.405592f, 0.983102f,
 -1.134059f, 2.024062f, -0.357771f,
 -1.526192f, 6.536861f, 0.864540f,
 -0.940458f, 6.592744f, 0.458496f,
 -1.399216f, 6.036678f, 1.177985f,
 -0.720308f, 6.103392f, 0.712748f,
 -1.799080f, 5.005333f, -0.209841f,
 -1.511992f, 4.835629f, -0.347878f,
 -1.681863f, 5.113908f, 0.049765f,
 -1.349430f, 4.920067f, -0.110567f,
 -1.694184f, -0.108482f, 1.493000f,
 -1.751827f, -0.202803f, -0.881103f,
 2.065051f, 4.518452f, 1.950537f,
 2.465600f, 4.422181f, 1.818081f,
 2.373816f, 4.011961f, 1.525146f,
 1.958156f, 4.046770f, 1.609505f,
 -1.972446f, 4.109253f, 0.820408f,
 -1.500541f, 3.834087f, 0.592808f,
 -1.731305f, 3.714225f, 0.255935f,
 -2.138840f, 3.955127f, 0.451885f,
 2.462562f, 1.652142f, -0.727461f,
 2.490770f, 1.148070f, -0.138561f,
 2.027560f, 9.816986f, 5.410691f,
 1.694629f, 8.376197f, 7.008504f,
 1.970107f, 7.910337f, 4.652868f,
 1.998315f, 7.406264f, 5.241768f,
 0.791186f, 8.325944f, 0.745392f,
 0.791186f, 8.325944f, 0.745392f,
 0.936363f, 8.796633f, 1.888816f,
 0.817567f, 7.400916f, 0.506030f,
 0.371258f, 7.242582f, 0.407571f,
 0.791186f, 8.325944f, 0.745392f,
 0.791186f, 8.325944f, 0.745392f,
 0.371258f, 7.242582f, 0.407571f,
 0.371258f, 7.242582f, 0.407571f,
 0.033961f, 9.020711f, 2.207711f,
 0.033961f, 9.020711f, 2.207711f,
 0.562201f, 8.857300f, 2.131157f,
 0.562201f, 8.857300f, 2.131157f,
 0.936363f, 8.796633f, 1.888816f,
 0.936363f, 8.796633f, 1.888816f,
 0.562201f, 8.857300f, 2.131157f,
 0.936363f, 8.776437f, 2.090586f,
 1.272911f, 7.091772f, 1.922926f,
 0.936363f, 8.776437f, 2.090586f,
 0.936363f, 8.776437f, 2.090586f,
 0.429582f, 7.123904f, 1.600055f,
 0.442211f, 7.091464f, 1.926023f,
 0.442211f, 7.091464f, 1.926023f,
 0.033961f, 7.063576f, 2.206242f,
 0.442211f, 7.091464f, 1.926023f,
 0.445001f, 6.832169f, 2.095565f,
 0.445001f, 6.832169f, 2.095565f,
 0.432372f, 6.493993f, 2.071626f,
 0.432372f, 6.493993f, 2.071626f,
 0.432372f, 6.493993f, 2.071626f,
 0.782250f, 6.487432f, 2.137559f,
 1.272911f, 7.091772f, 1.922926f,
 0.782250f, 6.829272f, 2.124671f,
 0.782250f, 6.829272f, 2.124671f,
 0.782250f, 6.487432f, 2.137559f,
 0.429582f, 7.123904f, 1.600055f,
 0.776421f, 6.824476f, 1.570256f,
 0.371258f, 7.242582f, 0.407571f,
 0.371258f, 7.242582f, 0.407571f,
 0.776421f, 6.824476f, 1.570256f,
 1.200907f, 6.858847f, 0.515680f,
 0.033961f, 6.858342f, 1.536372f,
 0.429582f, 7.123904f, 1.600055f,
 0.429582f, 7.123904f, 1.600055f,
 0.033961f, 6.858342f, 1.536372f,
 0.776421f, 6.824476f, 1.570256f,
 0.033961f, 7.251250f, 0.320471f,
 0.371258f, 7.242582f, 0.407571f,
 0.033961f, 6.869148f, 0.412265f,
 0.033961f, 6.869148f, 0.412265f,
 0.371258f, 7.242582f, 0.407571f,
 1.200907f, 6.858847f, 0.515680f,
 0.971581f, 5.789957f, 1.254214f,
 0.684600f, 4.093725f, 0.095145f,
 0.700363f, 4.387566f, -0.536563f,
 0.684600f, 4.093725f, 0.095145f,
 0.684600f, 4.093725f, 0.095145f,
 1.175840f, 2.404591f, 0.968889f,
 0.033961f, 4.021122f, 0.251248f,
 0.684600f, 4.093725f, 0.095145f,
 0.684600f, 4.093725f, 0.095145f,
 0.033961f, 4.558465f, -0.903950f,
 0.700363f, 4.387566f, -0.536563f,
 0.700363f, 4.387566f, -0.536563f,
 0.776421f, 6.824476f, 1.570256f,
 1.200907f, 6.858847f, 0.515680f,
 1.200907f, 6.858847f, 0.515680f,
 0.971581f, 5.789957f, 1.254214f,
 0.776421f, 6.824476f, 1.570256f,
 0.776421f, 6.824476f, 1.570256f,
 0.997360f, 6.276372f, 0.208504f,
 0.971581f, 5.789957f, 1.254214f,
 0.971581f, 5.789957f, 1.254214f,
 1.143636f, 6.139362f, 1.341380f,
 1.200907f, 6.858847f, 0.515680f,
 0.997360f, 6.276372f, 0.208504f,
 0.997360f, 6.276372f, 0.208504f,
 1.143636f, 6.139362f, 1.341380f,
 2.076878f, 5.226658f, 0.861518f,
 2.076878f, 5.226658f, 0.861518f,
 2.076878f, 5.226658f, 0.861518f,
 2.065051f, 4.518452f, 1.950537f,
 2.065051f, 4.518452f, 1.950537f,
 1.175840f, 2.404591f, 0.968889f,
 1.773767f, -0.105875f, 1.487292f,
 1.773767f, -0.105875f, 1.487292f,
 -0.868441f, 8.796633f, 1.888816f,
 -0.723264f, 8.325944f, 0.745392f,
 -0.723264f, 8.325944f, 0.745392f,
 -0.749646f, 7.400916f, 0.506030f,
 -0.723264f, 8.325944f, 0.745392f,
 -0.303336f, 7.242582f, 0.407571f,
 -0.303336f, 7.242582f, 0.407571f,
 -0.723264f, 8.325944f, 0.745392f,
 -0.303336f, 7.242582f, 0.407571f,
 -0.494279f, 8.857300f, 2.131157f,
 0.033961f, 9.020711f, 2.207711f,
 0.033961f, 9.020711f, 2.207711f,
 -0.868441f, 8.776437f, 2.090586f,
 -0.494279f, 8.857300f, 2.131157f,
 -0.868441f, 8.796633f, 1.888816f,
 -0.868441f, 8.796633f, 1.888816f,
 -0.494279f, 8.857300f, 2.131157f,
 -0.868441f, 8.776437f, 2.090586f,
 -0.868441f, 8.776437f, 2.090586f,
 -1.204989f, 7.091772f, 1.922926f,
 0.033961f, 7.063576f, 2.206242f,
 -0.374288f, 7.091464f, 1.926023f,
 -0.374288f, 7.091464f, 1.926023f,
 -0.361660f, 7.123904f, 1.600055f,
 -0.374288f, 7.091464f, 1.926023f,
 -0.377078f, 6.832169f, 2.095565f,
 -0.377078f, 6.832169f, 2.095565f,
 -0.364450f, 6.493993f, 2.071626f,
 -0.364450f, 6.493993f, 2.071626f,
 -0.364450f, 6.493993f, 2.071626f,
 -0.714328f, 6.487432f, 2.137559f,
 -0.714328f, 6.487432f, 2.137559f,
 -0.714328f, 6.829272f, 2.124671f,
 -0.714328f, 6.829272f, 2.124671f,
 -1.204989f, 7.091772f, 1.922926f,
 -1.132985f, 6.858847f, 0.515680f,
 -0.708500f, 6.824476f, 1.570256f,
 -0.303336f, 7.242582f, 0.407571f,
 -0.303336f, 7.242582f, 0.407571f,
 -0.708500f, 6.824476f, 1.570256f,
 -0.361660f, 7.123904f, 1.600055f,
 -0.708500f, 6.824476f, 1.570256f,
 0.033961f, 6.858342f, 1.536372f,
 -0.361660f, 7.123904f, 1.600055f,
 -0.361660f, 7.123904f, 1.600055f,
 0.033961f, 6.858342f, 1.536372f,
 0.033961f, 7.251250f, 0.320471f,
 0.033961f, 6.869148f, 0.412265f,
 -0.303336f, 7.242582f, 0.407571f,
 -0.303336f, 7.242582f, 0.407571f,
 0.033961f, 6.869148f, 0.412265f,
 -1.132985f, 6.858847f, 0.515680f,
 -0.903658f, 5.789957f, 1.254214f,
 -0.616678f, 4.093725f, 0.095145f,
 -0.632440f, 4.387566f, -0.536563f,
 -0.616678f, 4.093725f, 0.095145f,
 -0.616678f, 4.093725f, 0.095145f,
 -1.091226f, 2.405592f, 0.983102f,
 -0.616678f, 4.093725f, 0.095145f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.093725f, 0.095145f,
 0.043180f, 2.444579f, 1.095782f,
 0.033961f, 4.021122f, 0.251248f,
 0.033961f, 4.558465f, -0.903950f,
 0.031052f, 1.941220f, -0.732449f,
 -0.632440f, 4.387566f, -0.536563f,
 -0.632440f, 4.387566f, -0.536563f,
 0.031052f, 1.941220f, -0.732449f,
 -1.134059f, 2.024062f, -0.357771f,
 -0.940458f, 6.592744f, 0.458496f,
 -1.526192f, 6.536861f, 0.864540f,
 -1.132985f, 6.858847f, 0.515680f,
 -1.132985f, 6.858847f, 0.515680f,
 -1.526192f, 6.536861f, 0.864540f,
 -0.708500f, 6.824476f, 1.570256f,
 -0.708500f, 6.824476f, 1.570256f,
 -1.526192f, 6.536861f, 0.864540f,
 -0.903658f, 5.789957f, 1.254214f,
 -0.903658f, 5.789957f, 1.254214f,
 -1.526192f, 6.536861f, 0.864540f,
 -1.399216f, 6.036678f, 1.177985f,
 -0.903658f, 5.789957f, 1.254214f,
 -1.399216f, 6.036678f, 1.177985f,
 -0.929437f, 6.276372f, 0.208504f,
 -1.399216f, 6.036678f, 1.177985f,
 -0.720308f, 6.103392f, 0.712748f,
 -0.929437f, 6.276372f, 0.208504f,
 -0.720308f, 6.103392f, 0.712748f,
 -0.940458f, 6.592744f, 0.458496f,
 -0.929437f, 6.276372f, 0.208504f,
 -0.929437f, 6.276372f, 0.208504f,
 -0.940458f, 6.592744f, 0.458496f,
 -1.132985f, 6.858847f, 0.515680f,
 -1.799080f, 5.005333f, -0.209841f,
 -1.681863f, 5.113908f, 0.049765f,
 -1.526192f, 6.536861f, 0.864540f,
 -1.526192f, 6.536861f, 0.864540f,
 -1.681863f, 5.113908f, 0.049765f,
 -1.399216f, 6.036678f, 1.177985f,
 -1.972446f, 4.109253f, 0.820408f,
 -1.681863f, 5.113908f, 0.049765f,
 -2.138840f, 3.955127f, 0.451885f,
 -2.138840f, 3.955127f, 0.451885f,
 -1.681863f, 5.113908f, 0.049765f,
 -1.799080f, 5.005333f, -0.209841f,
 -1.751827f, -0.202803f, -0.881103f,
 -1.694184f, -0.108482f, 1.493000f,
 -1.134059f, 2.024062f, -0.357771f,
 -1.134059f, 2.024062f, -0.357771f,
 -1.694184f, -0.108482f, 1.493000f,
 -1.091226f, 2.405592f, 0.983102f,
 2.373816f, 4.011961f, 1.525146f,
 2.604418f, 4.073022f, 2.406410f,
 2.469100f, 3.475741f, 1.974687f,
 1.958156f, 4.046770f, 1.609505f,
 2.373816f, 4.011961f, 1.525146f,
 1.886902f, 3.565518f, 2.038533f,
 1.886902f, 3.565518f, 2.038533f,
 2.373816f, 4.011961f, 1.525146f,
 2.469100f, 3.475741f, 1.974687f,
 2.065051f, 4.518452f, 1.950537f,
 1.958156f, 4.046770f, 1.609505f,
 2.039430f, 4.233407f, 2.525419f,
 2.039430f, 4.233407f, 2.525419f,
 1.958156f, 4.046770f, 1.609505f,
 1.886902f, 3.565518f, 2.038533f,
 -1.500541f, 3.834087f, 0.592808f,
 -2.150972f, 3.663930f, 1.247272f,
 -1.479714f, 3.276003f, 0.922739f,
 -1.500541f, 3.834087f, 0.592808f,
 -1.479714f, 3.276003f, 0.922739f,
 -1.731305f, 3.714225f, 0.255935f,
 -1.731305f, 3.714225f, 0.255935f,
 -1.479714f, 3.276003f, 0.922739f,
 -1.815352f, 3.052739f, 0.488467f,
 -2.138840f, 3.955127f, 0.451885f,
 -1.731305f, 3.714225f, 0.255935f,
 -2.412820f, 3.401231f, 0.776611f,
 -2.412820f, 3.401231f, 0.776611f,
 -1.731305f, 3.714225f, 0.255935f,
 -1.815352f, 3.052739f, 0.488467f,
 -2.138840f, 3.955127f, 0.451885f,
 -2.412820f, 3.401231f, 0.776611f,
 -1.972446f, 4.109253f, 0.820408f,
 2.462562f, 1.652142f, -0.727461f,
 2.490770f, 1.148070f, -0.138561f,
 1.970107f, 7.910337f, 4.652868f,
 1.970107f, 7.910337f, 4.652868f,
 2.490770f, 1.148070f, -0.138561f,
 1.998315f, 7.406264f, 5.241768f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.262935f, -0.108297f},
{ 0.826605f, -0.285787f, -0.484819f},
{ 0.904768f, 0.156189f, -0.396232f},
{ 0.857718f, -0.267231f, -0.439212f},
{ 0.363846f, 0.455911f, -0.812257f},
{ 0.549456f, 0.815955f, -0.179765f},
{ 0.485921f, 0.210700f, -0.848226f},
{ 0.520281f, -0.832553f, -0.190167f},
{ 0.517275f, -0.081072f, 0.851970f},
{ 0.414372f, -0.017103f, 0.909947f},
{ 0.188089f, -0.185452f, 0.964484f},
{ 0.238558f, 0.235581f, 0.942121f},
{ 0.000000f, 0.357659f, 0.933852f},
{ -0.000000f, -0.312376f, 0.949959f},
{ 0.000000f, 0.576930f, -0.816794f},
{ 0.000000f, 0.997267f, -0.073882f},
{ 0.000000f, 0.102736f, -0.994709f},
{ 0.453143f, 0.257101f, 0.853558f},
{ -0.760935f, 0.182850f, 0.622530f},
{ 0.383691f, -0.821415f, -0.421969f},
{ -0.216585f, -0.792905f, -0.569555f},
{ -0.000000f, -0.932979f, 0.359932f},
{ 0.417326f, 0.445861f, 0.791863f},
{ 0.405174f, 0.857754f, -0.316372f},
{ -0.000000f, -0.051924f, 0.998651f},
{ -0.000000f, 0.314583f, -0.949230f},
{ 0.578859f, -0.814688f, -0.034733f},
{ 0.741880f, -0.084193f, 0.665226f},
{ -0.758455f, -0.615598f, 0.213973f},
{ -0.458468f, 0.186567f, 0.868907f},
{ 0.000000f, -0.454675f, 0.890658f},
{ 0.717307f, -0.417739f, 0.557642f},
{ 0.693044f, 0.224843f, -0.684935f},
{ -0.000000f, 0.498458f, -0.866914f},
{ 0.894286f, 0.050471f, 0.444640f},
{ 0.755799f, 0.051517f, -0.652774f},
{ 0.000195f, 0.157466f, -0.987525f},
{ -0.000244f, -0.126053f, 0.992024f},
{ 0.814430f, 0.269918f, -0.513662f},
{ 0.724800f, 0.380256f, 0.574517f},
{ 0.005817f, 0.386652f, 0.922208f},
{ -0.042694f, 0.201723f, -0.978512f},
{ 0.743669f, 0.533055f, 0.403495f},
{ 0.665630f, 0.394458f, -0.633514f},
{ 0.125306f, -0.505284f, 0.853807f},
{ -0.338559f, -0.643409f, -0.686588f},
{ 0.904458f, 0.403016f, -0.139765f},
{ 0.555269f, -0.252084f, -0.792547f},
{ -0.467980f, -0.097122f, 0.878386f},
{ -0.839893f, -0.410135f, -0.355486f},
{ 0.891340f, 0.428785f, 0.147159f},
{ 0.644038f, -0.492794f, -0.585124f},
{ -0.603643f, 0.695768f, 0.389259f},
{ -0.924411f, -0.231999f, -0.302723f},
{ 0.001850f, 0.272869f, 0.962049f},
{ 0.766634f, 0.313688f, 0.560243f},
{ 0.804532f, 0.334514f, -0.490742f},
{ -0.028391f, 0.357016f, -0.933667f},
{ -0.958716f, 0.262936f, -0.108297f},
{ -0.904768f, 0.156190f, -0.396232f},
{ -0.826605f, -0.285787f, -0.484819f},
{ -0.857718f, -0.267231f, -0.439212f},
{ -0.549456f, 0.815955f, -0.179765f},
{ -0.363846f, 0.455911f, -0.812257f},
{ -0.485921f, 0.210699f, -0.848225f},
{ -0.520281f, -0.832553f, -0.190169f},
{ -0.238557f, 0.235582f, 0.942121f},
{ -0.414372f, -0.017103f, 0.909947f},
{ -0.188090f, -0.185452f, 0.964484f},
{ -0.517274f, -0.081072f, 0.851971f},
{ -0.453143f, 0.257102f, 0.853558f},
{ -0.383691f, -0.821416f, -0.421969f},
{ 0.760936f, 0.182849f, 0.622530f},
{ 0.216586f, -0.792906f, -0.569553f},
{ -0.460157f, 0.833965f, -0.304561f},
{ -0.495905f, 0.328505f, 0.803843f},
{ -0.032885f, -0.881557f, -0.470931f},
{ 0.684192f, -0.410124f, 0.603058f},
{ -0.857905f, -0.513646f, 0.012932f},
{ -0.243563f, -0.001336f, 0.969884f},
{ -0.704678f, -0.429477f, 0.564782f},
{ -0.725069f, 0.249969f, -0.641710f},
{ -0.756189f, 0.051294f, -0.652340f},
{ -0.893344f, 0.050095f, 0.446573f},
{ -0.836510f, 0.254410f, -0.485310f},
{ -0.716210f, 0.381119f, 0.584629f},
{ -0.309377f, 0.393792f, -0.865572f},
{ -0.882969f, 0.468654f, 0.026998f},
{ -0.407862f, -0.644709f, 0.646529f},
{ 0.971996f, -0.223685f, 0.072039f},
{ 0.085378f, -0.062634f, -0.994378f},
{ -0.628619f, 0.329966f, -0.704245f},
{ -0.315815f, -0.224873f, 0.921788f},
{ 0.970015f, -0.172914f, 0.170800f},
{ -0.898002f, 0.081274f, -0.432420f},
{ 0.087973f, -0.422831f, -0.901928f},
{ -0.095718f, 0.660402f, 0.744787f},
{ 0.922251f, 0.157715f, 0.352959f},
{ -0.764258f, 0.311891f, 0.564477f},
{ -0.820140f, 0.353721f, -0.449725f},
{ -0.998648f, -0.051862f, 0.003443f},
{ -0.997993f, -0.037049f, -0.051362f},
{ -0.987315f, 0.022985f, -0.157100f},
{ -0.982892f, 0.024713f, -0.182518f},
{ -0.997562f, -0.068886f, -0.011180f},
{ -0.997562f, -0.068886f, -0.011180f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
85, 89, 83,
83, 89, 87,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
37, 91, 53,
53, 91, 81,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: attack Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86