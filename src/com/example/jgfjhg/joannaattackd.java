package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class joannaattackd {

static String TextureName = "joannaattack4.mtl";

static int Vertices = 249;

static int VertTexts = 156;

static int Normals = 96;

static int Faces = 170;

static int FacesB = 0;

static int SmoothGroups = 4;

static float VertArray[] = new float[]{
 0.294138f, 0.610000f, -0.140181f,
 0.371683f, 0.883673f, -0.694071f,
 0.981455f, 0.764265f, -0.648569f,
 0.882816f, 0.496261f, -0.134585f,
 0.219674f, 0.081979f, -0.022136f,
 0.062212f, 0.139242f, -0.590519f,
 2.091196f, -0.057554f, -1.187723f,
 2.249126f, -0.116870f, -0.622628f,
 0.236786f, 2.652689f, 1.103021f,
 0.497027f, 3.059973f, 0.489209f,
 1.236468f, 3.395874f, 0.809447f,
 1.083996f, 3.036892f, 1.455322f,
 1.787449f, 1.981100f, 0.787688f,
 1.890000f, 2.212500f, 0.328173f,
 1.344929f, 2.232363f, 0.250242f,
 1.190759f, 2.016977f, 0.756241f,
 1.033498f, 7.198049f, 3.323210f,
 0.511083f, 5.427500f, 2.963199f,
 -0.105755f, 6.399890f, 2.772228f,
 0.390114f, 7.176415f, 2.923346f,
 0.381631f, 6.734334f, 4.318525f,
 0.751385f, 6.119092f, 2.361780f,
 0.492030f, 6.589332f, 1.917388f,
 -0.174518f, 4.868596f, 1.585437f,
 0.529620f, 4.796518f, 1.406143f,
 0.826332f, 4.386995f, 1.728219f,
 0.320902f, 4.007653f, 2.170493f,
 0.356970f, 8.009469f, 4.593356f,
 1.001872f, 7.818072f, 4.226779f,
 1.008042f, 6.978794f, 4.046354f,
 0.766404f, 6.636167f, 3.369602f,
 1.499500f, 6.613433f, 2.611322f,
 0.406547f, 8.280718f, 3.193577f,
 1.028160f, 7.962069f, 3.480794f,
 0.594923f, 6.862316f, 2.958934f,
 1.589075f, 6.763974f, 2.243279f,
 0.929062f, 7.065856f, 2.703756f,
 0.934274f, 7.228109f, 2.232832f,
 2.198558f, 6.039855f, 2.253839f,
 2.442628f, 6.309622f, 2.386872f,
 2.645477f, 6.232387f, 2.186327f,
 2.440095f, 5.964154f, 2.038941f,
 0.500408f, 6.372089f, 3.691148f,
 0.417418f, 6.802685f, 2.891355f,
 1.371828f, 6.049041f, 3.938265f,
 1.933453f, 6.477454f, 3.789943f,
 2.322932f, 6.135992f, 3.799268f,
 2.032842f, 5.590944f, 3.897291f,
 -0.530375f, 2.339388f, 0.299396f,
 1.568420f, 3.444218f, 0.494966f,
 0.706620f, 2.966685f, -0.126493f,
 0.484433f, 2.575429f, 1.927654f,
 -0.037241f, 6.574782f, 4.155556f,
 0.622387f, 6.261820f, 4.208836f,
 -0.122897f, 6.370885f, 4.559213f,
 0.582645f, 6.100171f, 4.582899f,
 -0.260614f, 7.817213f, 4.182975f,
 -0.234452f, 7.960834f, 3.437819f,
 -0.382747f, 4.168002f, 2.440772f,
 -0.627576f, 4.591555f, 2.085917f,
 0.035124f, 5.625038f, 3.706271f,
 -0.410242f, 5.765010f, 4.042148f,
 -0.153421f, 6.650655f, 3.417659f,
 0.047436f, 6.461895f, 3.744489f,
 -0.254696f, 6.978263f, 4.002004f,
 -0.229040f, 7.196948f, 3.280076f,
 1.217742f, 6.826447f, 2.894717f,
 1.994231f, 6.582699f, 3.013660f,
 1.443660f, 7.090060f, 3.526465f,
 1.936844f, 6.928349f, 3.542004f,
 1.442004f, 5.726105f, 4.391194f,
 1.643115f, 5.548679f, 4.613553f,
 1.733524f, 5.864562f, 4.780946f,
 1.562884f, 6.037327f, 4.589364f,
 -1.057708f, 3.449540f, 2.669052f,
 -1.508477f, 2.495200f, 1.732533f,
 -0.341806f, 0.641049f, 2.408943f,
 -0.935859f, 0.659530f, 2.414450f,
 -0.949544f, 0.706710f, 3.035669f,
 -0.360901f, 0.699039f, 3.040744f,
 -0.356053f, 0.062232f, 2.279211f,
 -0.946553f, 0.061391f, 2.289612f,
 -0.941862f, 0.061388f, 4.413790f,
 -0.352544f, 0.061316f, 4.409658f,
 -0.127359f, 2.561477f, 1.840402f,
 -0.887323f, 2.708459f, 1.918671f,
 -0.878907f, 3.452981f, 2.372583f,
 -0.125527f, 3.414913f, 2.364886f,
 -0.370218f, 2.593150f, 3.539984f,
 -0.892505f, 2.610080f, 3.553660f,
 -0.880077f, 2.408634f, 3.079923f,
 -0.330380f, 2.372747f, 2.994976f,
 2.837902f, 11.733967f, 1.530005f,
 2.344572f, 11.792696f, 2.707419f,
 1.881244f, 4.760312f, 3.294414f,
 1.604849f, 5.025672f, 4.320418f,
 1.190759f, 2.016977f, 0.756241f,
 1.190759f, 2.016977f, 0.756241f,
 0.236786f, 2.652689f, 1.103021f,
 0.294138f, 0.610000f, -0.140181f,
 0.219674f, 0.081979f, -0.022136f,
 0.219674f, 0.081979f, -0.022136f,
 0.294138f, 0.610000f, -0.140181f,
 0.219674f, 0.081979f, -0.022136f,
 0.882816f, 0.496261f, -0.134585f,
 0.882816f, 0.496261f, -0.134585f,
 0.219674f, 0.081979f, -0.022136f,
 2.249126f, -0.116870f, -0.622628f,
 0.882816f, 0.496261f, -0.134585f,
 2.249126f, -0.116870f, -0.622628f,
 2.249126f, -0.116870f, -0.622628f,
 0.981455f, 0.764265f, -0.648569f,
 0.981455f, 0.764265f, -0.648569f,
 0.981455f, 0.764265f, -0.648569f,
 0.981455f, 0.764265f, -0.648569f,
 0.371683f, 0.883673f, -0.694071f,
 0.371683f, 0.883673f, -0.694071f,
 1.190759f, 2.016977f, 0.756241f,
 1.190759f, 2.016977f, 0.756241f,
 0.371683f, 0.883673f, -0.694071f,
 0.294138f, 0.610000f, -0.140181f,
 0.766404f, 6.636167f, 3.369602f,
 0.766404f, 6.636167f, 3.369602f,
 0.751385f, 6.119092f, 2.361780f,
 0.751385f, 6.119092f, 2.361780f,
 0.766404f, 6.636167f, 3.369602f,
 0.766404f, 6.636167f, 3.369602f,
 0.594923f, 6.862316f, 2.958934f,
 0.594923f, 6.862316f, 2.958934f,
 0.594923f, 6.862316f, 2.958934f,
 0.766404f, 6.636167f, 3.369602f,
 0.766404f, 6.636167f, 3.369602f,
 0.751385f, 6.119092f, 2.361780f,
 0.492030f, 6.589332f, 1.917388f,
 2.198558f, 6.039855f, 2.253839f,
 2.198558f, 6.039855f, 2.253839f,
 0.492030f, 6.589332f, 1.917388f,
 0.492030f, 6.589332f, 1.917388f,
 0.751385f, 6.119092f, 2.361780f,
 1.371828f, 6.049041f, 3.938265f,
 1.371828f, 6.049041f, 3.938265f,
 2.198558f, 6.039855f, 2.253839f,
 2.032842f, 5.590944f, 3.897291f,
 2.032842f, 5.590944f, 3.897291f,
 2.198558f, 6.039855f, 2.253839f,
 0.492030f, 6.589332f, 1.917388f,
 0.492030f, 6.589332f, 1.917388f,
 0.594923f, 6.862316f, 2.958934f,
 0.594923f, 6.862316f, 2.958934f,
 2.032842f, 5.590944f, 3.897291f,
 -0.530375f, 2.339388f, 0.299396f,
 0.706620f, 2.966685f, -0.126493f,
 0.484433f, 2.575429f, 1.927654f,
 0.484433f, 2.575429f, 1.927654f,
 0.706620f, 2.966685f, -0.126493f,
 1.568420f, 3.444218f, 0.494966f,
 0.356970f, 8.009469f, 4.593356f,
 0.406547f, 8.280718f, 3.193577f,
 0.406547f, 8.280718f, 3.193577f,
 0.511083f, 5.427500f, 2.963199f,
 0.047436f, 6.461895f, 3.744489f,
 0.511083f, 5.427500f, 2.963199f,
 0.500408f, 6.372089f, 3.691148f,
 0.047436f, 6.461895f, 3.744489f,
 0.035124f, 5.625038f, 3.706271f,
 0.035124f, 5.625038f, 3.706271f,
 0.500408f, 6.372089f, 3.691148f,
 0.381631f, 6.734334f, 4.318525f,
 0.047436f, 6.461895f, 3.744489f,
 0.381631f, 6.734334f, 4.318525f,
 0.047436f, 6.461895f, 3.744489f,
 0.417418f, 6.802685f, 2.891355f,
 -0.153421f, 6.650655f, 3.417659f,
 0.390114f, 7.176415f, 2.923346f,
 -0.153421f, 6.650655f, 3.417659f,
 0.390114f, 7.176415f, 2.923346f,
 -0.153421f, 6.650655f, 3.417659f,
 0.047436f, 6.461895f, 3.744489f,
 0.047436f, 6.461895f, 3.744489f,
 0.320902f, 4.007653f, 2.170493f,
 0.511083f, 5.427500f, 2.963199f,
 0.511083f, 5.427500f, 2.963199f,
 0.035124f, 5.625038f, 3.706271f,
 1.442004f, 5.726105f, 4.391194f,
 -0.410242f, 5.765010f, 4.042148f,
 1.442004f, 5.726105f, 4.391194f,
 -0.410242f, 5.765010f, 4.042148f,
 -0.410242f, 5.765010f, 4.042148f,
 0.035124f, 5.625038f, 3.706271f,
 1.217742f, 6.826447f, 2.894717f,
 1.217742f, 6.826447f, 2.894717f,
 1.994231f, 6.582699f, 3.013660f,
 1.442004f, 5.726105f, 4.391194f,
 1.994231f, 6.582699f, 3.013660f,
 1.442004f, 5.726105f, 4.391194f,
 -0.410242f, 5.765010f, 4.042148f,
 -0.410242f, 5.765010f, 4.042148f,
 -0.153421f, 6.650655f, 3.417659f,
 -0.105755f, 6.399890f, 2.772228f,
 -0.153421f, 6.650655f, 3.417659f,
 0.417418f, 6.802685f, 2.891355f,
 -0.105755f, 6.399890f, 2.772228f,
 1.994231f, 6.582699f, 3.013660f,
 0.390114f, 7.176415f, 2.923346f,
 0.406547f, 8.280718f, 3.193577f,
 0.390114f, 7.176415f, 2.923346f,
 0.356970f, 8.009469f, 4.593356f,
 0.381631f, 6.734334f, 4.318525f,
 0.381631f, 6.734334f, 4.318525f,
 -0.174518f, 4.868596f, 1.585437f,
 -0.105755f, 6.399890f, 2.772228f,
 -0.174518f, 4.868596f, 1.585437f,
 -0.530375f, 2.339388f, 0.299396f,
 -0.174518f, 4.868596f, 1.585437f,
 -0.174518f, 4.868596f, 1.585437f,
 0.484433f, 2.575429f, 1.927654f,
 0.320902f, 4.007653f, 2.170493f,
 0.320902f, 4.007653f, 2.170493f,
 -0.530375f, 2.339388f, 0.299396f,
 0.484433f, 2.575429f, 1.927654f,
 -1.508477f, 2.495200f, 1.732533f,
 0.484433f, 2.575429f, 1.927654f,
 -1.057708f, 3.449540f, 2.669052f,
 -1.508477f, 2.495200f, 1.732533f,
 -0.330380f, 2.372747f, 2.994976f,
 -0.127359f, 2.561477f, 1.840402f,
 -0.330380f, 2.372747f, 2.994976f,
 -0.341806f, 0.641049f, 2.408943f,
 -0.356053f, 0.062232f, 2.279211f,
 -0.356053f, 0.062232f, 2.279211f,
 -0.341806f, 0.641049f, 2.408943f,
 -0.360901f, 0.699039f, 3.040744f,
 -0.356053f, 0.062232f, 2.279211f,
 -0.360901f, 0.699039f, 3.040744f,
 -0.352544f, 0.061316f, 4.409658f,
 -0.356053f, 0.062232f, 2.279211f,
 -0.360901f, 0.699039f, 3.040744f,
 -0.352544f, 0.061316f, 4.409658f,
 -0.352544f, 0.061316f, 4.409658f,
 -0.949544f, 0.706710f, 3.035669f,
 -0.949544f, 0.706710f, 3.035669f,
 -0.949544f, 0.706710f, 3.035669f,
 -0.935859f, 0.659530f, 2.414450f,
 -0.949544f, 0.706710f, 3.035669f,
 -0.330380f, 2.372747f, 2.994976f,
 -0.935859f, 0.659530f, 2.414450f,
 -0.330380f, 2.372747f, 2.994976f,
 -0.341806f, 0.641049f, 2.408943f,
 -0.935859f, 0.659530f, 2.414450f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.453876f, 0.791903f,
 0.201824f, 0.532079f,
 0.590263f, 0.596995f,
 0.556897f, 0.779659f,
 0.235400f, 0.777966f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.566387f, 0.397259f,
 0.470805f, 0.365178f,
 0.365778f, 0.346308f,
 0.249833f, 0.335338f,
 0.289739f, 0.984705f,
 0.362886f, 0.905310f,
 0.354538f, 0.788048f,
 0.662213f, 0.973243f,
 0.649436f, 0.842323f,
 0.523433f, 0.983917f,
 0.451956f, 0.900429f,
 0.700374f, 0.973112f,
 0.714202f, 0.842324f,
 0.662213f, 0.871337f,
 0.700374f, 0.871169f,
 0.611238f, 0.659338f,
 0.649436f, 0.659338f,
 0.714202f, 0.659338f,
 0.749335f, 0.659338f,
 0.262276f, 0.714547f,
 0.539459f, 0.732725f,
 0.635368f, 0.320085f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.727698f, 0.329948f,
 0.754615f, 0.048462f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.147427f, 0.097935f,
 0.662213f, 0.871337f,
 0.649436f, 0.842323f,
 0.700374f, 0.871169f,
 0.714202f, 0.842324f,
 0.362886f, 0.905310f,
 0.451956f, 0.900429f,
 0.365778f, 0.346308f,
 0.470805f, 0.365178f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.700374f, 0.973112f,
 0.662213f, 0.973243f,
 0.354538f, 0.788048f,
 0.453876f, 0.791903f,
 0.635368f, 0.320085f,
 0.727698f, 0.329948f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.611238f, 0.659338f,
 0.749335f, 0.659338f,
 0.714202f, 0.659338f,
 0.649436f, 0.659338f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.829311f, 0.001810f,
 0.999173f, 0.001810f,
 0.829311f, 0.998093f,
 0.999173f, 0.998093f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.132466f, 0.001616f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.326300f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.806916f, 0.873085f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.749335f, 0.410462f,
 0.747690f, 0.223911f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.737676f, 0.256798f,
 0.289739f, 0.984705f,
 0.523433f, 0.983917f,
 0.523433f, 0.983917f,
 0.201824f, 0.532079f,
 0.353637f, 0.718421f,
 0.201824f, 0.532079f,
 0.262276f, 0.714547f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.262276f, 0.714547f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.539459f, 0.732725f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.249833f, 0.335338f,
 0.201824f, 0.532079f,
 0.201824f, 0.532079f,
 0.806916f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.590263f, 0.596995f,
 0.452577f, 0.721572f,
 0.539459f, 0.732725f,
 0.590263f, 0.596995f,
 0.749335f, 0.410462f,
 0.556897f, 0.779659f,
 0.523433f, 0.983917f,
 0.556897f, 0.779659f,
 0.289739f, 0.984705f,
 0.235400f, 0.777966f,
 0.235400f, 0.777966f,
 0.566387f, 0.397259f,
 0.590263f, 0.596995f,
 0.566387f, 0.397259f,
 0.754615f, 0.048462f,
 0.566387f, 0.397259f,
 0.566387f, 0.397259f,
 0.147427f, 0.097935f,
 0.249833f, 0.335338f,
 0.249833f, 0.335338f,
 0.747690f, 0.223911f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.737676f, 0.256798f,
 0.756142f, 0.248493f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.196341f, 0.621715f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.132466f, 0.001616f,
 0.063514f, 0.126699f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.102748f, 0.326300f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.326300f,
 0.148951f, 0.326300f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.253094f, -0.869485f, 0.424193f},
{ -0.543008f, -0.624696f, -0.561158f},
{ 0.591908f, -0.775415f, 0.219944f},
{ 0.248063f, -0.543202f, -0.802120f},
{ 0.531275f, -0.169474f, 0.830076f},
{ 0.718687f, -0.378208f, 0.583480f},
{ 0.769730f, 0.552170f, -0.320350f},
{ 0.900971f, 0.134476f, -0.412513f},
{ -0.493480f, -0.847405f, 0.195915f},
{ -0.593209f, -0.467867f, 0.655137f},
{ -0.317983f, 0.480962f, -0.817045f},
{ -0.286089f, -0.079673f, -0.954885f},
{ -0.784385f, 0.147295f, 0.602532f},
{ -0.581307f, 0.532130f, -0.615565f},
{ 0.370668f, 0.398681f, -0.838843f},
{ 0.478457f, -0.242358f, 0.844004f},
{ 0.702564f, 0.268240f, 0.659129f},
{ 0.172100f, -0.103806f, 0.979595f},
{ -0.174736f, 0.820296f, -0.544594f},
{ 0.332538f, 0.645490f, -0.687576f},
{ -0.032600f, 0.549200f, 0.835055f},
{ 0.729763f, 0.401304f, 0.553535f},
{ 0.025974f, 0.806734f, -0.590343f},
{ 0.795874f, 0.476099f, -0.374050f},
{ 0.943270f, 0.001464f, 0.332024f},
{ 0.272387f, 0.557702f, -0.784075f},
{ 0.932325f, -0.353672f, -0.075407f},
{ -0.378256f, 0.438793f, -0.815097f},
{ -0.331517f, 0.888078f, -0.318456f},
{ 0.917960f, -0.371589f, 0.138822f},
{ 0.799094f, -0.371260f, 0.472879f},
{ 0.501578f, -0.586482f, 0.635970f},
{ 0.026390f, -0.492343f, 0.870001f},
{ 0.803047f, -0.402607f, 0.439344f},
{ -0.520715f, 0.344672f, -0.781061f},
{ -0.064566f, 0.154794f, -0.985835f},
{ 0.901081f, -0.047943f, -0.430992f},
{ 0.598186f, -0.204696f, 0.774773f},
{ -0.977369f, -0.197807f, -0.074984f},
{ -0.008364f, -0.996220f, 0.086465f},
{ -0.259142f, 0.960146f, 0.104709f},
{ 0.937725f, 0.015580f, 0.347028f},
{ -0.618751f, -0.785575f, -0.004428f},
{ 0.507129f, -0.486710f, -0.711290f},
{ 0.933668f, -0.115566f, -0.338981f},
{ 0.100809f, 0.975973f, 0.193168f},
{ -0.900782f, 0.349083f, -0.258329f},
{ 0.936371f, -0.020705f, -0.350401f},
{ 0.052901f, -0.135254f, -0.989398f},
{ -0.644295f, 0.447895f, -0.619898f},
{ -0.562697f, -0.299581f, -0.770469f},
{ 0.503046f, -0.688760f, 0.522068f},
{ 0.351821f, 0.899821f, -0.257960f},
{ -0.657973f, 0.137198f, 0.740438f},
{ 0.404085f, 0.635184f, -0.658223f},
{ -0.212394f, -0.182860f, 0.959922f},
{ -0.765806f, 0.395621f, 0.506977f},
{ -0.771676f, 0.482489f, -0.414392f},
{ -0.137062f, -0.196675f, 0.970841f},
{ 0.444879f, -0.780229f, 0.439688f},
{ -0.893790f, 0.425802f, -0.140826f},
{ -0.938416f, -0.240203f, 0.248352f},
{ -0.950569f, 0.271435f, -0.150803f},
{ 0.292184f, -0.582159f, 0.758762f},
{ -0.869756f, -0.288646f, 0.400260f},
{ -0.841462f, -0.067048f, -0.536140f},
{ -0.730076f, -0.337726f, -0.594079f},
{ -0.639563f, 0.693941f, 0.330765f},
{ 0.496698f, -0.609013f, -0.618380f},
{ 0.862047f, 0.412434f, 0.294572f},
{ -0.218142f, -0.590604f, -0.776918f},
{ 0.470946f, -0.811257f, 0.346514f},
{ 0.754218f, -0.167983f, 0.634773f},
{ -0.306554f, 0.824615f, 0.475431f},
{ -0.470767f, -0.185764f, 0.862479f},
{ -0.911341f, -0.386347f, -0.142107f},
{ 0.523744f, -0.815991f, -0.244645f},
{ 0.546845f, -0.636164f, 0.544294f},
{ -0.529488f, -0.813788f, -0.239566f},
{ -0.546705f, -0.632626f, 0.548542f},
{ 0.704082f, 0.497921f, 0.506303f},
{ -0.633851f, 0.629848f, 0.448914f},
{ 0.514149f, 0.208407f, 0.831996f},
{ -0.496632f, 0.214374f, 0.841071f},
{ 0.631911f, -0.774885f, -0.015549f},
{ 0.908300f, -0.233919f, -0.346804f},
{ -0.915563f, -0.067563f, -0.396459f},
{ -0.757493f, -0.639249f, -0.132531f},
{ 0.659741f, 0.214468f, -0.720240f},
{ -0.637555f, 0.245884f, -0.730113f},
{ -0.899116f, 0.158942f, 0.407833f},
{ 0.888856f, 0.145737f, 0.434392f},
{ 0.921437f, -0.028365f, 0.387491f},
{ 0.924990f, -0.029319f, 0.378859f},
{ 0.957718f, -0.039309f, 0.285010f},
{ 0.962065f, -0.040870f, 0.269741f}};

static int[] FaceArray = new int[]{
4, 5, 7,
7, 5, 6,
11, 12, 10,
10, 12, 13,
8, 15, 11,
11, 15, 12,
14, 96, 9,
9, 97, 98,
13, 14, 10,
10, 14, 9,
99, 1, 100,
101, 1, 5,
1, 2, 5,
5, 2, 6,
102, 103, 104,
105, 106, 107,
108, 109, 2,
2, 110, 6,
13, 12, 111,
112, 12, 3,
13, 113, 14,
14, 114, 115,
14, 116, 117,
118, 119, 120,
12, 15, 3,
3, 15, 0,
36, 31, 37,
37, 31, 35,
27, 28, 32,
32, 28, 33,
25, 24, 21,
21, 24, 22,
37, 34, 36,
36, 34, 30,
21, 121, 17,
17, 122, 42,
31, 36, 123,
124, 36, 30,
42, 125, 20,
20, 126, 29,
43, 19, 127,
128, 19, 16,
129, 16, 130,
131, 16, 29,
29, 16, 28,
28, 16, 33,
26, 25, 17,
17, 25, 21,
44, 47, 45,
45, 47, 46,
132, 133, 134,
135, 136, 41,
137, 35, 41,
41, 35, 40,
138, 38, 31,
31, 38, 39,
31, 39, 35,
35, 39, 40,
39, 38, 45,
45, 38, 139,
140, 141, 142,
143, 144, 41,
40, 39, 46,
46, 39, 45,
35, 145, 37,
37, 146, 34,
22, 18, 147,
148, 18, 43,
149, 41, 46,
46, 41, 40,
16, 19, 33,
33, 19, 32,
27, 20, 28,
28, 20, 29,
25, 49, 24,
24, 49, 50,
24, 23, 22,
22, 23, 18,
48, 23, 50,
50, 23, 24,
51, 49, 26,
26, 49, 25,
150, 151, 152,
153, 154, 155,
52, 54, 53,
54, 55, 53,
156, 157, 56,
158, 57, 56,
58, 60, 59,
60, 61, 59,
54, 52, 62,
52, 63, 62,
60, 159, 160,
161, 162, 163,
53, 164, 52,
165, 63, 52,
166, 167, 168,
169, 64, 170,
171, 172, 173,
174, 65, 175,
176, 177, 65,
178, 64, 65,
64, 56, 65,
56, 57, 65,
179, 180, 58,
181, 60, 58,
66, 68, 67,
68, 69, 67,
182, 183, 184,
185, 71, 186,
187, 71, 55,
71, 72, 55,
188, 53, 70,
53, 73, 70,
53, 55, 73,
55, 72, 73,
73, 68, 70,
68, 189, 70,
190, 191, 192,
193, 71, 194,
72, 69, 73,
69, 68, 73,
55, 54, 195,
54, 62, 196,
61, 197, 198,
199, 200, 201,
202, 69, 71,
69, 72, 71,
65, 57, 203,
57, 204, 205,
206, 56, 207,
56, 64, 208,
58, 59, 74,
59, 75, 74,
59, 61, 209,
61, 210, 211,
212, 75, 213,
75, 59, 214,
215, 216, 74,
217, 58, 74,
218, 219, 220,
221, 222, 223,
80, 83, 81,
83, 82, 81,
87, 86, 88,
86, 89, 88,
84, 87, 91,
87, 88, 91,
90, 85, 224,
85, 225, 226,
89, 86, 90,
86, 85, 90,
227, 228, 77,
229, 81, 77,
77, 81, 78,
81, 82, 78,
230, 231, 232,
233, 234, 235,
236, 78, 237,
78, 82, 238,
89, 239, 88,
240, 79, 88,
89, 90, 241,
90, 242, 243,
90, 244, 245,
246, 247, 248,
88, 79, 91,
79, 76, 91,
92, 93, 94,
94, 93, 95, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 249  Texture Co-ords: 156  Normals: 96  Texture: joannaattack4.mtl Faces: 170 Smooth Groups: 4 sucess: 80 Doubles: 90 Redos needed: 153 Correct: 117