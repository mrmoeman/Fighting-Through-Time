package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phaattackb {

static String TextureName = "attack";

static int Vertices = 345;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 31;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 8.006824f, -0.275767f,
 0.936363f, 9.407760f, -1.226339f,
 0.791186f, 8.200045f, -1.970593f,
 0.817567f, 7.336438f, -1.561747f,
 0.562201f, 9.495840f, -1.246994f,
 0.444292f, 8.471778f, -2.280829f,
 0.371258f, 7.151786f, -1.535907f,
 0.442211f, 8.008572f, -0.273192f,
 0.033961f, 8.166685f, -0.040167f,
 0.033961f, 9.670357f, -1.292906f,
 0.033961f, 8.608924f, -2.373887f,
 0.033961f, 7.102640f, -1.608338f,
 0.033961f, 9.318674f, -1.995625f,
 0.541219f, 9.234310f, -1.938382f,
 0.936363f, 9.294000f, -1.394202f,
 0.936363f, 7.861846f, -0.489433f,
 0.429582f, 7.824645f, -0.544260f,
 0.033961f, 7.824645f, -0.544260f,
 0.445001f, 7.918100f, 0.023107f,
 0.782250f, 7.934522f, 0.047311f,
 0.432372f, 7.643104f, 0.221383f,
 0.782250f, 7.680307f, 0.276212f,
 1.200907f, 6.926407f, -1.207054f,
 0.776421f, 7.575646f, -0.375308f,
 0.033961f, 7.579941f, -0.423021f,
 0.033961f, 6.868062f, -1.293058f,
 0.700363f, 4.427652f, -0.016223f,
 0.684600f, 4.696284f, 0.626609f,
 0.033961f, 4.762672f, 0.785455f,
 0.033961f, 4.271428f, -0.390087f,
 0.971581f, 6.695771f, 0.154706f,
 0.997360f, 6.251086f, -0.909420f,
 0.033961f, 6.347647f, -1.117905f,
 0.033961f, 6.875195f, 0.337363f,
 1.813108f, -0.130740f, -0.979217f,
 1.773879f, -0.273405f, 1.349217f,
 0.042077f, -0.307187f, 1.857089f,
 0.027592f, -0.086142f, -1.648450f,
 1.470834f, 6.899071f, -0.968229f,
 1.065917f, 7.478273f, -0.860313f,
 0.919654f, 7.407270f, -0.278833f,
 1.383264f, 6.735578f, -0.404157f,
 2.718416f, 7.651214f, 0.324246f,
 2.576393f, 7.808001f, 0.031807f,
 2.295762f, 7.688980f, 0.033810f,
 2.460297f, 7.505848f, 0.370238f,
 2.186788f, 9.028195f, 1.662712f,
 1.891075f, 9.357267f, 1.057976f,
 1.368830f, 9.064157f, 1.036908f,
 1.701306f, 8.692286f, 1.713347f,
 0.041151f, 2.210101f, 1.360990f,
 1.173609f, 2.220640f, 1.220181f,
 1.196740f, 2.325979f, -0.262606f,
 0.026550f, 2.354202f, -0.647187f,
 -0.868441f, 9.294000f, -1.394202f,
 -0.868441f, 7.861846f, -0.489433f,
 -0.749646f, 7.336438f, -1.561747f,
 -0.723264f, 8.200045f, -1.970593f,
 -0.376369f, 8.471778f, -2.280829f,
 -0.473295f, 9.234310f, -1.938382f,
 -0.303336f, 7.151785f, -1.535908f,
 -0.361660f, 7.824645f, -0.544260f,
 -0.374288f, 8.008572f, -0.273192f,
 -1.204989f, 8.006824f, -0.275767f,
 -0.868441f, 9.407760f, -1.226339f,
 -0.494279f, 9.495840f, -1.246994f,
 -0.714328f, 7.934522f, 0.047311f,
 -0.377078f, 7.918100f, 0.023107f,
 -0.364450f, 7.643104f, 0.221383f,
 -0.714328f, 7.680307f, 0.276212f,
 -0.708500f, 7.575646f, -0.375308f,
 -1.132985f, 6.926407f, -1.207054f,
 -1.842071f, 3.300325f, -0.912389f,
 -2.415628f, 3.634228f, -0.564565f,
 -2.121901f, 3.859858f, -0.093489f,
 -1.477498f, 3.488367f, -0.484816f,
 -0.903658f, 6.695771f, 0.154706f,
 -0.929437f, 6.251086f, -0.909420f,
 -0.616678f, 4.696284f, 0.626609f,
 -0.632440f, 4.427652f, -0.016223f,
 -1.093410f, 2.219214f, 1.233114f,
 -1.138069f, 2.323104f, -0.244887f,
 -1.526931f, 6.943264f, -0.642176f,
 -0.953642f, 6.942061f, -1.069279f,
 -1.392261f, 6.486626f, -0.270827f,
 -0.727606f, 6.487852f, -0.760771f,
 -1.837280f, 5.297266f, -1.471610f,
 -1.561691f, 5.134548f, -1.638483f,
 -1.702994f, 5.385796f, -1.212662f,
 -1.383864f, 5.200072f, -1.406197f,
 -1.694022f, -0.275966f, 1.362319f,
 -1.752724f, -0.132767f, -0.966157f,
 1.709366f, 8.605304f, 0.743846f,
 2.107735f, 8.774259f, 0.741001f,
 2.309343f, 8.551693f, 1.156132f,
 1.942932f, 8.345339f, 1.221421f,
 -1.962409f, 4.332314f, -0.498141f,
 -1.509389f, 4.068671f, -0.772874f,
 -1.761822f, 3.975657f, -1.102613f,
 -2.153034f, 4.206643f, -0.865729f,
 3.065811f, 6.770762f, 4.387351f,
 2.820853f, 7.381663f, 4.797817f,
 0.387701f, 10.883243f, -4.581820f,
 -0.650088f, 12.376813f, -3.385170f,
 0.582050f, 10.458329f, -2.583174f,
 0.337091f, 11.069231f, -2.172709f,
 0.791186f, 8.200045f, -1.970593f,
 0.791186f, 8.200045f, -1.970593f,
 0.936363f, 9.294000f, -1.394202f,
 0.817567f, 7.336438f, -1.561747f,
 0.371258f, 7.151786f, -1.535907f,
 0.791186f, 8.200045f, -1.970593f,
 0.791186f, 8.200045f, -1.970593f,
 0.371258f, 7.151786f, -1.535907f,
 0.371258f, 7.151786f, -1.535907f,
 0.033961f, 9.670357f, -1.292906f,
 0.033961f, 9.670357f, -1.292906f,
 0.562201f, 9.495840f, -1.246994f,
 0.562201f, 9.495840f, -1.246994f,
 0.936363f, 9.294000f, -1.394202f,
 0.936363f, 9.294000f, -1.394202f,
 0.562201f, 9.495840f, -1.246994f,
 0.936363f, 9.407760f, -1.226339f,
 1.272911f, 8.006824f, -0.275767f,
 0.936363f, 9.407760f, -1.226339f,
 0.936363f, 9.407760f, -1.226339f,
 0.429582f, 7.824645f, -0.544260f,
 0.442211f, 8.008572f, -0.273192f,
 0.442211f, 8.008572f, -0.273192f,
 0.033961f, 8.166685f, -0.040167f,
 0.442211f, 8.008572f, -0.273192f,
 0.445001f, 7.918100f, 0.023107f,
 0.445001f, 7.918100f, 0.023107f,
 0.432372f, 7.643104f, 0.221383f,
 0.432372f, 7.643104f, 0.221383f,
 0.432372f, 7.643104f, 0.221383f,
 0.782250f, 7.680307f, 0.276212f,
 1.272911f, 8.006824f, -0.275767f,
 0.782250f, 7.934522f, 0.047311f,
 0.782250f, 7.934522f, 0.047311f,
 0.782250f, 7.680307f, 0.276212f,
 0.429582f, 7.824645f, -0.544260f,
 0.776421f, 7.575646f, -0.375308f,
 0.371258f, 7.151786f, -1.535907f,
 0.371258f, 7.151786f, -1.535907f,
 0.776421f, 7.575646f, -0.375308f,
 1.200907f, 6.926407f, -1.207054f,
 0.033961f, 7.579941f, -0.423021f,
 0.429582f, 7.824645f, -0.544260f,
 0.429582f, 7.824645f, -0.544260f,
 0.033961f, 7.579941f, -0.423021f,
 0.776421f, 7.575646f, -0.375308f,
 0.033961f, 7.102640f, -1.608338f,
 0.371258f, 7.151786f, -1.535907f,
 0.033961f, 6.868062f, -1.293058f,
 0.033961f, 6.868062f, -1.293058f,
 0.371258f, 7.151786f, -1.535907f,
 1.200907f, 6.926407f, -1.207054f,
 0.971581f, 6.695771f, 0.154706f,
 0.684600f, 4.696284f, 0.626609f,
 0.684600f, 4.696284f, 0.626609f,
 1.173609f, 2.220640f, 1.220181f,
 0.700363f, 4.427652f, -0.016223f,
 0.700363f, 4.427652f, -0.016223f,
 1.173609f, 2.220640f, 1.220181f,
 0.033961f, 4.762672f, 0.785455f,
 0.684600f, 4.696284f, 0.626609f,
 0.684600f, 4.696284f, 0.626609f,
 0.033961f, 4.271428f, -0.390087f,
 0.700363f, 4.427652f, -0.016223f,
 0.700363f, 4.427652f, -0.016223f,
 0.776421f, 7.575646f, -0.375308f,
 1.200907f, 6.926407f, -1.207054f,
 1.200907f, 6.926407f, -1.207054f,
 0.971581f, 6.695771f, 0.154706f,
 0.776421f, 7.575646f, -0.375308f,
 0.776421f, 7.575646f, -0.375308f,
 0.997360f, 6.251086f, -0.909420f,
 0.971581f, 6.695771f, 0.154706f,
 0.971581f, 6.695771f, 0.154706f,
 0.919654f, 7.407270f, -0.278833f,
 1.200907f, 6.926407f, -1.207054f,
 0.997360f, 6.251086f, -0.909420f,
 0.997360f, 6.251086f, -0.909420f,
 0.919654f, 7.407270f, -0.278833f,
 2.295762f, 7.688980f, 0.033810f,
 2.295762f, 7.688980f, 0.033810f,
 2.295762f, 7.688980f, 0.033810f,
 1.709366f, 8.605304f, 0.743846f,
 1.709366f, 8.605304f, 0.743846f,
 1.173609f, 2.220640f, 1.220181f,
 1.773879f, -0.273405f, 1.349217f,
 1.773879f, -0.273405f, 1.349217f,
 -0.868441f, 9.294000f, -1.394202f,
 -0.723264f, 8.200045f, -1.970593f,
 -0.723264f, 8.200045f, -1.970593f,
 -0.749646f, 7.336438f, -1.561747f,
 -0.723264f, 8.200045f, -1.970593f,
 -0.303336f, 7.151785f, -1.535908f,
 -0.303336f, 7.151785f, -1.535908f,
 -0.723264f, 8.200045f, -1.970593f,
 -0.303336f, 7.151785f, -1.535908f,
 -0.494279f, 9.495840f, -1.246994f,
 0.033961f, 9.670357f, -1.292906f,
 0.033961f, 9.670357f, -1.292906f,
 -0.868441f, 9.407760f, -1.226339f,
 -0.494279f, 9.495840f, -1.246994f,
 -0.868441f, 9.294000f, -1.394202f,
 -0.868441f, 9.294000f, -1.394202f,
 -0.494279f, 9.495840f, -1.246994f,
 -0.868441f, 9.407760f, -1.226339f,
 -0.868441f, 9.407760f, -1.226339f,
 -1.204989f, 8.006824f, -0.275767f,
 0.033961f, 8.166685f, -0.040167f,
 -0.374288f, 8.008572f, -0.273192f,
 -0.374288f, 8.008572f, -0.273192f,
 -0.361660f, 7.824645f, -0.544260f,
 -0.374288f, 8.008572f, -0.273192f,
 -0.377078f, 7.918100f, 0.023107f,
 -0.377078f, 7.918100f, 0.023107f,
 -0.364450f, 7.643104f, 0.221383f,
 -0.364450f, 7.643104f, 0.221383f,
 -0.364450f, 7.643104f, 0.221383f,
 -0.714328f, 7.680307f, 0.276212f,
 -0.714328f, 7.680307f, 0.276212f,
 -0.714328f, 7.934522f, 0.047311f,
 -0.714328f, 7.934522f, 0.047311f,
 -1.204989f, 8.006824f, -0.275767f,
 -1.132985f, 6.926407f, -1.207054f,
 -0.708500f, 7.575646f, -0.375308f,
 -0.303336f, 7.151785f, -1.535908f,
 -0.303336f, 7.151785f, -1.535908f,
 -0.708500f, 7.575646f, -0.375308f,
 -0.361660f, 7.824645f, -0.544260f,
 -0.708500f, 7.575646f, -0.375308f,
 0.033961f, 7.579941f, -0.423021f,
 -0.361660f, 7.824645f, -0.544260f,
 -0.361660f, 7.824645f, -0.544260f,
 0.033961f, 7.579941f, -0.423021f,
 0.033961f, 7.102640f, -1.608338f,
 0.033961f, 6.868062f, -1.293058f,
 -0.303336f, 7.151785f, -1.535908f,
 -0.303336f, 7.151785f, -1.535908f,
 0.033961f, 6.868062f, -1.293058f,
 -1.132985f, 6.926407f, -1.207054f,
 -0.903658f, 6.695771f, 0.154706f,
 -0.616678f, 4.696284f, 0.626609f,
 -1.093410f, 2.219214f, 1.233114f,
 -0.632440f, 4.427652f, -0.016223f,
 -0.632440f, 4.427652f, -0.016223f,
 -1.093410f, 2.219214f, 1.233114f,
 -0.616678f, 4.696284f, 0.626609f,};

static float VertArrayB[] = new float[]{
 -1.093410f, 2.219214f, 1.233114f,
 0.041151f, 2.210101f, 1.360990f,
 -0.616678f, 4.696284f, 0.626609f,
 -0.616678f, 4.696284f, 0.626609f,
 0.041151f, 2.210101f, 1.360990f,
 0.033961f, 4.762672f, 0.785455f,
 0.033961f, 4.271428f, -0.390087f,
 0.026550f, 2.354202f, -0.647187f,
 -0.632440f, 4.427652f, -0.016223f,
 -0.632440f, 4.427652f, -0.016223f,
 0.026550f, 2.354202f, -0.647187f,
 -1.138069f, 2.323104f, -0.244887f,
 -0.708500f, 7.575646f, -0.375308f,
 -1.132985f, 6.926407f, -1.207054f,
 -1.526931f, 6.943264f, -0.642176f,
 -1.132985f, 6.926407f, -1.207054f,
 -0.953642f, 6.942061f, -1.069279f,
 -1.526931f, 6.943264f, -0.642176f,
 -0.708500f, 7.575646f, -0.375308f,
 -1.526931f, 6.943264f, -0.642176f,
 -0.903658f, 6.695771f, 0.154706f,
 -0.903658f, 6.695771f, 0.154706f,
 -1.526931f, 6.943264f, -0.642176f,
 -1.392261f, 6.486626f, -0.270827f,
 -0.903658f, 6.695771f, 0.154706f,
 -1.392261f, 6.486626f, -0.270827f,
 -0.929437f, 6.251086f, -0.909420f,
 -1.392261f, 6.486626f, -0.270827f,
 -0.727606f, 6.487852f, -0.760771f,
 -0.929437f, 6.251086f, -0.909420f,
 -0.727606f, 6.487852f, -0.760771f,
 -0.953642f, 6.942061f, -1.069279f,
 -0.929437f, 6.251086f, -0.909420f,
 -0.929437f, 6.251086f, -0.909420f,
 -0.953642f, 6.942061f, -1.069279f,
 -1.132985f, 6.926407f, -1.207054f,
 -1.837280f, 5.297266f, -1.471610f,
 -1.702994f, 5.385796f, -1.212662f,
 -1.526931f, 6.943264f, -0.642176f,
 -1.526931f, 6.943264f, -0.642176f,
 -1.702994f, 5.385796f, -1.212662f,
 -1.392261f, 6.486626f, -0.270827f,
 -1.962409f, 4.332314f, -0.498141f,
 -1.702994f, 5.385796f, -1.212662f,
 -2.153034f, 4.206643f, -0.865729f,
 -2.153034f, 4.206643f, -0.865729f,
 -1.702994f, 5.385796f, -1.212662f,
 -1.837280f, 5.297266f, -1.471610f,
 -1.752724f, -0.132767f, -0.966157f,
 -1.694022f, -0.275966f, 1.362319f,
 -1.138069f, 2.323104f, -0.244887f,
 -1.138069f, 2.323104f, -0.244887f,
 -1.694022f, -0.275966f, 1.362319f,
 -1.093410f, 2.219214f, 1.233114f,
 2.309343f, 8.551693f, 1.156132f,
 1.891075f, 9.357267f, 1.057976f,
 2.186788f, 9.028195f, 1.662712f,
 1.942932f, 8.345339f, 1.221421f,
 2.309343f, 8.551693f, 1.156132f,
 1.701306f, 8.692286f, 1.713347f,
 1.701306f, 8.692286f, 1.713347f,
 2.309343f, 8.551693f, 1.156132f,
 2.186788f, 9.028195f, 1.662712f,
 1.709366f, 8.605304f, 0.743846f,
 1.942932f, 8.345339f, 1.221421f,
 1.368830f, 9.064157f, 1.036908f,
 1.368830f, 9.064157f, 1.036908f,
 1.942932f, 8.345339f, 1.221421f,
 1.701306f, 8.692286f, 1.713347f,
 -1.509389f, 4.068671f, -0.772874f,
 -2.121901f, 3.859858f, -0.093489f,
 -1.477498f, 3.488367f, -0.484816f,
 -1.509389f, 4.068671f, -0.772874f,
 -1.477498f, 3.488367f, -0.484816f,
 -1.761822f, 3.975657f, -1.102613f,
 -1.761822f, 3.975657f, -1.102613f,
 -1.477498f, 3.488367f, -0.484816f,
 -1.842071f, 3.300325f, -0.912389f,
 -2.153034f, 4.206643f, -0.865729f,
 -1.761822f, 3.975657f, -1.102613f,
 -2.415628f, 3.634228f, -0.564565f,
 -2.415628f, 3.634228f, -0.564565f,
 -1.761822f, 3.975657f, -1.102613f,
 -1.842071f, 3.300325f, -0.912389f,
 -2.153034f, 4.206643f, -0.865729f,
 -2.415628f, 3.634228f, -0.564565f,
 -1.962409f, 4.332314f, -0.498141f,
 3.065811f, 6.770762f, 4.387351f,
 2.820853f, 7.381663f, 4.797817f,
 0.582050f, 10.458329f, -2.583174f,
 0.582050f, 10.458329f, -2.583174f,
 2.820853f, 7.381663f, 4.797817f,
 0.337091f, 11.069231f, -2.172709f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.900004f, 0.283013f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.900004f, 0.283013f,
 0.824556f, 0.412442f,};

static float[] TextArrayB = new float[]{
 0.230576f, 0.348630f,
 0.340574f, 0.348630f,
 0.277434f, 0.584799f,
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.176724f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958717f, 0.132505f, -0.251606f},
{ 0.826605f, -0.530040f, -0.189161f},
{ 0.904768f, -0.133926f, -0.404300f},
{ 0.857718f, -0.486573f, -0.166031f},
{ 0.363845f, -0.170326f, -0.915754f},
{ 0.549456f, 0.511338f, -0.660781f},
{ 0.485921f, -0.381648f, -0.786273f},
{ 0.520280f, -0.761086f, 0.387372f},
{ 0.517275f, 0.483578f, 0.706101f},
{ 0.414372f, 0.569839f, 0.709633f},
{ 0.188090f, 0.475517f, 0.859364f},
{ 0.238558f, 0.784468f, 0.572452f},
{ 0.000000f, 0.872904f, 0.487892f},
{ 0.000000f, 0.368756f, 0.929526f},
{ 0.000000f, -0.080313f, -0.996770f},
{ 0.000000f, 0.718389f, -0.695642f},
{ 0.000000f, -0.558391f, -0.829578f},
{ 0.453144f, 0.744252f, 0.490662f},
{ -0.760935f, 0.539229f, 0.360846f},
{ 0.383690f, -0.901041f, 0.202256f},
{ -0.216586f, -0.973702f, 0.070672f},
{ 0.000000f, -0.485764f, 0.874090f},
{ 0.365927f, 0.888372f, 0.277297f},
{ 0.392486f, 0.209395f, -0.895605f},
{ 0.000000f, 0.695553f, 0.718475f},
{ -0.000000f, -0.495144f, -0.868811f},
{ 0.600966f, 0.457817f, 0.655167f},
{ 0.125140f, 0.988838f, -0.080867f},
{ -0.579518f, -0.235530f, 0.780182f},
{ -0.939058f, 0.338750f, -0.058468f},
{ 0.000000f, 0.351108f, 0.936335f},
{ 0.722358f, 0.120287f, 0.680977f},
{ 0.704679f, -0.394313f, -0.589868f},
{ -0.000000f, -0.328040f, -0.944664f},
{ 0.750676f, 0.151023f, 0.643178f},
{ 0.901856f, -0.010735f, -0.431904f},
{ 0.000496f, -0.171823f, -0.985128f},
{ -0.000232f, 0.209776f, 0.977750f},
{ 0.716116f, 0.270287f, 0.643524f},
{ 0.834583f, 0.314034f, -0.452607f},
{ 0.005233f, 0.221344f, 0.975182f},
{ -0.007790f, 0.302207f, -0.953210f},
{ -0.014509f, 0.759728f, -0.650080f},
{ 0.719795f, -0.112714f, -0.684975f},
{ -0.018729f, 0.577282f, 0.816330f},
{ 0.553929f, -0.648706f, 0.521866f},
{ 0.659513f, 0.287706f, -0.694455f},
{ 0.971024f, -0.234732f, 0.044868f},
{ -0.824142f, 0.430847f, 0.367642f},
{ -0.142349f, -0.866651f, 0.478177f},
{ 0.476279f, 0.619955f, -0.623550f},
{ 0.947538f, 0.037562f, 0.317427f},
{ -0.828301f, -0.188580f, -0.527593f},
{ -0.436061f, -0.786490f, 0.437360f},
{ 0.003803f, 0.134750f, 0.990872f},
{ 0.808139f, 0.222393f, 0.545392f},
{ 0.812427f, 0.341650f, -0.472481f},
{ -0.004070f, 0.366860f, -0.930267f},
{ -0.958716f, 0.132505f, -0.251606f},
{ -0.904768f, -0.133926f, -0.404301f},
{ -0.826605f, -0.530040f, -0.189160f},
{ -0.857718f, -0.486573f, -0.166031f},
{ -0.549455f, 0.511339f, -0.660781f},
{ -0.363846f, -0.170325f, -0.915754f},
{ -0.485921f, -0.381649f, -0.786273f},
{ -0.520281f, -0.761086f, 0.387370f},
{ -0.238558f, 0.784468f, 0.572452f},
{ -0.414371f, 0.569839f, 0.709634f},
{ -0.188090f, 0.475516f, 0.859364f},
{ -0.517274f, 0.483579f, 0.706101f},
{ -0.453143f, 0.744253f, 0.490662f},
{ -0.383691f, -0.901040f, 0.202258f},
{ 0.760937f, 0.539227f, 0.360846f},
{ 0.216586f, -0.973702f, 0.070672f},
{ -0.484562f, 0.402695f, -0.776554f},
{ -0.476107f, 0.821321f, 0.314252f},
{ -0.074891f, -0.845462f, -0.528759f},
{ 0.712700f, -0.459643f, 0.529894f},
{ -0.863498f, -0.503507f, 0.029189f},
{ -0.184839f, -0.067441f, 0.980452f},
{ -0.693068f, 0.150507f, 0.704986f},
{ -0.714209f, -0.335958f, -0.614034f},
{ -0.903058f, -0.011678f, -0.429359f},
{ -0.750797f, 0.149849f, 0.643311f},
{ -0.841110f, 0.313226f, -0.440934f},
{ -0.706822f, 0.270781f, 0.653514f},
{ -0.820096f, 0.552440f, -0.149173f},
{ -0.139358f, 0.326151f, -0.934989f},
{ -0.391147f, -0.541405f, 0.744234f},
{ 0.899433f, -0.431926f, -0.066781f},
{ 0.048324f, -0.070987f, -0.996306f},
{ -0.727335f, 0.278928f, -0.627043f},
{ -0.247488f, -0.156417f, 0.956182f},
{ 0.930582f, -0.220944f, 0.291891f},
{ -0.920982f, 0.121952f, -0.370028f},
{ 0.027004f, -0.358689f, -0.933066f},
{ -0.040464f, 0.606891f, 0.793754f},
{ 0.944143f, 0.121786f, 0.306205f},
{ -0.804211f, 0.220080f, 0.552095f},
{ -0.815659f, 0.341330f, -0.467113f},
{ -0.906535f, -0.415089f, 0.076780f},
{ -0.882050f, -0.465893f, 0.070228f},
{ -0.825045f, -0.564457f, 0.026245f},
{ -0.810170f, -0.585517f, 0.028183f},
{ -0.900013f, -0.425217f, 0.095746f},
{ -0.900013f, -0.425217f, 0.095746f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 162,
163, 164, 52,
165, 50, 166,
167, 50, 51,
168, 169, 53,
53, 170, 52,
171, 39, 172,
173, 39, 38,
174, 40, 175,
176, 40, 39,
177, 41, 178,
179, 41, 180,
181, 38, 182,
183, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
184, 41, 185,
186, 41, 45,
41, 38, 45,
45, 38, 42,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
187, 45, 188,
189, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
190, 191, 52,
52, 192, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
193, 59, 194,
195, 59, 58,
196, 197, 198,
199, 200, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 201,
202, 203, 59,
59, 204, 12,
205, 206, 207,
208, 209, 59,
54, 55, 210,
211, 55, 212,
66, 69, 67,
67, 69, 68,
213, 214, 17,
17, 215, 216,
63, 66, 62,
62, 66, 67,
217, 218, 61,
61, 219, 220,
61, 221, 55,
55, 222, 223,
224, 225, 55,
55, 226, 227,
228, 229, 230,
231, 232, 233,
234, 235, 236,
237, 238, 17,
239, 240, 241,
242, 243, 244,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 245,
32, 29, 77,
77, 29, 79,
246, 28, 76,
76, 28, 33,
81, 247, 248,
249, 250, 251,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 345  Texture Co-ords: 191  Normals: 106  Texture: attack Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 146 Correct: 82