package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class joannadeathc {

static String TextureName = "joannadeath3.mtl";

static int Vertices = 249;

static int VertTexts = 156;

static int Normals = 96;

static int Faces = 170;

static int FacesB = 0;

static int SmoothGroups = 4;

static float VertArray[] = new float[]{
 0.339459f, 1.058264f, -1.032310f,
 0.916216f, 1.054797f, -1.154774f,
 0.936942f, 0.438051f, -1.068377f,
 0.357778f, 0.441674f, -0.963682f,
 0.297055f, 1.459957f, -1.319355f,
 0.876841f, 1.461563f, -1.421065f,
 0.694106f, -0.398548f, -2.430402f,
 0.114877f, -0.395991f, -2.326628f,
 0.301080f, 1.235765f, -0.249929f,
 1.069899f, 1.288083f, -0.242144f,
 1.215668f, 1.559301f, 0.574270f,
 0.467321f, 1.552245f, 0.677215f,
 0.746310f, 0.135854f, 0.936314f,
 1.250798f, 0.130074f, 0.848200f,
 1.208460f, 0.344032f, 0.607961f,
 0.702018f, 0.378513f, 0.696760f,
 0.817678f, 6.236248f, -0.043364f,
 0.178946f, 4.729067f, 0.859415f,
 0.139043f, 5.295885f, -1.031774f,
 0.154923f, 6.424262f, -0.363642f,
 0.229174f, 5.313564f, 0.636689f,
 1.000326f, 4.752979f, 0.343713f,
 1.197172f, 4.786375f, -0.537001f,
 0.178943f, 3.295421f, -0.536685f,
 0.858152f, 3.224626f, -0.278717f,
 0.884517f, 3.033069f, 0.286527f,
 0.178946f, 2.841184f, 0.522514f,
 0.297915f, 6.185463f, 1.524798f,
 0.897242f, 6.244641f, 1.050462f,
 0.852064f, 5.649867f, 0.432711f,
 0.666715f, 5.604507f, 0.111830f,
 1.477944f, 4.421116f, 0.289992f,
 0.225161f, 7.196129f, 0.512060f,
 0.858395f, 6.781474f, 0.512962f,
 0.674623f, 5.824009f, -0.404623f,
 1.677905f, 4.447775f, -0.119077f,
 1.605291f, 5.168877f, 0.420939f,
 1.791707f, 5.253896f, -0.053767f,
 1.218654f, 3.346489f, -0.127172f,
 1.591832f, 3.302377f, -0.027949f,
 1.766320f, 3.415888f, -0.404504f,
 1.430366f, 3.472358f, -0.544531f,
 0.187534f, 5.427976f, 0.367959f,
 0.146106f, 6.139221f, -0.556565f,
 1.387872f, 1.378710f, -0.524936f,
 1.942140f, 1.756098f, -0.265054f,
 2.122584f, 1.973625f, -0.697383f,
 1.716594f, 1.805202f, -1.143236f,
 0.161521f, 0.373536f, -0.818539f,
 1.609804f, 1.373888f, 0.751507f,
 1.572711f, 0.918136f, -0.417056f,
 0.238100f, 1.233358f, 1.055604f,
 -1.175674f, 5.106183f, 0.471949f,
 -0.959655f, 4.395830f, 0.318727f,
 -1.419704f, 5.071817f, 0.071516f,
 -1.170162f, 4.356267f, -0.050602f,
 -0.364254f, 6.244683f, 1.142164f,
 -0.403612f, 6.781467f, 0.604649f,
 -0.531995f, 3.031067f, 0.293840f,
 -0.499734f, 3.224783f, -0.279771f,
 -0.591863f, 4.798841f, 0.339890f,
 -0.820372f, 4.767611f, -0.522313f,
 -0.349312f, 5.820621f, -0.372579f,
 -0.304203f, 5.607697f, 0.143578f,
 -0.409035f, 5.649935f, 0.524478f,
 -0.443962f, 6.236310f, 0.048289f,
 0.034643f, 4.151925f, 1.509718f,
 0.188607f, 3.359617f, 1.351488f,
 -0.594939f, 3.804329f, 1.460352f,
 -0.442939f, 3.313854f, 1.383189f,
 -0.637564f, 3.571931f, -0.134754f,
 -0.698601f, 3.313854f, -0.369465f,
 -0.984248f, 3.199283f, -0.166694f,
 -0.940796f, 3.421008f, 0.052553f,
 -0.837276f, 1.773296f, 1.094166f,
 -1.268637f, 0.965796f, -0.089182f,
 -0.359882f, 1.005852f, -0.680371f,
 -0.939000f, 1.045436f, -0.618774f,
 -0.956291f, 0.469187f, -0.382502f,
 -0.377455f, 0.421424f, -0.478754f,
 -0.299440f, 1.458561f, -0.812367f,
 -0.876843f, 1.461577f, -0.908469f,
 -0.694109f, -0.398534f, -1.917806f,
 -0.114884f, -0.395980f, -1.814312f,
 -0.072957f, 1.116709f, -0.135404f,
 -0.787406f, 1.285123f, 0.099545f,
 -0.628671f, 1.848489f, 0.745899f,
 0.107206f, 1.764485f, 0.597393f,
 -0.090397f, 0.585524f, 1.442188f,
 -0.592616f, 0.631391f, 1.532591f,
 -0.626943f, 0.739661f, 1.272231f,
 -0.124355f, 0.705785f, 1.162348f,
 0.624585f, 0.938353f, 5.330379f,
 0.061948f, 0.114672f, 4.976627f,
 2.206529f, 2.868128f, -1.585026f,
 1.669212f, 2.039304f, -1.946558f,
 0.702018f, 0.378513f, 0.696760f,
 0.702018f, 0.378513f, 0.696760f,
 0.301080f, 1.235765f, -0.249929f,
 0.339459f, 1.058264f, -1.032310f,
 0.297055f, 1.459957f, -1.319355f,
 0.297055f, 1.459957f, -1.319355f,
 0.339459f, 1.058264f, -1.032310f,
 0.297055f, 1.459957f, -1.319355f,
 0.357778f, 0.441674f, -0.963682f,
 0.357778f, 0.441674f, -0.963682f,
 0.297055f, 1.459957f, -1.319355f,
 0.114877f, -0.395991f, -2.326628f,
 0.357778f, 0.441674f, -0.963682f,
 0.114877f, -0.395991f, -2.326628f,
 0.114877f, -0.395991f, -2.326628f,
 0.936942f, 0.438051f, -1.068377f,
 0.936942f, 0.438051f, -1.068377f,
 0.936942f, 0.438051f, -1.068377f,
 0.936942f, 0.438051f, -1.068377f,
 0.916216f, 1.054797f, -1.154774f,
 0.916216f, 1.054797f, -1.154774f,
 0.702018f, 0.378513f, 0.696760f,
 0.702018f, 0.378513f, 0.696760f,
 0.916216f, 1.054797f, -1.154774f,
 0.339459f, 1.058264f, -1.032310f,
 0.666715f, 5.604507f, 0.111830f,
 0.666715f, 5.604507f, 0.111830f,
 1.000326f, 4.752979f, 0.343713f,
 1.000326f, 4.752979f, 0.343713f,
 0.666715f, 5.604507f, 0.111830f,
 0.666715f, 5.604507f, 0.111830f,
 0.674623f, 5.824009f, -0.404623f,
 0.674623f, 5.824009f, -0.404623f,
 0.674623f, 5.824009f, -0.404623f,
 0.666715f, 5.604507f, 0.111830f,
 0.666715f, 5.604507f, 0.111830f,
 1.000326f, 4.752979f, 0.343713f,
 1.197172f, 4.786375f, -0.537001f,
 1.218654f, 3.346489f, -0.127172f,
 1.218654f, 3.346489f, -0.127172f,
 1.197172f, 4.786375f, -0.537001f,
 1.197172f, 4.786375f, -0.537001f,
 1.000326f, 4.752979f, 0.343713f,
 1.387872f, 1.378710f, -0.524936f,
 1.387872f, 1.378710f, -0.524936f,
 1.218654f, 3.346489f, -0.127172f,
 1.716594f, 1.805202f, -1.143236f,
 1.716594f, 1.805202f, -1.143236f,
 1.218654f, 3.346489f, -0.127172f,
 1.197172f, 4.786375f, -0.537001f,
 1.197172f, 4.786375f, -0.537001f,
 0.674623f, 5.824009f, -0.404623f,
 0.674623f, 5.824009f, -0.404623f,
 1.716594f, 1.805202f, -1.143236f,
 0.161521f, 0.373536f, -0.818539f,
 1.572711f, 0.918136f, -0.417056f,
 0.238100f, 1.233358f, 1.055604f,
 0.238100f, 1.233358f, 1.055604f,
 1.572711f, 0.918136f, -0.417056f,
 1.609804f, 1.373888f, 0.751507f,
 0.297915f, 6.185463f, 1.524798f,
 0.225161f, 7.196129f, 0.512060f,
 0.225161f, 7.196129f, 0.512060f,
 0.178946f, 4.729067f, 0.859415f,
 -0.304203f, 5.607697f, 0.143578f,
 0.178946f, 4.729067f, 0.859415f,
 0.187534f, 5.427976f, 0.367959f,
 -0.304203f, 5.607697f, 0.143578f,
 -0.591863f, 4.798841f, 0.339890f,
 -0.591863f, 4.798841f, 0.339890f,
 0.187534f, 5.427976f, 0.367959f,
 0.229174f, 5.313564f, 0.636689f,
 -0.304203f, 5.607697f, 0.143578f,
 0.229174f, 5.313564f, 0.636689f,
 -0.304203f, 5.607697f, 0.143578f,
 0.146106f, 6.139221f, -0.556565f,
 -0.349312f, 5.820621f, -0.372579f,
 0.154923f, 6.424262f, -0.363642f,
 -0.349312f, 5.820621f, -0.372579f,
 0.154923f, 6.424262f, -0.363642f,
 -0.349312f, 5.820621f, -0.372579f,
 -0.304203f, 5.607697f, 0.143578f,
 -0.304203f, 5.607697f, 0.143578f,
 0.178946f, 2.841184f, 0.522514f,
 0.178946f, 4.729067f, 0.859415f,
 0.178946f, 4.729067f, 0.859415f,
 -0.591863f, 4.798841f, 0.339890f,
 -0.637564f, 3.571931f, -0.134754f,
 -0.820372f, 4.767611f, -0.522313f,
 -0.637564f, 3.571931f, -0.134754f,
 -0.820372f, 4.767611f, -0.522313f,
 -0.820372f, 4.767611f, -0.522313f,
 -0.591863f, 4.798841f, 0.339890f,
 0.034643f, 4.151925f, 1.509718f,
 0.034643f, 4.151925f, 1.509718f,
 0.188607f, 3.359617f, 1.351488f,
 -0.637564f, 3.571931f, -0.134754f,
 0.188607f, 3.359617f, 1.351488f,
 -0.637564f, 3.571931f, -0.134754f,
 -0.820372f, 4.767611f, -0.522313f,
 -0.820372f, 4.767611f, -0.522313f,
 -0.349312f, 5.820621f, -0.372579f,
 0.139043f, 5.295885f, -1.031774f,
 -0.349312f, 5.820621f, -0.372579f,
 0.146106f, 6.139221f, -0.556565f,
 0.139043f, 5.295885f, -1.031774f,
 0.188607f, 3.359617f, 1.351488f,
 0.154923f, 6.424262f, -0.363642f,
 0.225161f, 7.196129f, 0.512060f,
 0.154923f, 6.424262f, -0.363642f,
 0.297915f, 6.185463f, 1.524798f,
 0.229174f, 5.313564f, 0.636689f,
 0.229174f, 5.313564f, 0.636689f,
 0.178943f, 3.295421f, -0.536685f,
 0.139043f, 5.295885f, -1.031774f,
 0.178943f, 3.295421f, -0.536685f,
 0.161521f, 0.373536f, -0.818539f,
 0.178943f, 3.295421f, -0.536685f,
 0.178943f, 3.295421f, -0.536685f,
 0.238100f, 1.233358f, 1.055604f,
 0.178946f, 2.841184f, 0.522514f,
 0.178946f, 2.841184f, 0.522514f,
 0.161521f, 0.373536f, -0.818539f,
 0.238100f, 1.233358f, 1.055604f,
 -1.268637f, 0.965796f, -0.089182f,
 0.238100f, 1.233358f, 1.055604f,
 -0.837276f, 1.773296f, 1.094166f,
 -1.268637f, 0.965796f, -0.089182f,
 -0.124355f, 0.705785f, 1.162348f,
 -0.072957f, 1.116709f, -0.135404f,
 -0.124355f, 0.705785f, 1.162348f,
 -0.359882f, 1.005852f, -0.680371f,
 -0.299440f, 1.458561f, -0.812367f,
 -0.299440f, 1.458561f, -0.812367f,
 -0.359882f, 1.005852f, -0.680371f,
 -0.377455f, 0.421424f, -0.478754f,
 -0.299440f, 1.458561f, -0.812367f,
 -0.377455f, 0.421424f, -0.478754f,
 -0.114884f, -0.395980f, -1.814312f,
 -0.299440f, 1.458561f, -0.812367f,
 -0.377455f, 0.421424f, -0.478754f,
 -0.114884f, -0.395980f, -1.814312f,
 -0.114884f, -0.395980f, -1.814312f,
 -0.956291f, 0.469187f, -0.382502f,
 -0.956291f, 0.469187f, -0.382502f,
 -0.956291f, 0.469187f, -0.382502f,
 -0.939000f, 1.045436f, -0.618774f,
 -0.956291f, 0.469187f, -0.382502f,
 -0.124355f, 0.705785f, 1.162348f,
 -0.939000f, 1.045436f, -0.618774f,
 -0.124355f, 0.705785f, 1.162348f,
 -0.359882f, 1.005852f, -0.680371f,
 -0.939000f, 1.045436f, -0.618774f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.453876f, 0.791903f,
 0.201824f, 0.532079f,
 0.590263f, 0.596995f,
 0.556897f, 0.779659f,
 0.235400f, 0.777966f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.566387f, 0.397259f,
 0.470805f, 0.365178f,
 0.365778f, 0.346308f,
 0.249833f, 0.335338f,
 0.289739f, 0.984705f,
 0.362886f, 0.905310f,
 0.354538f, 0.788048f,
 0.662213f, 0.973243f,
 0.649436f, 0.842323f,
 0.523433f, 0.983917f,
 0.451956f, 0.900429f,
 0.700374f, 0.973112f,
 0.714202f, 0.842324f,
 0.662213f, 0.871337f,
 0.700374f, 0.871169f,
 0.611238f, 0.659338f,
 0.649436f, 0.659338f,
 0.714202f, 0.659338f,
 0.749335f, 0.659338f,
 0.262276f, 0.714547f,
 0.539459f, 0.732725f,
 0.635368f, 0.320085f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.727698f, 0.329948f,
 0.754615f, 0.048462f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.147427f, 0.097935f,
 0.662213f, 0.871337f,
 0.649436f, 0.842323f,
 0.700374f, 0.871169f,
 0.714202f, 0.842324f,
 0.362886f, 0.905310f,
 0.451956f, 0.900429f,
 0.365778f, 0.346308f,
 0.470805f, 0.365178f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.700374f, 0.973112f,
 0.662213f, 0.973243f,
 0.354538f, 0.788048f,
 0.453876f, 0.791903f,
 0.635368f, 0.320085f,
 0.727698f, 0.329948f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.611238f, 0.659338f,
 0.749335f, 0.659338f,
 0.714202f, 0.659338f,
 0.649436f, 0.659338f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.829311f, 0.001810f,
 0.999173f, 0.001810f,
 0.829311f, 0.998093f,
 0.999173f, 0.998093f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.132466f, 0.001616f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.326300f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.806916f, 0.873085f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.749335f, 0.410462f,
 0.747690f, 0.223911f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.737676f, 0.256798f,
 0.289739f, 0.984705f,
 0.523433f, 0.983917f,
 0.523433f, 0.983917f,
 0.201824f, 0.532079f,
 0.353637f, 0.718421f,
 0.201824f, 0.532079f,
 0.262276f, 0.714547f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.262276f, 0.714547f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.539459f, 0.732725f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.249833f, 0.335338f,
 0.201824f, 0.532079f,
 0.201824f, 0.532079f,
 0.806916f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.590263f, 0.596995f,
 0.452577f, 0.721572f,
 0.539459f, 0.732725f,
 0.590263f, 0.596995f,
 0.749335f, 0.410462f,
 0.556897f, 0.779659f,
 0.523433f, 0.983917f,
 0.556897f, 0.779659f,
 0.289739f, 0.984705f,
 0.235400f, 0.777966f,
 0.235400f, 0.777966f,
 0.566387f, 0.397259f,
 0.590263f, 0.596995f,
 0.566387f, 0.397259f,
 0.754615f, 0.048462f,
 0.566387f, 0.397259f,
 0.566387f, 0.397259f,
 0.147427f, 0.097935f,
 0.249833f, 0.335338f,
 0.249833f, 0.335338f,
 0.747690f, 0.223911f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.737676f, 0.256798f,
 0.756142f, 0.248493f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.196341f, 0.621715f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.132466f, 0.001616f,
 0.063514f, 0.126699f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.102748f, 0.326300f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.326300f,
 0.148951f, 0.326300f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.723247f, 0.518863f, -0.455736f},
{ 0.525290f, 0.512501f, -0.679274f},
{ -0.779628f, -0.245041f, -0.576311f},
{ 0.533168f, -0.247434f, -0.809017f},
{ -0.564531f, 0.011874f, 0.825327f},
{ -0.128526f, -0.741449f, 0.658585f},
{ 0.755382f, 0.148993f, 0.638122f},
{ 0.310998f, -0.811334f, 0.494992f},
{ -0.628750f, -0.690016f, -0.358542f},
{ -0.994154f, 0.104482f, 0.027240f},
{ 0.934645f, 0.275474f, -0.224840f},
{ 0.579181f, -0.539775f, -0.610895f},
{ -0.494126f, 0.724715f, 0.480236f},
{ 0.637013f, 0.714556f, 0.289178f},
{ 0.853109f, -0.518530f, -0.057716f},
{ -0.817638f, -0.523402f, 0.239830f},
{ 0.409528f, 0.430144f, 0.804527f},
{ 0.376328f, -0.259498f, 0.889403f},
{ 0.765617f, 0.538084f, -0.352556f},
{ 0.951163f, 0.018463f, -0.308137f},
{ 0.073179f, 0.016128f, 0.997188f},
{ 0.795236f, 0.050130f, 0.604224f},
{ -0.002029f, 0.998858f, -0.047730f},
{ 0.776950f, 0.618499f, -0.117504f},
{ 0.690434f, 0.175429f, 0.701802f},
{ 0.786521f, 0.082252f, -0.612062f},
{ 0.392577f, -0.037754f, 0.918944f},
{ 0.454313f, -0.065564f, -0.888426f},
{ 0.595016f, 0.481442f, -0.643560f},
{ 0.621538f, 0.431815f, 0.653625f},
{ -0.004483f, 0.062817f, 0.998015f},
{ 0.031240f, 0.352216f, 0.935397f},
{ 0.038371f, -0.830813f, 0.555227f},
{ 0.857536f, -0.485256f, 0.170759f},
{ -0.030031f, 0.515287f, -0.856491f},
{ -0.056381f, 0.685627f, -0.725766f},
{ 0.838240f, 0.293267f, -0.459726f},
{ 0.080687f, 0.178962f, 0.980542f},
{ -0.902332f, -0.423100f, 0.082362f},
{ -0.457669f, -0.015451f, -0.888989f},
{ 0.284823f, -0.350257f, 0.892298f},
{ 0.950686f, 0.124698f, -0.283982f},
{ -0.971390f, -0.181114f, 0.153618f},
{ -0.419132f, 0.112180f, -0.900968f},
{ 0.939246f, 0.229150f, -0.255554f},
{ 0.431924f, -0.110023f, 0.895174f},
{ -0.013487f, 0.019127f, -0.999726f},
{ 0.845669f, -0.094485f, 0.525277f},
{ 0.719771f, -0.352533f, -0.598039f},
{ -0.042117f, -0.032415f, -0.998587f},
{ -0.096648f, -0.563727f, -0.820287f},
{ 0.074987f, -0.504463f, 0.860171f},
{ -0.419243f, 0.446196f, 0.790661f},
{ -0.864687f, 0.413054f, -0.285837f},
{ -0.206362f, -0.350131f, 0.913686f},
{ -0.918696f, -0.201036f, -0.339974f},
{ -0.699345f, 0.052814f, 0.712831f},
{ -0.785233f, 0.619200f, -0.000050f},
{ -0.718605f, 0.153189f, 0.678336f},
{ -0.436192f, 0.011040f, 0.899786f},
{ -0.818704f, 0.040608f, -0.572779f},
{ -0.572375f, -0.052511f, -0.818309f},
{ -0.668182f, 0.475359f, -0.572334f},
{ -0.662268f, 0.389582f, 0.640021f},
{ -0.822640f, -0.484444f, 0.297620f},
{ -0.897444f, 0.298282f, -0.324994f},
{ 0.551810f, 0.827506f, -0.103629f},
{ -0.739076f, 0.576408f, 0.348598f},
{ 0.915194f, -0.372999f, -0.152615f},
{ -0.312713f, -0.888980f, 0.334553f},
{ 0.888906f, 0.393408f, -0.234683f},
{ 0.189995f, -0.643418f, -0.741562f},
{ -0.321046f, -0.885545f, -0.335768f},
{ -0.872347f, 0.206089f, 0.443326f},
{ -0.699972f, 0.077178f, 0.709988f},
{ -0.840224f, -0.330825f, -0.429625f},
{ 0.736025f, 0.497888f, -0.458667f},
{ 0.777331f, -0.321093f, -0.540977f},
{ -0.658369f, 0.445895f, -0.606405f},
{ -0.619258f, -0.324568f, -0.714965f},
{ 0.826381f, 0.207285f, 0.523572f},
{ -0.484962f, 0.469370f, 0.737905f},
{ 0.276528f, -0.551565f, 0.786962f},
{ -0.097952f, -0.615802f, 0.781788f},
{ 0.452978f, -0.854938f, -0.252770f},
{ 0.968354f, -0.040603f, -0.246254f},
{ -0.939867f, 0.331159f, 0.083566f},
{ -0.768111f, -0.625526f, -0.136832f},
{ 0.552350f, 0.786552f, 0.276125f},
{ -0.488207f, 0.814269f, 0.314037f},
{ -0.890771f, -0.443852f, 0.097580f},
{ 0.787285f, -0.568969f, 0.237604f},
{ 0.819796f, -0.571975f, 0.027921f},
{ 0.820801f, -0.570484f, 0.028875f},
{ 0.829756f, -0.556864f, 0.037518f},
{ 0.830734f, -0.555339f, 0.038477f}};

static int[] FaceArray = new int[]{
4, 5, 7,
7, 5, 6,
11, 12, 10,
10, 12, 13,
8, 15, 11,
11, 15, 12,
14, 96, 9,
9, 97, 98,
13, 14, 10,
10, 14, 9,
99, 1, 100,
101, 1, 5,
1, 2, 5,
5, 2, 6,
102, 103, 104,
105, 106, 107,
108, 109, 2,
2, 110, 6,
13, 12, 111,
112, 12, 3,
13, 113, 14,
14, 114, 115,
14, 116, 117,
118, 119, 120,
12, 15, 3,
3, 15, 0,
36, 31, 37,
37, 31, 35,
27, 28, 32,
32, 28, 33,
25, 24, 21,
21, 24, 22,
37, 34, 36,
36, 34, 30,
21, 121, 17,
17, 122, 42,
31, 36, 123,
124, 36, 30,
42, 125, 20,
20, 126, 29,
43, 19, 127,
128, 19, 16,
129, 16, 130,
131, 16, 29,
29, 16, 28,
28, 16, 33,
26, 25, 17,
17, 25, 21,
44, 47, 45,
45, 47, 46,
132, 133, 134,
135, 136, 41,
137, 35, 41,
41, 35, 40,
138, 38, 31,
31, 38, 39,
31, 39, 35,
35, 39, 40,
39, 38, 45,
45, 38, 139,
140, 141, 142,
143, 144, 41,
40, 39, 46,
46, 39, 45,
35, 145, 37,
37, 146, 34,
22, 18, 147,
148, 18, 43,
149, 41, 46,
46, 41, 40,
16, 19, 33,
33, 19, 32,
27, 20, 28,
28, 20, 29,
25, 49, 24,
24, 49, 50,
24, 23, 22,
22, 23, 18,
48, 23, 50,
50, 23, 24,
51, 49, 26,
26, 49, 25,
150, 151, 152,
153, 154, 155,
52, 54, 53,
54, 55, 53,
156, 157, 56,
158, 57, 56,
58, 60, 59,
60, 61, 59,
54, 52, 62,
52, 63, 62,
60, 159, 160,
161, 162, 163,
53, 164, 52,
165, 63, 52,
166, 167, 168,
169, 64, 170,
171, 172, 173,
174, 65, 175,
176, 177, 65,
178, 64, 65,
64, 56, 65,
56, 57, 65,
179, 180, 58,
181, 60, 58,
66, 68, 67,
68, 69, 67,
182, 183, 184,
185, 71, 186,
187, 71, 55,
71, 72, 55,
188, 53, 70,
53, 73, 70,
53, 55, 73,
55, 72, 73,
73, 68, 70,
68, 189, 70,
190, 191, 192,
193, 71, 194,
72, 69, 73,
69, 68, 73,
55, 54, 195,
54, 62, 196,
61, 197, 198,
199, 200, 201,
202, 69, 71,
69, 72, 71,
65, 57, 203,
57, 204, 205,
206, 56, 207,
56, 64, 208,
58, 59, 74,
59, 75, 74,
59, 61, 209,
61, 210, 211,
212, 75, 213,
75, 59, 214,
215, 216, 74,
217, 58, 74,
218, 219, 220,
221, 222, 223,
80, 83, 81,
83, 82, 81,
87, 86, 88,
86, 89, 88,
84, 87, 91,
87, 88, 91,
90, 85, 224,
85, 225, 226,
89, 86, 90,
86, 85, 90,
227, 228, 77,
229, 81, 77,
77, 81, 78,
81, 82, 78,
230, 231, 232,
233, 234, 235,
236, 78, 237,
78, 82, 238,
89, 239, 88,
240, 79, 88,
89, 90, 241,
90, 242, 243,
90, 244, 245,
246, 247, 248,
88, 79, 91,
79, 76, 91,
92, 93, 94,
94, 93, 95, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 249  Texture Co-ords: 156  Normals: 96  Texture: joannadeath3.mtl Faces: 170 Smooth Groups: 4 sucess: 80 Doubles: 90 Redos needed: 153 Correct: 117