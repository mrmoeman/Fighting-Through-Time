package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phablockc {

static String TextureName = "block";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.616230f, 0.268093f,
 0.936363f, 9.299319f, 0.450892f,
 0.791186f, 8.860939f, -0.898298f,
 0.817567f, 7.938100f, -1.145966f,
 0.562201f, 9.379814f, 0.492188f,
 0.444292f, 9.268899f, -0.958749f,
 0.371258f, 7.780657f, -1.245845f,
 0.442211f, 7.615894f, 0.271186f,
 0.033961f, 7.585488f, 0.551143f,
 0.033961f, 9.542531f, 0.570208f,
 0.033961f, 9.433667f, -0.940854f,
 0.033961f, 7.790108f, -1.332863f,
 0.033961f, 9.729578f, -0.193015f,
 0.541219f, 9.628222f, -0.204023f,
 0.936363f, 9.321329f, 0.249311f,
 0.936363f, 7.644109f, 0.011394f,
 0.429582f, 7.651264f, -0.054476f,
 0.033961f, 7.651264f, -0.054476f,
 0.445001f, 7.355085f, 0.438391f,
 0.782250f, 7.351927f, 0.467469f,
 0.432372f, 7.017138f, 0.411412f,
 0.782250f, 7.009984f, 0.477284f,
 1.200907f, 7.395966f, -1.141191f,
 0.776421f, 7.352115f, -0.086966f,
 0.033961f, 7.386284f, -0.120544f,
 0.033961f, 7.407196f, -1.244509f,
 0.700363f, 4.394507f, -0.399952f,
 0.684600f, 4.515818f, 0.286110f,
 0.033961f, 4.545803f, 0.455640f,
 0.033961f, 4.323963f, -0.798955f,
 0.971581f, 6.570115f, 0.263608f,
 0.997360f, 6.369301f, -0.872077f,
 0.033961f, 6.509181f, -1.054350f,
 0.033961f, 6.705175f, 0.481129f,
 1.813648f, -0.156538f, -0.930215f,
 1.773938f, -0.233747f, 1.434066f,
 0.041834f, -0.258665f, 1.921932f,
 0.028144f, -0.107503f, -1.625217f,
 1.484711f, 7.105992f, -0.530649f,
 0.949685f, 7.358336f, -0.129217f,
 0.707427f, 6.843545f, 0.072912f,
 1.322230f, 6.551346f, -0.394473f,
 2.199633f, 6.441672f, 1.079564f,
 1.941254f, 6.692633f, 1.102630f,
 1.699244f, 6.534472f, 1.005985f,
 1.997917f, 6.245090f, 0.976909f,
 2.013283f, 5.682782f, 2.912474f,
 1.476466f, 6.202923f, 2.964636f,
 1.026629f, 5.900218f, 2.709461f,
 1.629169f, 5.317535f, 2.647630f,
 0.042681f, 2.279465f, 1.350433f,
 1.175245f, 2.266269f, 1.213618f,
 1.199267f, 2.148802f, -0.235695f,
 0.029335f, 2.129236f, -0.613966f,
 -0.868441f, 9.321329f, 0.249311f,
 -0.868441f, 7.644109f, 0.011394f,
 -0.749646f, 7.938100f, -1.145966f,
 -0.723264f, 8.860939f, -0.898298f,
 -0.376369f, 9.268899f, -0.958749f,
 -0.473295f, 9.628222f, -0.204023f,
 -0.303336f, 7.780657f, -1.245846f,
 -0.361660f, 7.651264f, -0.054476f,
 -0.374288f, 7.615894f, 0.271187f,
 -1.204989f, 7.616230f, 0.268093f,
 -0.868441f, 9.299319f, 0.450892f,
 -0.494279f, 9.379814f, 0.492188f,
 -0.714328f, 7.351927f, 0.467469f,
 -0.377078f, 7.355085f, 0.438391f,
 -0.364450f, 7.017138f, 0.411412f,
 -0.714328f, 7.009984f, 0.477284f,
 -0.708500f, 7.352115f, -0.086966f,
 -1.132985f, 7.395966f, -1.141191f,
 0.382131f, 6.192306f, 2.931561f,
 -0.077134f, 6.778861f, 3.011996f,
 0.202125f, 7.167539f, 2.651386f,
 0.715864f, 6.508927f, 2.558111f,
 -0.903658f, 6.570115f, 0.263608f,
 -0.929437f, 6.369301f, -0.872077f,
 -0.616678f, 4.515818f, 0.286110f,
 -0.632440f, 4.394507f, -0.399952f,
 -1.091806f, 2.266473f, 1.225650f,
 -1.135539f, 2.147893f, -0.218965f,
 -1.436813f, 7.068515f, -0.207446f,
 -1.166584f, 6.485272f, -0.520308f,
 -0.938930f, 7.306269f, 0.037787f,
 -0.625423f, 6.635351f, -0.327444f,
 -0.953129f, 6.164852f, 1.345102f,
 -0.731084f, 5.882696f, 1.308264f,
 -0.799556f, 6.378792f, 1.191580f,
 -0.544055f, 6.052442f, 1.146776f,
 -1.693995f, -0.235991f, 1.442527f,
 -1.752217f, -0.155156f, -0.921470f,
 1.295028f, 6.089394f, 2.157582f,
 1.638573f, 6.313911f, 2.294773f,
 2.005355f, 5.957660f, 2.262030f,
 1.719010f, 5.678604f, 2.116306f,
 -0.110141f, 6.860485f, 2.181701f,
 0.252554f, 6.397214f, 2.118099f,
 -0.012942f, 6.156252f, 2.347338f,
 -0.328145f, 6.556787f, 2.399632f,
 6.203943f, 3.638141f, 1.777220f,
 6.237688f, 3.614199f, 2.551801f,
 -2.846722f, 8.392247f, 1.655911f,
 -2.911247f, 7.942727f, 3.785111f,
 -1.179897f, 7.331971f, 2.213060f,
 -1.146153f, 7.308030f, 2.987641f,
 0.791186f, 8.860939f, -0.898298f,
 0.791186f, 8.860939f, -0.898298f,
 0.936363f, 9.321329f, 0.249311f,
 0.817567f, 7.938100f, -1.145966f,
 0.371258f, 7.780657f, -1.245845f,
 0.791186f, 8.860939f, -0.898298f,
 0.791186f, 8.860939f, -0.898298f,
 0.371258f, 7.780657f, -1.245845f,
 0.371258f, 7.780657f, -1.245845f,
 0.033961f, 9.542531f, 0.570208f,
 0.033961f, 9.542531f, 0.570208f,
 0.562201f, 9.379814f, 0.492188f,
 0.562201f, 9.379814f, 0.492188f,
 0.936363f, 9.321329f, 0.249311f,
 0.936363f, 9.321329f, 0.249311f,
 0.562201f, 9.379814f, 0.492188f,
 0.936363f, 9.299319f, 0.450892f,
 1.272911f, 7.616230f, 0.268093f,
 0.936363f, 9.299319f, 0.450892f,
 0.936363f, 9.299319f, 0.450892f,
 0.429582f, 7.651264f, -0.054476f,
 0.442211f, 7.615894f, 0.271186f,
 0.442211f, 7.615894f, 0.271186f,
 0.033961f, 7.585488f, 0.551143f,
 0.442211f, 7.615894f, 0.271186f,
 0.445001f, 7.355085f, 0.438391f,
 0.445001f, 7.355085f, 0.438391f,
 0.432372f, 7.017138f, 0.411412f,
 0.432372f, 7.017138f, 0.411412f,
 0.432372f, 7.017138f, 0.411412f,
 0.782250f, 7.009984f, 0.477284f,
 1.272911f, 7.616230f, 0.268093f,
 0.782250f, 7.351927f, 0.467469f,
 0.782250f, 7.351927f, 0.467469f,
 0.782250f, 7.009984f, 0.477284f,
 0.429582f, 7.651264f, -0.054476f,
 0.776421f, 7.352115f, -0.086966f,
 0.371258f, 7.780657f, -1.245845f,
 0.371258f, 7.780657f, -1.245845f,
 0.776421f, 7.352115f, -0.086966f,
 1.200907f, 7.395966f, -1.141191f,
 0.033961f, 7.386284f, -0.120544f,
 0.429582f, 7.651264f, -0.054476f,
 0.429582f, 7.651264f, -0.054476f,
 0.033961f, 7.386284f, -0.120544f,
 0.776421f, 7.352115f, -0.086966f,
 0.033961f, 7.790108f, -1.332863f,
 0.371258f, 7.780657f, -1.245845f,
 0.033961f, 7.407196f, -1.244509f,
 0.033961f, 7.407196f, -1.244509f,
 0.371258f, 7.780657f, -1.245845f,
 1.200907f, 7.395966f, -1.141191f,
 0.971581f, 6.570115f, 0.263608f,
 0.684600f, 4.515818f, 0.286110f,
 0.700363f, 4.394507f, -0.399952f,
 0.684600f, 4.515818f, 0.286110f,
 0.684600f, 4.515818f, 0.286110f,
 1.175245f, 2.266269f, 1.213618f,
 0.033961f, 4.545803f, 0.455640f,
 0.684600f, 4.515818f, 0.286110f,
 0.684600f, 4.515818f, 0.286110f,
 0.033961f, 4.323963f, -0.798955f,
 0.700363f, 4.394507f, -0.399952f,
 0.700363f, 4.394507f, -0.399952f,
 0.776421f, 7.352115f, -0.086966f,
 1.200907f, 7.395966f, -1.141191f,
 1.200907f, 7.395966f, -1.141191f,
 0.971581f, 6.570115f, 0.263608f,
 0.776421f, 7.352115f, -0.086966f,
 0.776421f, 7.352115f, -0.086966f,
 0.997360f, 6.369301f, -0.872077f,
 0.971581f, 6.570115f, 0.263608f,
 0.971581f, 6.570115f, 0.263608f,
 0.707427f, 6.843545f, 0.072912f,
 1.200907f, 7.395966f, -1.141191f,
 0.997360f, 6.369301f, -0.872077f,
 0.997360f, 6.369301f, -0.872077f,
 0.707427f, 6.843545f, 0.072912f,
 1.699244f, 6.534472f, 1.005985f,
 1.699244f, 6.534472f, 1.005985f,
 1.699244f, 6.534472f, 1.005985f,
 1.295028f, 6.089394f, 2.157582f,
 1.295028f, 6.089394f, 2.157582f,
 1.175245f, 2.266269f, 1.213618f,
 1.773938f, -0.233747f, 1.434066f,
 1.773938f, -0.233747f, 1.434066f,
 -0.868441f, 9.321329f, 0.249311f,
 -0.723264f, 8.860939f, -0.898298f,
 -0.723264f, 8.860939f, -0.898298f,
 -0.749646f, 7.938100f, -1.145966f,
 -0.723264f, 8.860939f, -0.898298f,
 -0.303336f, 7.780657f, -1.245846f,
 -0.303336f, 7.780657f, -1.245846f,
 -0.723264f, 8.860939f, -0.898298f,
 -0.303336f, 7.780657f, -1.245846f,
 -0.494279f, 9.379814f, 0.492188f,
 0.033961f, 9.542531f, 0.570208f,
 0.033961f, 9.542531f, 0.570208f,
 -0.868441f, 9.299319f, 0.450892f,
 -0.494279f, 9.379814f, 0.492188f,
 -0.868441f, 9.321329f, 0.249311f,
 -0.868441f, 9.321329f, 0.249311f,
 -0.494279f, 9.379814f, 0.492188f,
 -0.868441f, 9.299319f, 0.450892f,
 -0.868441f, 9.299319f, 0.450892f,
 -1.204989f, 7.616230f, 0.268093f,
 0.033961f, 7.585488f, 0.551143f,
 -0.374288f, 7.615894f, 0.271187f,
 -0.374288f, 7.615894f, 0.271187f,
 -0.361660f, 7.651264f, -0.054476f,
 -0.374288f, 7.615894f, 0.271187f,
 -0.377078f, 7.355085f, 0.438391f,
 -0.377078f, 7.355085f, 0.438391f,
 -0.364450f, 7.017138f, 0.411412f,
 -0.364450f, 7.017138f, 0.411412f,
 -0.364450f, 7.017138f, 0.411412f,
 -0.714328f, 7.009984f, 0.477284f,
 -0.714328f, 7.009984f, 0.477284f,
 -0.714328f, 7.351927f, 0.467469f,
 -0.714328f, 7.351927f, 0.467469f,
 -1.204989f, 7.616230f, 0.268093f,
 -1.132985f, 7.395966f, -1.141191f,
 -0.708500f, 7.352115f, -0.086966f,
 -0.303336f, 7.780657f, -1.245846f,
 -0.303336f, 7.780657f, -1.245846f,
 -0.708500f, 7.352115f, -0.086966f,
 -0.361660f, 7.651264f, -0.054476f,
 -0.708500f, 7.352115f, -0.086966f,
 0.033961f, 7.386284f, -0.120544f,
 -0.361660f, 7.651264f, -0.054476f,
 -0.361660f, 7.651264f, -0.054476f,
 0.033961f, 7.386284f, -0.120544f,
 0.033961f, 7.790108f, -1.332863f,
 0.033961f, 7.407196f, -1.244509f,
 -0.303336f, 7.780657f, -1.245846f,
 -0.303336f, 7.780657f, -1.245846f,
 0.033961f, 7.407196f, -1.244509f,
 -1.132985f, 7.395966f, -1.141191f,
 -0.903658f, 6.570115f, 0.263608f,
 -0.616678f, 4.515818f, 0.286110f,
 -0.632440f, 4.394507f, -0.399952f,
 -0.616678f, 4.515818f, 0.286110f,
 -0.616678f, 4.515818f, 0.286110f,
 -1.091806f, 2.266473f, 1.225650f,
 -0.616678f, 4.515818f, 0.286110f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.515818f, 0.286110f,
 0.042681f, 2.279465f, 1.350433f,
 0.033961f, 4.545803f, 0.455640f,
 0.033961f, 4.323963f, -0.798955f,
 0.029335f, 2.129236f, -0.613966f,
 -0.632440f, 4.394507f, -0.399952f,
 -0.632440f, 4.394507f, -0.399952f,
 0.029335f, 2.129236f, -0.613966f,
 -1.135539f, 2.147893f, -0.218965f,
 -1.166584f, 6.485272f, -0.520308f,
 -1.436813f, 7.068515f, -0.207446f,
 -1.132985f, 7.395966f, -1.141191f,
 -1.132985f, 7.395966f, -1.141191f,
 -1.436813f, 7.068515f, -0.207446f,
 -0.708500f, 7.352115f, -0.086966f,
 -1.436813f, 7.068515f, -0.207446f,
 -0.938930f, 7.306269f, 0.037787f,
 -0.708500f, 7.352115f, -0.086966f,
 -0.708500f, 7.352115f, -0.086966f,
 -0.938930f, 7.306269f, 0.037787f,
 -0.903658f, 6.570115f, 0.263608f,
 -0.938930f, 7.306269f, 0.037787f,
 -0.625423f, 6.635351f, -0.327444f,
 -0.903658f, 6.570115f, 0.263608f,
 -0.903658f, 6.570115f, 0.263608f,
 -0.625423f, 6.635351f, -0.327444f,
 -0.929437f, 6.369301f, -0.872077f,
 -0.625423f, 6.635351f, -0.327444f,
 -1.166584f, 6.485272f, -0.520308f,
 -0.929437f, 6.369301f, -0.872077f,
 -0.929437f, 6.369301f, -0.872077f,
 -1.166584f, 6.485272f, -0.520308f,
 -1.132985f, 7.395966f, -1.141191f,
 -0.953129f, 6.164852f, 1.345102f,
 -0.799556f, 6.378792f, 1.191580f,
 -1.436813f, 7.068515f, -0.207446f,
 -1.436813f, 7.068515f, -0.207446f,
 -0.799556f, 6.378792f, 1.191580f,
 -0.938930f, 7.306269f, 0.037787f,
 -0.110141f, 6.860485f, 2.181701f,
 -0.799556f, 6.378792f, 1.191580f,
 -0.328145f, 6.556787f, 2.399632f,
 -0.328145f, 6.556787f, 2.399632f,
 -0.799556f, 6.378792f, 1.191580f,
 -0.953129f, 6.164852f, 1.345102f,
 -1.752217f, -0.155156f, -0.921470f,
 -1.693995f, -0.235991f, 1.442527f,
 -1.135539f, 2.147893f, -0.218965f,
 -1.135539f, 2.147893f, -0.218965f,
 -1.693995f, -0.235991f, 1.442527f,
 -1.091806f, 2.266473f, 1.225650f,
 2.005355f, 5.957660f, 2.262030f,
 1.476466f, 6.202923f, 2.964636f,
 2.013283f, 5.682782f, 2.912474f,
 1.719010f, 5.678604f, 2.116306f,
 2.005355f, 5.957660f, 2.262030f,
 1.629169f, 5.317535f, 2.647630f,
 1.629169f, 5.317535f, 2.647630f,
 2.005355f, 5.957660f, 2.262030f,
 2.013283f, 5.682782f, 2.912474f,
 1.295028f, 6.089394f, 2.157582f,
 1.719010f, 5.678604f, 2.116306f,
 1.026629f, 5.900218f, 2.709461f,
 1.026629f, 5.900218f, 2.709461f,
 1.719010f, 5.678604f, 2.116306f,
 1.629169f, 5.317535f, 2.647630f,
 0.252554f, 6.397214f, 2.118099f,
 0.202125f, 7.167539f, 2.651386f,
 0.715864f, 6.508927f, 2.558111f,
 0.252554f, 6.397214f, 2.118099f,
 0.715864f, 6.508927f, 2.558111f,
 -0.012942f, 6.156252f, 2.347338f,
 -0.012942f, 6.156252f, 2.347338f,
 0.715864f, 6.508927f, 2.558111f,
 0.382131f, 6.192306f, 2.931561f,
 -0.328145f, 6.556787f, 2.399632f,
 -0.012942f, 6.156252f, 2.347338f,
 -0.077134f, 6.778861f, 3.011996f,
 -0.077134f, 6.778861f, 3.011996f,
 -0.012942f, 6.156252f, 2.347338f,
 0.382131f, 6.192306f, 2.931561f,
 -0.328145f, 6.556787f, 2.399632f,
 -0.077134f, 6.778861f, 3.011996f,
 -0.110141f, 6.860485f, 2.181701f,
 6.203943f, 3.638141f, 1.777220f,
 6.237688f, 3.614199f, 2.551801f,
 -1.179897f, 7.331971f, 2.213060f,
 -1.179897f, 7.331971f, 2.213060f,
 6.237688f, 3.614199f, 2.551801f,
 -1.146153f, 7.308030f, 2.987641f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.263898f, -0.105929f},
{ 0.826605f, -0.281417f, -0.487369f},
{ 0.904768f, 0.159745f, -0.394812f},
{ 0.857718f, -0.263271f, -0.441597f},
{ 0.363845f, 0.463195f, -0.808126f},
{ 0.549456f, 0.817538f, -0.172422f},
{ 0.485921f, 0.218317f, -0.846297f},
{ 0.520280f, -0.830810f, -0.197643f},
{ 0.517276f, -0.088728f, 0.851207f},
{ 0.414372f, -0.025282f, 0.909756f},
{ 0.188090f, -0.194115f, 0.962778f},
{ 0.238558f, 0.227101f, 0.944201f},
{ -0.000000f, 0.349249f, 0.937030f},
{ 0.000000f, -0.320904f, 0.947112f},
{ -0.000000f, 0.584249f, -0.811574f},
{ 0.000000f, 0.997891f, -0.064914f},
{ 0.000001f, 0.111675f, -0.993745f},
{ 0.453144f, 0.249417f, 0.855834f},
{ -0.760935f, 0.177246f, 0.624148f},
{ 0.383691f, -0.817589f, -0.429337f},
{ -0.216586f, -0.787752f, -0.576660f},
{ -0.000000f, -0.936176f, 0.351531f},
{ 0.348192f, 0.750032f, 0.562330f},
{ 0.572580f, 0.350200f, -0.741291f},
{ 0.000000f, 0.530765f, 0.847519f},
{ 0.000000f, -0.216030f, -0.976387f},
{ 0.731386f, -0.126122f, 0.670200f},
{ -0.046247f, 0.514896f, 0.856004f},
{ -0.218419f, -0.965945f, 0.138723f},
{ -0.932041f, -0.177440f, 0.315936f},
{ 0.000000f, 0.153419f, 0.988161f},
{ 0.743889f, 0.021604f, 0.667954f},
{ 0.672916f, -0.251693f, -0.695582f},
{ -0.000000f, -0.147297f, -0.989092f},
{ 0.820681f, 0.165518f, 0.546888f},
{ 0.828929f, -0.065285f, -0.555531f},
{ 0.000330f, -0.165035f, -0.986288f},
{ -0.000288f, 0.180471f, 0.983580f},
{ 0.843155f, 0.283134f, -0.457083f},
{ 0.728677f, 0.316008f, 0.607592f},
{ 0.004947f, 0.303655f, 0.952769f},
{ -0.007121f, 0.232058f, -0.972676f},
{ 0.188816f, 0.921205f, 0.340191f},
{ 0.882419f, 0.399574f, -0.248351f},
{ -0.668303f, -0.368511f, 0.646198f},
{ 0.479794f, -0.844278f, -0.238731f},
{ 0.333626f, 0.904607f, 0.265291f},
{ 0.985698f, 0.156868f, -0.061573f},
{ -0.925995f, -0.265173f, 0.268732f},
{ 0.009921f, -0.921953f, -0.387176f},
{ 0.128966f, 0.951496f, 0.279325f},
{ 0.983916f, 0.118027f, 0.134089f},
{ -0.930407f, 0.041289f, -0.364195f},
{ -0.137478f, -0.848857f, -0.510433f},
{ 0.002521f, 0.165743f, 0.986166f},
{ 0.793424f, 0.247162f, 0.556227f},
{ 0.805543f, 0.357125f, -0.472823f},
{ -0.002812f, 0.387058f, -0.922051f},
{ -0.958716f, 0.263899f, -0.105929f},
{ -0.904768f, 0.159746f, -0.394812f},
{ -0.826605f, -0.281417f, -0.487368f},
{ -0.857718f, -0.263271f, -0.441597f},
{ -0.549455f, 0.817539f, -0.172422f},
{ -0.363846f, 0.463195f, -0.808125f},
{ -0.485921f, 0.218317f, -0.846297f},
{ -0.520280f, -0.830810f, -0.197646f},
{ -0.238558f, 0.227102f, 0.944201f},
{ -0.414372f, -0.025283f, 0.909756f},
{ -0.188090f, -0.194116f, 0.962778f},
{ -0.517275f, -0.088728f, 0.851208f},
{ -0.453143f, 0.249418f, 0.855834f},
{ -0.383691f, -0.817590f, -0.429335f},
{ 0.760937f, 0.177245f, 0.624147f},
{ 0.216586f, -0.787752f, -0.576660f},
{ -0.589171f, 0.433223f, -0.682053f},
{ -0.336793f, 0.796082f, 0.502816f},
{ 0.200459f, -0.663500f, 0.720821f},
{ 0.987804f, 0.138780f, -0.070592f},
{ -0.333349f, 0.187326f, 0.924006f},
{ 0.303382f, 0.939433f, 0.159453f},
{ -0.786118f, 0.013186f, 0.617935f},
{ -0.679686f, -0.228515f, -0.696999f},
{ -0.829437f, -0.064958f, -0.554811f},
{ -0.819468f, 0.165208f, 0.548797f},
{ -0.849006f, 0.282818f, -0.446322f},
{ -0.719929f, 0.316298f, 0.617784f},
{ -0.672323f, -0.702112f, -0.234566f},
{ -0.979538f, 0.156874f, 0.126080f},
{ 0.168469f, 0.820662f, 0.546014f},
{ 0.841937f, -0.335837f, -0.422323f},
{ -0.309633f, -0.947972f, 0.074000f},
{ -0.924368f, -0.253660f, 0.284959f},
{ 0.272267f, 0.940714f, 0.202304f},
{ 0.910224f, -0.091578f, -0.403863f},
{ -0.885627f, -0.006541f, 0.464352f},
{ -0.161338f, -0.947895f, 0.274708f},
{ -0.043261f, 0.885348f, -0.462912f},
{ 0.740807f, -0.000158f, -0.671718f},
{ -0.789989f, 0.245417f, 0.561861f},
{ -0.807553f, 0.358980f, -0.467965f},
{ -0.467720f, -0.883850f, -0.006943f},
{ -0.447599f, -0.892262f, -0.059363f},
{ -0.425242f, -0.887152f, -0.179250f},
{ -0.410382f, -0.889653f, -0.200262f},
{ -0.447768f, -0.894113f, -0.008129f},
{ -0.447768f, -0.894113f, -0.008129f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: block Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86