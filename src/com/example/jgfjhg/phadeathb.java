package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phadeathb {

static String TextureName = "defeat";

static int Vertices = 345;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 31;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 8.311706f, -2.186581f,
 0.936363f, 9.945208f, -2.631417f,
 0.791186f, 9.044151f, -3.727130f,
 0.817567f, 8.094627f, -3.620471f,
 0.562201f, 10.035226f, -2.622388f,
 0.444292f, 9.401814f, -3.932468f,
 0.371258f, 7.911576f, -3.655915f,
 0.442211f, 8.312523f, -2.183579f,
 0.033961f, 8.386515f, -1.911870f,
 0.033961f, 10.215199f, -2.609219f,
 0.033961f, 9.561727f, -3.976016f,
 0.033961f, 7.888577f, -3.740369f,
 0.033961f, 10.110434f, -3.388013f,
 0.541219f, 10.012064f, -3.361225f,
 0.936363f, 9.892038f, -2.827101f,
 0.936363f, 8.243860f, -2.435717f,
 0.429582f, 8.226451f, -2.499647f,
 0.033961f, 8.226452f, -2.499646f,
 0.445001f, 8.130845f, -1.932637f,
 0.782250f, 8.138530f, -1.904416f,
 0.432372f, 7.806408f, -1.834267f,
 0.782250f, 7.823818f, -1.770335f,
 1.200907f, 7.591726f, -3.417932f,
 0.776421f, 7.936117f, -2.420583f,
 0.033961f, 7.955654f, -2.464324f,
 0.033961f, 7.564427f, -3.518210f,
 0.700363f, 4.614520f, -2.879291f,
 0.684600f, 4.870594f, -2.231354f,
 0.033961f, 4.933879f, -2.071247f,
 0.033961f, 4.465599f, -3.256124f,
 0.971581f, 7.024591f, -2.295589f,
 0.997360f, 6.600693f, -3.368165f,
 0.033961f, 6.701292f, -3.574732f,
 0.033961f, 7.200427f, -2.109476f,
 1.813274f, 0.357400f, -0.154307f,
 1.773271f, 1.679101f, 1.684023f,
 0.041372f, 1.977428f, 2.090250f,
 0.028001f, -0.007980f, -0.688686f,
 1.518619f, 7.328608f, -2.877087f,
 1.196454f, 7.938980f, -2.690715f,
 0.842170f, 7.747131f, -2.241015f,
 1.210350f, 7.040923f, -2.459016f,
 2.281440f, 7.369541f, -1.161702f,
 2.124538f, 7.677229f, -1.266497f,
 1.830181f, 7.599745f, -1.249941f,
 2.011170f, 7.243459f, -1.131214f,
 2.335220f, 7.738527f, 0.795632f,
 2.009903f, 8.378865f, 0.582145f,
 1.441459f, 8.191256f, 0.554368f,
 1.806135f, 7.471816f, 0.790623f,
 0.039817f, 3.425984f, -0.490227f,
 1.172341f, 3.322718f, -0.586407f,
 1.196214f, 2.302660f, -1.522810f,
 0.026198f, 2.026401f, -1.792251f,
 -0.868441f, 9.892038f, -2.827101f,
 -0.868441f, 8.243860f, -2.435717f,
 -0.749646f, 8.094627f, -3.620471f,
 -0.723264f, 9.044151f, -3.727130f,
 -0.376369f, 9.401814f, -3.932468f,
 -0.473295f, 10.012064f, -3.361225f,
 -0.303336f, 7.911576f, -3.655915f,
 -0.361660f, 8.226451f, -2.499647f,
 -0.374288f, 8.312523f, -2.183579f,
 -1.204989f, 8.311706f, -2.186581f,
 -0.868441f, 9.945208f, -2.631417f,
 -0.494279f, 10.035226f, -2.622388f,
 -0.714328f, 8.138530f, -1.904416f,
 -0.377078f, 8.130845f, -1.932637f,
 -0.364450f, 7.806408f, -1.834267f,
 -0.714328f, 7.823818f, -1.770335f,
 -0.708500f, 7.936117f, -2.420583f,
 -1.132985f, 7.591726f, -3.417933f,
 -2.402845f, 6.486248f, 0.842970f,
 -2.367562f, 7.234679f, 0.836052f,
 -1.772546f, 7.300881f, 0.810175f,
 -1.811522f, 6.461322f, 0.814559f,
 -0.903658f, 7.024591f, -2.295589f,
 -0.929437f, 6.600693f, -3.368165f,
 -0.616678f, 4.870594f, -2.231354f,
 -0.632440f, 4.614520f, -2.879291f,
 -1.094669f, 3.336998f, -0.559077f,
 -1.138605f, 2.309340f, -1.514593f,
 -1.373810f, 7.724939f, -2.638616f,
 -1.388688f, 7.036996f, -2.832504f,
 -1.006764f, 7.699599f, -2.159879f,
 -1.019684f, 6.905618f, -2.386240f,
 -2.238905f, 7.087586f, -1.134917f,
 -2.256336f, 6.727114f, -1.129520f,
 -1.937877f, 7.130524f, -1.113406f,
 -1.957493f, 6.714118f, -1.109611f,
 -1.694625f, 1.687225f, 1.694938f,
 -1.752556f, 0.366950f, -0.144768f,
 1.609006f, 7.967342f, -0.023722f,
 2.026859f, 8.077336f, -0.047225f,
 2.249590f, 7.640556f, 0.101538f,
 1.865930f, 7.461577f, 0.144816f,
 -1.851082f, 7.199265f, 0.180967f,
 -1.878929f, 6.608157f, 0.186353f,
 -2.303149f, 6.626606f, 0.158092f,
 -2.278404f, 7.138313f, 0.150430f,
 2.667583f, 2.110394f, 3.341559f,
 2.282885f, 2.642456f, 3.754602f,
 3.452000f, 8.110544f, -4.899417f,
 2.032300f, 9.403416f, -3.873428f,
 2.898753f, 7.281962f, -3.104904f,
 2.514056f, 7.814025f, -2.691861f,
 0.791186f, 9.044151f, -3.727130f,
 0.791186f, 9.044151f, -3.727130f,
 0.936363f, 9.892038f, -2.827101f,
 0.817567f, 8.094627f, -3.620471f,
 0.371258f, 7.911576f, -3.655915f,
 0.791186f, 9.044151f, -3.727130f,
 0.791186f, 9.044151f, -3.727130f,
 0.371258f, 7.911576f, -3.655915f,
 0.371258f, 7.911576f, -3.655915f,
 0.033961f, 10.215199f, -2.609219f,
 0.033961f, 10.215199f, -2.609219f,
 0.562201f, 10.035226f, -2.622388f,
 0.562201f, 10.035226f, -2.622388f,
 0.936363f, 9.892038f, -2.827101f,
 0.936363f, 9.892038f, -2.827101f,
 0.562201f, 10.035226f, -2.622388f,
 0.936363f, 9.945208f, -2.631417f,
 1.272911f, 8.311706f, -2.186581f,
 0.936363f, 9.945208f, -2.631417f,
 0.936363f, 9.945208f, -2.631417f,
 0.429582f, 8.226451f, -2.499647f,
 0.442211f, 8.312523f, -2.183579f,
 0.442211f, 8.312523f, -2.183579f,
 0.033961f, 8.386515f, -1.911870f,
 0.442211f, 8.312523f, -2.183579f,
 0.445001f, 8.130845f, -1.932637f,
 0.445001f, 8.130845f, -1.932637f,
 0.432372f, 7.806408f, -1.834267f,
 0.432372f, 7.806408f, -1.834267f,
 0.432372f, 7.806408f, -1.834267f,
 0.782250f, 7.823818f, -1.770335f,
 1.272911f, 8.311706f, -2.186581f,
 0.782250f, 8.138530f, -1.904416f,
 0.782250f, 8.138530f, -1.904416f,
 0.782250f, 7.823818f, -1.770335f,
 0.429582f, 8.226451f, -2.499647f,
 0.776421f, 7.936117f, -2.420583f,
 0.371258f, 7.911576f, -3.655915f,
 0.371258f, 7.911576f, -3.655915f,
 0.776421f, 7.936117f, -2.420583f,
 1.200907f, 7.591726f, -3.417932f,
 0.033961f, 7.955654f, -2.464324f,
 0.429582f, 8.226451f, -2.499647f,
 0.429582f, 8.226451f, -2.499647f,
 0.033961f, 7.955654f, -2.464324f,
 0.776421f, 7.936117f, -2.420583f,
 0.033961f, 7.888577f, -3.740369f,
 0.371258f, 7.911576f, -3.655915f,
 0.033961f, 7.564427f, -3.518210f,
 0.033961f, 7.564427f, -3.518210f,
 0.371258f, 7.911576f, -3.655915f,
 1.200907f, 7.591726f, -3.417932f,
 0.971581f, 7.024591f, -2.295589f,
 0.684600f, 4.870594f, -2.231354f,
 0.684600f, 4.870594f, -2.231354f,
 1.172341f, 3.322718f, -0.586407f,
 0.700363f, 4.614520f, -2.879291f,
 0.700363f, 4.614520f, -2.879291f,
 1.172341f, 3.322718f, -0.586407f,
 0.033961f, 4.933879f, -2.071247f,
 0.684600f, 4.870594f, -2.231354f,
 0.684600f, 4.870594f, -2.231354f,
 0.033961f, 4.465599f, -3.256124f,
 0.700363f, 4.614520f, -2.879291f,
 0.700363f, 4.614520f, -2.879291f,
 0.776421f, 7.936117f, -2.420583f,
 1.200907f, 7.591726f, -3.417932f,
 1.200907f, 7.591726f, -3.417932f,
 0.971581f, 7.024591f, -2.295589f,
 0.776421f, 7.936117f, -2.420583f,
 0.776421f, 7.936117f, -2.420583f,
 0.997360f, 6.600693f, -3.368165f,
 0.971581f, 7.024591f, -2.295589f,
 0.971581f, 7.024591f, -2.295589f,
 0.842170f, 7.747131f, -2.241015f,
 1.200907f, 7.591726f, -3.417932f,
 0.997360f, 6.600693f, -3.368165f,
 0.997360f, 6.600693f, -3.368165f,
 0.842170f, 7.747131f, -2.241015f,
 1.830181f, 7.599745f, -1.249941f,
 1.830181f, 7.599745f, -1.249941f,
 1.830181f, 7.599745f, -1.249941f,
 1.609006f, 7.967342f, -0.023722f,
 1.609006f, 7.967342f, -0.023722f,
 1.172341f, 3.322718f, -0.586407f,
 1.172341f, 3.322718f, -0.586407f,
 1.773271f, 1.679101f, 1.684023f,
 -0.868441f, 9.892038f, -2.827101f,
 -0.723264f, 9.044151f, -3.727130f,
 -0.723264f, 9.044151f, -3.727130f,
 -0.749646f, 8.094627f, -3.620471f,
 -0.723264f, 9.044151f, -3.727130f,
 -0.303336f, 7.911576f, -3.655915f,
 -0.303336f, 7.911576f, -3.655915f,
 -0.723264f, 9.044151f, -3.727130f,
 -0.303336f, 7.911576f, -3.655915f,
 -0.494279f, 10.035226f, -2.622388f,
 0.033961f, 10.215199f, -2.609219f,
 0.033961f, 10.215199f, -2.609219f,
 -0.868441f, 9.945208f, -2.631417f,
 -0.494279f, 10.035226f, -2.622388f,
 -0.868441f, 9.892038f, -2.827101f,
 -0.868441f, 9.892038f, -2.827101f,
 -0.494279f, 10.035226f, -2.622388f,
 -0.868441f, 9.945208f, -2.631417f,
 -0.868441f, 9.945208f, -2.631417f,
 -1.204989f, 8.311706f, -2.186581f,
 0.033961f, 8.386515f, -1.911870f,
 -0.374288f, 8.312523f, -2.183579f,
 -0.374288f, 8.312523f, -2.183579f,
 -0.361660f, 8.226451f, -2.499647f,
 -0.374288f, 8.312523f, -2.183579f,
 -0.377078f, 8.130845f, -1.932637f,
 -0.377078f, 8.130845f, -1.932637f,
 -0.364450f, 7.806408f, -1.834267f,
 -0.364450f, 7.806408f, -1.834267f,
 -0.364450f, 7.806408f, -1.834267f,
 -0.714328f, 7.823818f, -1.770335f,
 -0.714328f, 7.823818f, -1.770335f,
 -0.714328f, 8.138530f, -1.904416f,
 -0.714328f, 8.138530f, -1.904416f,
 -1.204989f, 8.311706f, -2.186581f,
 -1.132985f, 7.591726f, -3.417933f,
 -0.708500f, 7.936117f, -2.420583f,
 -0.303336f, 7.911576f, -3.655915f,
 -0.303336f, 7.911576f, -3.655915f,
 -0.708500f, 7.936117f, -2.420583f,
 -0.361660f, 8.226451f, -2.499647f,
 -0.708500f, 7.936117f, -2.420583f,
 0.033961f, 7.955654f, -2.464324f,
 -0.361660f, 8.226451f, -2.499647f,
 -0.361660f, 8.226451f, -2.499647f,
 0.033961f, 7.955654f, -2.464324f,
 0.033961f, 7.888577f, -3.740369f,
 0.033961f, 7.564427f, -3.518210f,
 -0.303336f, 7.911576f, -3.655915f,
 -0.303336f, 7.911576f, -3.655915f,
 0.033961f, 7.564427f, -3.518210f,
 -1.132985f, 7.591726f, -3.417933f,
 -0.903658f, 7.024591f, -2.295589f,
 -0.616678f, 4.870594f, -2.231354f,
 -1.094669f, 3.336998f, -0.559077f,
 -0.632440f, 4.614520f, -2.879291f,
 -0.632440f, 4.614520f, -2.879291f,
 -1.094669f, 3.336998f, -0.559077f,
 -0.616678f, 4.870594f, -2.231354f,};

static float VertArrayB[] = new float[]{
 -1.094669f, 3.336998f, -0.559077f,
 0.039817f, 3.425984f, -0.490227f,
 -0.616678f, 4.870594f, -2.231354f,
 -0.616678f, 4.870594f, -2.231354f,
 0.039817f, 3.425984f, -0.490227f,
 0.033961f, 4.933879f, -2.071247f,
 0.033961f, 4.465599f, -3.256124f,
 0.026198f, 2.026401f, -1.792251f,
 -0.632440f, 4.614520f, -2.879291f,
 -0.632440f, 4.614520f, -2.879291f,
 0.026198f, 2.026401f, -1.792251f,
 -1.138605f, 2.309340f, -1.514593f,
 -1.388688f, 7.036996f, -2.832504f,
 -1.373810f, 7.724939f, -2.638616f,
 -1.132985f, 7.591726f, -3.417933f,
 -1.132985f, 7.591726f, -3.417933f,
 -1.373810f, 7.724939f, -2.638616f,
 -0.708500f, 7.936117f, -2.420583f,
 -0.903658f, 7.024591f, -2.295589f,
 -0.708500f, 7.936117f, -2.420583f,
 -1.006764f, 7.699599f, -2.159879f,
 -0.708500f, 7.936117f, -2.420583f,
 -1.373810f, 7.724939f, -2.638616f,
 -1.006764f, 7.699599f, -2.159879f,
 -1.006764f, 7.699599f, -2.159879f,
 -1.019684f, 6.905618f, -2.386240f,
 -0.903658f, 7.024591f, -2.295589f,
 -0.903658f, 7.024591f, -2.295589f,
 -1.019684f, 6.905618f, -2.386240f,
 -0.929437f, 6.600693f, -3.368165f,
 -1.019684f, 6.905618f, -2.386240f,
 -1.388688f, 7.036996f, -2.832504f,
 -0.929437f, 6.600693f, -3.368165f,
 -0.929437f, 6.600693f, -3.368165f,
 -1.388688f, 7.036996f, -2.832504f,
 -1.132985f, 7.591726f, -3.417933f,
 -1.373810f, 7.724939f, -2.638616f,
 -2.238905f, 7.087586f, -1.134917f,
 -1.006764f, 7.699599f, -2.159879f,
 -1.006764f, 7.699599f, -2.159879f,
 -2.238905f, 7.087586f, -1.134917f,
 -1.937877f, 7.130524f, -1.113406f,
 -1.851082f, 7.199265f, 0.180967f,
 -1.937877f, 7.130524f, -1.113406f,
 -2.278404f, 7.138313f, 0.150430f,
 -2.278404f, 7.138313f, 0.150430f,
 -1.937877f, 7.130524f, -1.113406f,
 -2.238905f, 7.087586f, -1.134917f,
 -1.138605f, 2.309340f, -1.514593f,
 -1.752556f, 0.366950f, -0.144768f,
 -1.094669f, 3.336998f, -0.559077f,
 -1.094669f, 3.336998f, -0.559077f,
 -1.752556f, 0.366950f, -0.144768f,
 -1.694625f, 1.687225f, 1.694938f,
 2.249590f, 7.640556f, 0.101538f,
 2.009903f, 8.378865f, 0.582145f,
 2.335220f, 7.738527f, 0.795632f,
 1.865930f, 7.461577f, 0.144816f,
 2.249590f, 7.640556f, 0.101538f,
 1.806135f, 7.471816f, 0.790623f,
 1.806135f, 7.471816f, 0.790623f,
 2.249590f, 7.640556f, 0.101538f,
 2.335220f, 7.738527f, 0.795632f,
 1.609006f, 7.967342f, -0.023722f,
 1.865930f, 7.461577f, 0.144816f,
 1.441459f, 8.191256f, 0.554368f,
 1.441459f, 8.191256f, 0.554368f,
 1.865930f, 7.461577f, 0.144816f,
 1.806135f, 7.471816f, 0.790623f,
 -1.878929f, 6.608157f, 0.186353f,
 -1.772546f, 7.300881f, 0.810175f,
 -1.811522f, 6.461322f, 0.814559f,
 -1.878929f, 6.608157f, 0.186353f,
 -1.811522f, 6.461322f, 0.814559f,
 -2.303149f, 6.626606f, 0.158092f,
 -2.303149f, 6.626606f, 0.158092f,
 -1.811522f, 6.461322f, 0.814559f,
 -2.402845f, 6.486248f, 0.842970f,
 -2.278404f, 7.138313f, 0.150430f,
 -2.303149f, 6.626606f, 0.158092f,
 -2.367562f, 7.234679f, 0.836052f,
 -2.367562f, 7.234679f, 0.836052f,
 -2.303149f, 6.626606f, 0.158092f,
 -2.402845f, 6.486248f, 0.842970f,
 -2.278404f, 7.138313f, 0.150430f,
 -2.367562f, 7.234679f, 0.836052f,
 -1.851082f, 7.199265f, 0.180967f,
 2.667583f, 2.110394f, 3.341559f,
 2.282885f, 2.642456f, 3.754602f,
 2.898753f, 7.281962f, -3.104904f,
 2.898753f, 7.281962f, -3.104904f,
 2.282885f, 2.642456f, 3.754602f,
 2.514056f, 7.814025f, -2.691861f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.900004f, 0.283013f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.900004f, 0.283013f,
 0.824556f, 0.412442f,};

static float[] TextArrayB = new float[]{
 0.230576f, 0.348630f,
 0.340574f, 0.348630f,
 0.277434f, 0.584799f,
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.817124f, 0.248044f,
 0.853660f, 0.094340f,
 0.900004f, 0.283013f,
 0.900004f, 0.283013f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.206944f, -0.195031f},
{ 0.826605f, -0.440040f, -0.350840f},
{ 0.904768f, 0.004437f, -0.425882f},
{ 0.857718f, -0.406424f, -0.314863f},
{ 0.363845f, 0.135881f, -0.921495f},
{ 0.549456f, 0.698005f, -0.459225f},
{ 0.485921f, -0.106013f, -0.867550f},
{ 0.520280f, -0.845580f, 0.119595f},
{ 0.517276f, 0.228435f, 0.824768f},
{ 0.414372f, 0.308887f, 0.856087f},
{ 0.188090f, 0.171103f, 0.967133f},
{ 0.238558f, 0.556405f, 0.795929f},
{ -0.000000f, 0.667486f, 0.744622f},
{ -0.000000f, 0.047357f, 0.998878f},
{ 0.000000f, 0.247303f, -0.968938f},
{ 0.000000f, 0.905169f, -0.425051f},
{ 0.000001f, -0.259158f, -0.965835f},
{ 0.453143f, 0.544888f, 0.705520f},
{ -0.760936f, 0.393052f, 0.516225f},
{ 0.383691f, -0.917933f, -0.100903f},
{ -0.216587f, -0.943991f, -0.248940f},
{ 0.000000f, -0.742994f, 0.669298f},
{ 0.339479f, 0.793169f, 0.505605f},
{ 0.509184f, 0.382441f, -0.771019f},
{ 0.000000f, 0.375866f, 0.926674f},
{ -0.000000f, -0.119179f, -0.992873f},
{ 0.801630f, -0.055281f, 0.595259f},
{ 0.323863f, 0.837816f, 0.439519f},
{ -0.457092f, -0.605117f, 0.651844f},
{ -0.833709f, 0.374656f, 0.405663f},
{ 0.000000f, 0.093981f, 0.995574f},
{ 0.639037f, -0.062242f, 0.766653f},
{ 0.715394f, -0.241872f, -0.655522f},
{ 0.000000f, -0.140769f, -0.990043f},
{ 0.822546f, 0.276858f, 0.496758f},
{ 0.777700f, -0.201452f, -0.595483f},
{ 0.000543f, -0.358561f, -0.933506f},
{ -0.000192f, 0.373930f, 0.927457f},
{ 0.781905f, 0.582413f, 0.222307f},
{ 0.767965f, -0.184697f, -0.613283f},
{ 0.011576f, 0.824934f, 0.565110f},
{ -0.004552f, -0.469821f, -0.882750f},
{ 0.427247f, 0.869078f, -0.249325f},
{ 0.924724f, -0.114273f, -0.363080f},
{ -0.668719f, 0.284111f, 0.687092f},
{ 0.213643f, -0.932926f, 0.289838f},
{ 0.640953f, 0.720977f, -0.263385f},
{ 0.946431f, -0.281891f, -0.157497f},
{ -0.885076f, 0.284162f, 0.368637f},
{ -0.371398f, -0.909622f, 0.186151f},
{ 0.473771f, 0.831728f, -0.289430f},
{ 0.974974f, -0.222314f, 0.001251f},
{ -0.934745f, 0.214548f, -0.283234f},
{ -0.507948f, -0.860441f, 0.040382f},
{ 0.005098f, 0.846904f, 0.531721f},
{ 0.761380f, 0.603945f, 0.235690f},
{ 0.856839f, -0.102481f, -0.505297f},
{ -0.003383f, -0.491773f, -0.870717f},
{ -0.958716f, 0.206944f, -0.195032f},
{ -0.904768f, 0.004437f, -0.425882f},
{ -0.826605f, -0.440040f, -0.350839f},
{ -0.857718f, -0.406425f, -0.314863f},
{ -0.549455f, 0.698005f, -0.459226f},
{ -0.363846f, 0.135881f, -0.921495f},
{ -0.485921f, -0.106013f, -0.867550f},
{ -0.520281f, -0.845580f, 0.119592f},
{ -0.238558f, 0.556405f, 0.795929f},
{ -0.414372f, 0.308887f, 0.856087f},
{ -0.188090f, 0.171102f, 0.967133f},
{ -0.517274f, 0.228435f, 0.824769f},
{ -0.453142f, 0.544888f, 0.705521f},
{ -0.383692f, -0.917932f, -0.100902f},
{ 0.760937f, 0.393050f, 0.516224f},
{ 0.216586f, -0.943991f, -0.248941f},
{ -0.519376f, 0.416846f, -0.745981f},
{ -0.335821f, 0.812094f, 0.477207f},
{ -0.696282f, -0.528217f, 0.485982f},
{ 0.678295f, -0.532272f, 0.506560f},
{ -0.621375f, 0.485648f, 0.614849f},
{ 0.623455f, 0.543024f, 0.562520f},
{ -0.611002f, -0.050430f, 0.790021f},
{ -0.710776f, -0.242161f, -0.660420f},
{ -0.780441f, -0.198705f, -0.592813f},
{ -0.822291f, 0.276662f, 0.497289f},
{ -0.778984f, -0.175543f, -0.601971f},
{ -0.773167f, 0.591150f, 0.229683f},
{ -0.831841f, -0.400666f, -0.384068f},
{ -0.724670f, 0.650553f, -0.227230f},
{ 0.392770f, 0.576091f, 0.716834f},
{ 0.353221f, -0.892268f, 0.281233f},
{ -0.794457f, -0.536108f, -0.285353f},
{ -0.854451f, 0.476427f, -0.207199f},
{ 0.746835f, 0.490610f, 0.448931f},
{ 0.713345f, -0.690836f, 0.117834f},
{ -0.775109f, 0.623849f, -0.100093f},
{ -0.803370f, -0.577808f, -0.143993f},
{ 0.762333f, 0.633492f, -0.132428f},
{ 0.811457f, -0.566485f, -0.143640f},
{ -0.759210f, 0.604758f, 0.240557f},
{ -0.860134f, -0.097350f, -0.500692f},
{ -0.867056f, -0.357659f, -0.346833f},
{ -0.841422f, -0.407711f, -0.354656f},
{ -0.771317f, -0.499225f, -0.394772f},
{ -0.758017f, -0.521235f, -0.392078f},
{ -0.867904f, -0.371806f, -0.329399f},
{ -0.867904f, -0.371806f, -0.329399f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
31, 26, 32,
32, 26, 29,
33, 28, 30,
30, 28, 159,
160, 161, 162,
163, 164, 52,
165, 50, 166,
167, 50, 51,
168, 169, 53,
53, 170, 52,
171, 39, 172,
173, 39, 38,
174, 40, 175,
176, 40, 39,
177, 41, 178,
179, 41, 180,
181, 38, 182,
183, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
184, 41, 185,
186, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
187, 45, 188,
189, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
52, 190, 34,
34, 191, 192,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
193, 59, 194,
195, 59, 58,
196, 197, 198,
199, 200, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 201,
202, 203, 59,
59, 204, 12,
205, 206, 207,
208, 209, 59,
54, 55, 210,
211, 55, 212,
66, 69, 67,
67, 69, 68,
213, 214, 17,
17, 215, 216,
63, 66, 62,
62, 66, 67,
217, 218, 61,
61, 219, 220,
61, 221, 55,
55, 222, 223,
224, 225, 55,
55, 226, 227,
228, 229, 230,
231, 232, 233,
234, 235, 236,
237, 238, 17,
239, 240, 241,
242, 243, 244,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 245,
29, 79, 32,
32, 79, 77,
246, 28, 76,
76, 28, 33,
81, 247, 248,
249, 250, 251,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 345  Texture Co-ords: 191  Normals: 106  Texture: defeat Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 146 Correct: 82