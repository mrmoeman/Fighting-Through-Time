package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phaattacka {

static String TextureName = "attack";

static int Vertices = 345;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 31;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 8.042503f, 0.728293f,
 0.936363f, 9.733852f, 0.653819f,
 0.791186f, 9.095999f, -0.613317f,
 0.817567f, 8.146279f, -0.718218f,
 0.562201f, 9.819677f, 0.682435f,
 0.444292f, 9.490079f, -0.734917f,
 0.371258f, 7.975514f, -0.793074f,
 0.442211f, 8.042641f, 0.731402f,
 0.033961f, 8.055028f, 1.012733f,
 0.033961f, 9.992342f, 0.734885f,
 0.033961f, 9.655656f, -0.742207f,
 0.033961f, 7.971664f, -0.880519f,
 0.033961f, 10.061521f, -0.047873f,
 0.541219f, 9.959667f, -0.043388f,
 0.936363f, 9.725047f, 0.451232f,
 0.936363f, 8.031145f, 0.470335f,
 0.429582f, 8.028231f, 0.404141f,
 0.033961f, 8.028231f, 0.404141f,
 0.445001f, 7.810195f, 0.936213f,
 0.782250f, 7.811482f, 0.965434f,
 0.432372f, 7.472064f, 0.960779f,
 0.782250f, 7.474979f, 1.026975f,
 1.200907f, 7.611135f, -0.631309f,
 0.776421f, 7.727614f, 0.417378f,
 0.033961f, 7.756298f, 0.379009f,
 0.033961f, 7.606573f, -0.735135f,
 0.700363f, 4.711438f, -0.059023f,
 0.684600f, 4.800582f, 0.631955f,
 0.033961f, 4.822618f, 0.802700f,
 0.033961f, 4.659601f, -0.460885f,
 0.971581f, 6.853689f, 0.705399f,
 0.997360f, 6.706122f, -0.438425f,
 0.033961f, 6.854361f, -0.613967f,
 0.033961f, 6.978445f, 0.928989f,
 1.813146f, -0.175181f, -0.990992f,
 1.773409f, -0.198955f, 1.327498f,
 0.041584f, -0.205122f, 1.845462f,
 0.027810f, -0.171812f, -1.653110f,
 1.501865f, 7.122993f, -0.184125f,
 1.320575f, 7.782447f, 0.024038f,
 0.940197f, 7.657794f, 0.476064f,
 1.145454f, 6.895839f, 0.232946f,
 2.293263f, 6.933543f, 1.531188f,
 2.242103f, 7.252948f, 1.371075f,
 1.938560f, 7.254831f, 1.343104f,
 1.997516f, 6.884787f, 1.525817f,
 2.162397f, 7.547405f, 3.422285f,
 2.056423f, 8.212464f, 3.093794f,
 1.468581f, 8.171364f, 2.984935f,
 1.587377f, 7.423852f, 3.350327f,
 0.039881f, 2.321946f, 1.101051f,
 1.172373f, 2.326935f, 0.959961f,
 1.195932f, 2.367501f, -0.508022f,
 0.025834f, 2.376212f, -0.894595f,
 -0.868441f, 9.725047f, 0.451232f,
 -0.868441f, 8.031145f, 0.470335f,
 -0.749646f, 8.146279f, -0.718218f,
 -0.723264f, 9.095999f, -0.613317f,
 -0.376369f, 9.490079f, -0.734917f,
 -0.473295f, 9.959667f, -0.043388f,
 -0.303336f, 7.975514f, -0.793074f,
 -0.361660f, 8.028231f, 0.404141f,
 -0.374288f, 8.042641f, 0.731402f,
 -1.204989f, 8.042503f, 0.728293f,
 -0.868441f, 9.733852f, 0.653819f,
 -0.494279f, 9.819677f, 0.682435f,
 -0.714328f, 7.811482f, 0.965434f,
 -0.377078f, 7.810195f, 0.936213f,
 -0.364450f, 7.472064f, 0.960779f,
 -0.714328f, 7.474979f, 1.026975f,
 -0.708500f, 7.727614f, 0.417378f,
 -1.132985f, 7.611135f, -0.631309f,
 -1.883658f, 3.554238f, 0.559687f,
 -2.418809f, 3.935412f, 0.919909f,
 -2.081802f, 4.195540f, 1.341640f,
 -1.480519f, 3.770872f, 0.936038f,
 -0.903658f, 6.853689f, 0.705399f,
 -0.929437f, 6.706122f, -0.438425f,
 -0.616678f, 4.800582f, 0.631955f,
 -0.632440f, 4.711438f, -0.059023f,
 -1.094633f, 2.325080f, 0.976018f,
 -1.138885f, 2.365537f, -0.491949f,
 -1.527779f, 7.295445f, 0.018956f,
 -0.988720f, 7.148212f, -0.426933f,
 -1.361864f, 6.978680f, 0.505459f,
 -0.736516f, 6.812130f, -0.007388f,
 -1.884677f, 5.489300f, -0.186004f,
 -1.627568f, 5.303904f, -0.358618f,
 -1.727234f, 5.597741f, 0.051433f,
 -1.429472f, 5.385715f, -0.149006f,
 -1.694482f, -0.200630f, 1.341940f,
 -1.752679f, -0.177139f, -0.976979f,
 1.650805f, 7.833984f, 2.469798f,
 2.081698f, 7.831310f, 2.509503f,
 2.154321f, 7.377900f, 2.736792f,
 1.734496f, 7.308688f, 2.729167f,
 -1.947245f, 4.623406f, 0.882052f,
 -1.524558f, 4.322426f, 0.597518f,
 -1.805764f, 4.206292f, 0.299965f,
 -2.170743f, 4.469471f, 0.545000f,
 2.718656f, 3.685801f, 3.797008f,
 2.442673f, 3.844015f, 4.504460f,
 1.245913f, 13.204514f, 0.368314f,
 0.112445f, 13.499875f, 2.203453f,
 1.187845f, 11.467103f, 1.459616f,
 0.911861f, 11.625318f, 2.167068f,
 0.791186f, 9.095999f, -0.613317f,
 0.791186f, 9.095999f, -0.613317f,
 0.936363f, 9.725047f, 0.451232f,
 0.817567f, 8.146279f, -0.718218f,
 0.371258f, 7.975514f, -0.793074f,
 0.791186f, 9.095999f, -0.613317f,
 0.791186f, 9.095999f, -0.613317f,
 0.371258f, 7.975514f, -0.793074f,
 0.371258f, 7.975514f, -0.793074f,
 0.033961f, 9.992342f, 0.734885f,
 0.033961f, 9.992342f, 0.734885f,
 0.562201f, 9.819677f, 0.682435f,
 0.562201f, 9.819677f, 0.682435f,
 0.936363f, 9.725047f, 0.451232f,
 0.936363f, 9.725047f, 0.451232f,
 0.562201f, 9.819677f, 0.682435f,
 0.936363f, 9.733852f, 0.653819f,
 1.272911f, 8.042503f, 0.728293f,
 0.936363f, 9.733852f, 0.653819f,
 0.936363f, 9.733852f, 0.653819f,
 0.429582f, 8.028231f, 0.404141f,
 0.442211f, 8.042641f, 0.731402f,
 0.442211f, 8.042641f, 0.731402f,
 0.033961f, 8.055028f, 1.012733f,
 0.442211f, 8.042641f, 0.731402f,
 0.445001f, 7.810195f, 0.936213f,
 0.445001f, 7.810195f, 0.936213f,
 0.432372f, 7.472064f, 0.960779f,
 0.432372f, 7.472064f, 0.960779f,
 0.432372f, 7.472064f, 0.960779f,
 0.782250f, 7.474979f, 1.026975f,
 1.272911f, 8.042503f, 0.728293f,
 0.782250f, 7.811482f, 0.965434f,
 0.782250f, 7.811482f, 0.965434f,
 0.782250f, 7.474979f, 1.026975f,
 0.429582f, 8.028231f, 0.404141f,
 0.776421f, 7.727614f, 0.417378f,
 0.371258f, 7.975514f, -0.793074f,
 0.371258f, 7.975514f, -0.793074f,
 0.776421f, 7.727614f, 0.417378f,
 1.200907f, 7.611135f, -0.631309f,
 0.033961f, 7.756298f, 0.379009f,
 0.429582f, 8.028231f, 0.404141f,
 0.429582f, 8.028231f, 0.404141f,
 0.033961f, 7.756298f, 0.379009f,
 0.776421f, 7.727614f, 0.417378f,
 0.033961f, 7.971664f, -0.880519f,
 0.371258f, 7.975514f, -0.793074f,
 0.033961f, 7.606573f, -0.735135f,
 0.033961f, 7.606573f, -0.735135f,
 0.371258f, 7.975514f, -0.793074f,
 1.200907f, 7.611135f, -0.631309f,
 0.971581f, 6.853689f, 0.705399f,
 0.684600f, 4.800582f, 0.631955f,
 0.684600f, 4.800582f, 0.631955f,
 1.172373f, 2.326935f, 0.959961f,
 0.700363f, 4.711438f, -0.059023f,
 0.700363f, 4.711438f, -0.059023f,
 1.172373f, 2.326935f, 0.959961f,
 0.033961f, 4.822618f, 0.802700f,
 0.684600f, 4.800582f, 0.631955f,
 0.684600f, 4.800582f, 0.631955f,
 0.033961f, 4.659601f, -0.460885f,
 0.700363f, 4.711438f, -0.059023f,
 0.700363f, 4.711438f, -0.059023f,
 0.776421f, 7.727614f, 0.417378f,
 1.200907f, 7.611135f, -0.631309f,
 1.200907f, 7.611135f, -0.631309f,
 0.971581f, 6.853689f, 0.705399f,
 0.776421f, 7.727614f, 0.417378f,
 0.776421f, 7.727614f, 0.417378f,
 0.997360f, 6.706122f, -0.438425f,
 0.971581f, 6.853689f, 0.705399f,
 0.971581f, 6.853689f, 0.705399f,
 0.940197f, 7.657794f, 0.476064f,
 1.200907f, 7.611135f, -0.631309f,
 0.997360f, 6.706122f, -0.438425f,
 0.997360f, 6.706122f, -0.438425f,
 0.940197f, 7.657794f, 0.476064f,
 1.938560f, 7.254831f, 1.343104f,
 1.938560f, 7.254831f, 1.343104f,
 1.938560f, 7.254831f, 1.343104f,
 1.650805f, 7.833984f, 2.469798f,
 1.650805f, 7.833984f, 2.469798f,
 1.172373f, 2.326935f, 0.959961f,
 1.773409f, -0.198955f, 1.327498f,
 1.773409f, -0.198955f, 1.327498f,
 -0.868441f, 9.725047f, 0.451232f,
 -0.723264f, 9.095999f, -0.613317f,
 -0.723264f, 9.095999f, -0.613317f,
 -0.749646f, 8.146279f, -0.718218f,
 -0.723264f, 9.095999f, -0.613317f,
 -0.303336f, 7.975514f, -0.793074f,
 -0.303336f, 7.975514f, -0.793074f,
 -0.723264f, 9.095999f, -0.613317f,
 -0.303336f, 7.975514f, -0.793074f,
 -0.494279f, 9.819677f, 0.682435f,
 0.033961f, 9.992342f, 0.734885f,
 0.033961f, 9.992342f, 0.734885f,
 -0.868441f, 9.733852f, 0.653819f,
 -0.494279f, 9.819677f, 0.682435f,
 -0.868441f, 9.725047f, 0.451232f,
 -0.868441f, 9.725047f, 0.451232f,
 -0.494279f, 9.819677f, 0.682435f,
 -0.868441f, 9.733852f, 0.653819f,
 -0.868441f, 9.733852f, 0.653819f,
 -1.204989f, 8.042503f, 0.728293f,
 0.033961f, 8.055028f, 1.012733f,
 -0.374288f, 8.042641f, 0.731402f,
 -0.374288f, 8.042641f, 0.731402f,
 -0.361660f, 8.028231f, 0.404141f,
 -0.374288f, 8.042641f, 0.731402f,
 -0.377078f, 7.810195f, 0.936213f,
 -0.377078f, 7.810195f, 0.936213f,
 -0.364450f, 7.472064f, 0.960779f,
 -0.364450f, 7.472064f, 0.960779f,
 -0.364450f, 7.472064f, 0.960779f,
 -0.714328f, 7.474979f, 1.026975f,
 -0.714328f, 7.474979f, 1.026975f,
 -0.714328f, 7.811482f, 0.965434f,
 -0.714328f, 7.811482f, 0.965434f,
 -1.204989f, 8.042503f, 0.728293f,
 -1.132985f, 7.611135f, -0.631309f,
 -0.708500f, 7.727614f, 0.417378f,
 -0.303336f, 7.975514f, -0.793074f,
 -0.303336f, 7.975514f, -0.793074f,
 -0.708500f, 7.727614f, 0.417378f,
 -0.361660f, 8.028231f, 0.404141f,
 -0.708500f, 7.727614f, 0.417378f,
 0.033961f, 7.756298f, 0.379009f,
 -0.361660f, 8.028231f, 0.404141f,
 -0.361660f, 8.028231f, 0.404141f,
 0.033961f, 7.756298f, 0.379009f,
 0.033961f, 7.971664f, -0.880519f,
 0.033961f, 7.606573f, -0.735135f,
 -0.303336f, 7.975514f, -0.793074f,
 -0.303336f, 7.975514f, -0.793074f,
 0.033961f, 7.606573f, -0.735135f,
 -1.132985f, 7.611135f, -0.631309f,
 -0.903658f, 6.853689f, 0.705399f,
 -0.616678f, 4.800582f, 0.631955f,
 -1.094633f, 2.325080f, 0.976018f,
 -0.632440f, 4.711438f, -0.059023f,
 -0.632440f, 4.711438f, -0.059023f,
 -1.094633f, 2.325080f, 0.976018f,
 -0.616678f, 4.800582f, 0.631955f,};

static float VertArrayB[] = new float[]{
 -1.094633f, 2.325080f, 0.976018f,
 0.039881f, 2.321946f, 1.101051f,
 -0.616678f, 4.800582f, 0.631955f,
 -0.616678f, 4.800582f, 0.631955f,
 0.039881f, 2.321946f, 1.101051f,
 0.033961f, 4.822618f, 0.802700f,
 0.033961f, 4.659601f, -0.460885f,
 0.025834f, 2.376212f, -0.894595f,
 -0.632440f, 4.711438f, -0.059023f,
 -0.632440f, 4.711438f, -0.059023f,
 0.025834f, 2.376212f, -0.894595f,
 -1.138885f, 2.365537f, -0.491949f,
 -1.132985f, 7.611135f, -0.631309f,
 -0.988720f, 7.148212f, -0.426933f,
 -0.708500f, 7.727614f, 0.417378f,
 -0.988720f, 7.148212f, -0.426933f,
 -1.527779f, 7.295445f, 0.018956f,
 -0.708500f, 7.727614f, 0.417378f,
 -1.527779f, 7.295445f, 0.018956f,
 -1.361864f, 6.978680f, 0.505459f,
 -0.708500f, 7.727614f, 0.417378f,
 -0.708500f, 7.727614f, 0.417378f,
 -1.361864f, 6.978680f, 0.505459f,
 -0.903658f, 6.853689f, 0.705399f,
 -0.903658f, 6.853689f, 0.705399f,
 -1.361864f, 6.978680f, 0.505459f,
 -0.929437f, 6.706122f, -0.438425f,
 -1.361864f, 6.978680f, 0.505459f,
 -0.736516f, 6.812130f, -0.007388f,
 -0.929437f, 6.706122f, -0.438425f,
 -0.736516f, 6.812130f, -0.007388f,
 -0.988720f, 7.148212f, -0.426933f,
 -0.929437f, 6.706122f, -0.438425f,
 -0.929437f, 6.706122f, -0.438425f,
 -0.988720f, 7.148212f, -0.426933f,
 -1.132985f, 7.611135f, -0.631309f,
 -1.884677f, 5.489300f, -0.186004f,
 -1.727234f, 5.597741f, 0.051433f,
 -1.527779f, 7.295445f, 0.018956f,
 -1.527779f, 7.295445f, 0.018956f,
 -1.727234f, 5.597741f, 0.051433f,
 -1.361864f, 6.978680f, 0.505459f,
 -1.947245f, 4.623406f, 0.882052f,
 -1.727234f, 5.597741f, 0.051433f,
 -2.170743f, 4.469471f, 0.545000f,
 -2.170743f, 4.469471f, 0.545000f,
 -1.727234f, 5.597741f, 0.051433f,
 -1.884677f, 5.489300f, -0.186004f,
 -1.752679f, -0.177139f, -0.976979f,
 -1.694482f, -0.200630f, 1.341940f,
 -1.138885f, 2.365537f, -0.491949f,
 -1.138885f, 2.365537f, -0.491949f,
 -1.694482f, -0.200630f, 1.341940f,
 -1.094633f, 2.325080f, 0.976018f,
 2.154321f, 7.377900f, 2.736792f,
 2.056423f, 8.212464f, 3.093794f,
 2.162397f, 7.547405f, 3.422285f,
 1.734496f, 7.308688f, 2.729167f,
 2.154321f, 7.377900f, 2.736792f,
 1.587377f, 7.423852f, 3.350327f,
 1.587377f, 7.423852f, 3.350327f,
 2.154321f, 7.377900f, 2.736792f,
 2.162397f, 7.547405f, 3.422285f,
 1.650805f, 7.833984f, 2.469798f,
 1.734496f, 7.308688f, 2.729167f,
 1.468581f, 8.171364f, 2.984935f,
 1.468581f, 8.171364f, 2.984935f,
 1.734496f, 7.308688f, 2.729167f,
 1.587377f, 7.423852f, 3.350327f,
 -1.524558f, 4.322426f, 0.597518f,
 -2.081802f, 4.195540f, 1.341640f,
 -1.480519f, 3.770872f, 0.936038f,
 -1.524558f, 4.322426f, 0.597518f,
 -1.480519f, 3.770872f, 0.936038f,
 -1.805764f, 4.206292f, 0.299965f,
 -1.805764f, 4.206292f, 0.299965f,
 -1.480519f, 3.770872f, 0.936038f,
 -1.883658f, 3.554238f, 0.559687f,
 -2.170743f, 4.469471f, 0.545000f,
 -1.805764f, 4.206292f, 0.299965f,
 -2.418809f, 3.935412f, 0.919909f,
 -2.418809f, 3.935412f, 0.919909f,
 -1.805764f, 4.206292f, 0.299965f,
 -1.883658f, 3.554238f, 0.559687f,
 -2.170743f, 4.469471f, 0.545000f,
 -2.418809f, 3.935412f, 0.919909f,
 -1.947245f, 4.623406f, 0.882052f,
 2.718656f, 3.685801f, 3.797008f,
 2.442673f, 3.844015f, 4.504460f,
 1.187845f, 11.467103f, 1.459616f,
 1.187845f, 11.467103f, 1.459616f,
 2.442673f, 3.844015f, 4.504460f,
 0.911861f, 11.625318f, 2.167068f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.900004f, 0.283013f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.900004f, 0.283013f,
 0.824556f, 0.412442f,};

static float[] TextArrayB = new float[]{
 0.230576f, 0.348630f,
 0.340574f, 0.348630f,
 0.277434f, 0.584799f,
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.244788f, -0.144712f},
{ 0.826605f, -0.352051f, -0.439072f},
{ 0.904768f, 0.098045f, -0.414466f},
{ 0.857718f, -0.327175f, -0.396580f},
{ 0.363846f, 0.335328f, -0.869006f},
{ 0.549456f, 0.781949f, -0.294370f},
{ 0.485921f, 0.087493f, -0.869612f},
{ 0.520281f, -0.851170f, -0.069408f},
{ 0.517275f, 0.041342f, 0.854820f},
{ 0.414372f, 0.112931f, 0.903074f},
{ 0.188090f, -0.045912f, 0.981078f},
{ 0.238558f, 0.367619f, 0.898858f},
{ 0.000000f, 0.487268f, 0.873253f},
{ -0.000000f, -0.173610f, 0.984814f},
{ -0.000000f, 0.454460f, -0.890767f},
{ 0.000000f, 0.976516f, -0.215447f},
{ 0.000000f, -0.040270f, -0.999189f},
{ 0.453144f, 0.376281f, 0.808130f},
{ -0.760935f, 0.269820f, 0.590063f},
{ 0.383691f, -0.873227f, -0.300428f},
{ -0.216586f, -0.866070f, -0.450570f},
{ 0.000000f, -0.872063f, 0.489393f},
{ 0.300489f, 0.785751f, 0.540650f},
{ 0.489459f, 0.431601f, -0.757727f},
{ 0.000000f, 0.477562f, 0.878598f},
{ 0.000000f, -0.214855f, -0.976646f},
{ 0.662527f, -0.170613f, 0.729349f},
{ 0.471394f, 0.782863f, 0.406096f},
{ -0.692459f, -0.373847f, 0.617041f},
{ -0.750861f, 0.624644f, 0.214542f},
{ 0.000000f, 0.097278f, 0.995257f},
{ 0.739602f, -0.035538f, 0.672106f},
{ 0.675926f, -0.223258f, -0.702339f},
{ -0.000000f, -0.096548f, -0.995328f},
{ 0.771752f, 0.045743f, 0.634276f},
{ 0.878071f, 0.055024f, -0.475356f},
{ 0.000535f, 0.003046f, -0.999995f},
{ -0.000196f, 0.027486f, 0.999622f},
{ 0.745048f, 0.275344f, 0.607527f},
{ 0.821783f, 0.288331f, -0.491465f},
{ 0.006477f, 0.223155f, 0.974762f},
{ -0.006971f, 0.267689f, -0.963480f},
{ 0.547321f, 0.809680f, -0.211800f},
{ 0.841911f, -0.263913f, -0.470676f},
{ -0.305821f, 0.472866f, 0.826360f},
{ 0.163755f, -0.951771f, 0.259455f},
{ 0.847288f, 0.436133f, -0.303136f},
{ 0.832905f, -0.550693f, -0.054837f},
{ -0.771065f, 0.530617f, 0.352002f},
{ -0.604363f, -0.776220f, 0.179523f},
{ 0.717391f, 0.637449f, -0.281086f},
{ 0.867929f, -0.457188f, 0.194111f},
{ -0.791138f, 0.400206f, -0.462532f},
{ -0.721835f, -0.691235f, 0.033891f},
{ 0.004330f, 0.224627f, 0.974435f},
{ 0.796809f, 0.267561f, 0.541762f},
{ 0.824005f, 0.292221f, -0.485410f},
{ -0.004185f, 0.273847f, -0.961764f},
{ -0.958716f, 0.244789f, -0.144712f},
{ -0.904768f, 0.098045f, -0.414466f},
{ -0.826605f, -0.352051f, -0.439072f},
{ -0.857718f, -0.327175f, -0.396580f},
{ -0.549456f, 0.781949f, -0.294370f},
{ -0.363846f, 0.335328f, -0.869006f},
{ -0.485921f, 0.087493f, -0.869612f},
{ -0.520281f, -0.851170f, -0.069409f},
{ -0.238558f, 0.367620f, 0.898858f},
{ -0.414372f, 0.112931f, 0.903074f},
{ -0.188090f, -0.045913f, 0.981078f},
{ -0.517274f, 0.041342f, 0.854821f},
{ -0.453142f, 0.376281f, 0.808130f},
{ -0.383691f, -0.873227f, -0.300426f},
{ 0.760937f, 0.269818f, 0.590062f},
{ 0.216586f, -0.866071f, -0.450569f},
{ -0.654354f, 0.403155f, -0.639755f},
{ -0.448210f, 0.741617f, 0.499112f},
{ -0.136698f, -0.888640f, -0.437759f},
{ 0.745165f, -0.428358f, 0.511114f},
{ -0.868204f, -0.473690f, 0.147780f},
{ -0.102875f, 0.029689f, 0.994251f},
{ -0.694131f, -0.089616f, 0.714249f},
{ -0.700254f, -0.166868f, -0.694117f},
{ -0.879396f, 0.054823f, -0.472924f},
{ -0.771786f, 0.044951f, 0.634292f},
{ -0.828708f, 0.287588f, -0.480142f},
{ -0.736050f, 0.276501f, 0.617882f},
{ -0.576960f, 0.205252f, -0.790562f},
{ -0.793447f, 0.503925f, -0.341323f},
{ -0.432891f, -0.139975f, 0.890513f},
{ 0.975608f, -0.219380f, -0.007806f},
{ -0.053483f, -0.264918f, -0.962787f},
{ -0.837157f, 0.136896f, -0.529553f},
{ -0.130593f, 0.101006f, 0.986278f},
{ 0.952966f, -0.192273f, 0.234278f},
{ -0.946176f, 0.113158f, -0.303227f},
{ -0.059194f, -0.444847f, -0.893649f},
{ 0.039179f, 0.679244f, 0.732866f},
{ 0.968917f, 0.122796f, 0.214759f},
{ -0.793331f, 0.265198f, 0.547993f},
{ -0.827513f, 0.291314f, -0.479957f},
{ -0.919968f, -0.248242f, -0.303372f},
{ -0.896240f, -0.281452f, -0.342838f},
{ -0.837029f, -0.324629f, -0.440452f},
{ -0.823062f, -0.342202f, -0.453285f},
{ -0.916040f, -0.269455f, -0.297095f},
{ -0.916040f, -0.269455f, -0.297095f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 162,
163, 164, 52,
165, 50, 166,
167, 50, 51,
168, 169, 53,
53, 170, 52,
171, 39, 172,
173, 39, 38,
174, 40, 175,
176, 40, 39,
177, 41, 178,
179, 41, 180,
181, 38, 182,
183, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
184, 41, 185,
186, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
187, 45, 188,
189, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
190, 191, 52,
52, 192, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
193, 59, 194,
195, 59, 58,
196, 197, 198,
199, 200, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 201,
202, 203, 59,
59, 204, 12,
205, 206, 207,
208, 209, 59,
54, 55, 210,
211, 55, 212,
66, 69, 67,
67, 69, 68,
213, 214, 17,
17, 215, 216,
63, 66, 62,
62, 66, 67,
217, 218, 61,
61, 219, 220,
61, 221, 55,
55, 222, 223,
224, 225, 55,
55, 226, 227,
228, 229, 230,
231, 232, 233,
234, 235, 236,
237, 238, 17,
239, 240, 241,
242, 243, 244,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 245,
32, 29, 77,
77, 29, 79,
246, 28, 76,
76, 28, 33,
81, 247, 248,
249, 250, 251,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 345  Texture Co-ords: 191  Normals: 106  Texture: attack Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 146 Correct: 82