package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phablocke {

static String TextureName = "block";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.729060f, 0.267390f,
 0.936363f, 9.413218f, 0.440072f,
 0.791186f, 8.966738f, -0.906459f,
 0.817567f, 8.042428f, -1.148578f,
 0.562201f, 9.493959f, 0.480884f,
 0.444292f, 9.374328f, -0.969360f,
 0.371258f, 7.884387f, -1.247509f,
 0.442211f, 7.728743f, 0.270485f,
 0.033961f, 7.700020f, 0.550620f,
 0.033961f, 9.657143f, 0.557925f,
 0.033961f, 9.539201f, -0.952456f,
 0.033961f, 7.893315f, -1.334582f,
 0.033961f, 9.839600f, -0.206408f,
 0.541219f, 9.738180f, -0.216807f,
 0.936363f, 9.434016f, 0.238363f,
 0.936363f, 7.755397f, 0.010528f,
 0.429582f, 7.762155f, -0.055384f,
 0.033961f, 7.762155f, -0.055384f,
 0.445001f, 7.468944f, 0.439254f,
 0.782250f, 7.465961f, 0.468351f,
 0.432372f, 7.130841f, 0.414306f,
 0.782250f, 7.124083f, 0.480220f,
 1.200907f, 7.500332f, -1.140545f,
 0.776421f, 7.462817f, -0.086076f,
 0.033961f, 7.496784f, -0.119858f,
 0.033961f, 7.510942f, -1.243929f,
 0.700363f, 4.502938f, -0.399952f,
 0.684600f, 4.624249f, 0.286110f,
 0.033961f, 4.654234f, 0.455640f,
 0.033961f, 4.432394f, -0.798955f,
 0.971581f, 6.678546f, 0.263608f,
 0.997360f, 6.477733f, -0.872077f,
 0.033961f, 6.617612f, -1.054350f,
 0.033961f, 6.813606f, 0.481129f,
 1.813539f, -0.173631f, -0.946678f,
 1.773750f, -0.210845f, 1.409616f,
 0.041705f, -0.224179f, 1.906602f,
 0.028102f, -0.143341f, -1.633525f,
 1.484587f, 7.196710f, -0.489999f,
 0.931946f, 7.436168f, -0.104868f,
 0.665132f, 6.915883f, 0.045690f,
 1.300501f, 6.638915f, -0.403093f,
 2.071816f, 6.410619f, 1.105268f,
 1.798890f, 6.640636f, 1.158901f,
 1.564240f, 6.475991f, 1.055195f,
 1.879598f, 6.211031f, 0.990863f,
 1.998954f, 5.478979f, 2.865080f,
 1.432143f, 5.955234f, 2.980612f,
 0.993886f, 5.647334f, 2.711861f,
 1.629904f, 5.114198f, 2.579023f,
 0.041883f, 2.319419f, 1.237473f,
 1.174433f, 2.308247f, 1.098774f,
 1.198387f, 2.203803f, -0.360049f,
 0.028425f, 2.184519f, -0.742645f,
 -0.868441f, 9.434016f, 0.238363f,
 -0.868441f, 7.755397f, 0.010528f,
 -0.749646f, 8.042428f, -1.148578f,
 -0.723264f, 8.966738f, -0.906459f,
 -0.376369f, 9.374328f, -0.969360f,
 -0.473295f, 9.738180f, -0.216807f,
 -0.303336f, 7.884387f, -1.247509f,
 -0.361660f, 7.762155f, -0.055384f,
 -0.374288f, 7.728743f, 0.270486f,
 -1.204989f, 7.729060f, 0.267390f,
 -0.868441f, 9.413218f, 0.440072f,
 -0.494279f, 9.493959f, 0.480884f,
 -0.714328f, 7.465961f, 0.468351f,
 -0.377078f, 7.468944f, 0.439254f,
 -0.364450f, 7.130841f, 0.414306f,
 -0.714328f, 7.124083f, 0.480220f,
 -0.708500f, 7.462817f, -0.086076f,
 -1.132985f, 7.500332f, -1.140545f,
 -1.653792f, 4.052650f, 1.912285f,
 -2.125108f, 4.583571f, 2.151921f,
 -1.724621f, 4.982765f, 2.350292f,
 -1.195304f, 4.389091f, 2.078683f,
 -0.903658f, 6.678546f, 0.263608f,
 -0.929437f, 6.477733f, -0.872077f,
 -0.616678f, 4.624249f, 0.286110f,
 -0.632440f, 4.502938f, -0.399952f,
 -1.092606f, 2.307900f, 1.112373f,
 -1.136423f, 2.202933f, -0.343887f,
 -1.521723f, 7.106946f, -0.380233f,
 -1.066259f, 6.731420f, -0.783484f,
 -1.258464f, 7.060221f, 0.161122f,
 -0.729467f, 6.630444f, -0.304996f,
 -1.835234f, 5.458957f, 0.399042f,
 -1.608658f, 5.202050f, 0.285311f,
 -1.640594f, 5.651499f, 0.533082f,
 -1.378353f, 5.356143f, 0.399711f,
 -1.694173f, -0.212604f, 1.419541f,
 -1.752316f, -0.172759f, -0.936587f,
 1.230064f, 5.902971f, 2.172170f,
 1.563161f, 6.136693f, 2.319385f,
 1.950593f, 5.810173f, 2.243252f,
 1.677730f, 5.526849f, 2.080848f,
 -1.684822f, 5.156318f, 1.733289f,
 -1.312560f, 4.737046f, 1.543963f,
 -1.639487f, 4.518303f, 1.381568f,
 -1.961123f, 4.882996f, 1.543015f,
 4.715308f, 1.731952f, 1.404177f,
 4.748975f, 1.601278f, 2.168035f,
 -1.664030f, 9.662998f, 2.370274f,
 -1.869633f, 9.017214f, 4.439190f,
 -0.554825f, 7.968404f, 2.703327f,
 -0.521159f, 7.837731f, 3.467185f,
 0.791186f, 8.966738f, -0.906459f,
 0.791186f, 8.966738f, -0.906459f,
 0.936363f, 9.434016f, 0.238363f,
 0.817567f, 8.042428f, -1.148578f,
 0.371258f, 7.884387f, -1.247509f,
 0.791186f, 8.966738f, -0.906459f,
 0.791186f, 8.966738f, -0.906459f,
 0.371258f, 7.884387f, -1.247509f,
 0.371258f, 7.884387f, -1.247509f,
 0.033961f, 9.657143f, 0.557925f,
 0.033961f, 9.657143f, 0.557925f,
 0.562201f, 9.493959f, 0.480884f,
 0.562201f, 9.493959f, 0.480884f,
 0.936363f, 9.434016f, 0.238363f,
 0.936363f, 9.434016f, 0.238363f,
 0.562201f, 9.493959f, 0.480884f,
 0.936363f, 9.413218f, 0.440072f,
 1.272911f, 7.729060f, 0.267390f,
 0.936363f, 9.413218f, 0.440072f,
 0.936363f, 9.413218f, 0.440072f,
 0.429582f, 7.762155f, -0.055384f,
 0.442211f, 7.728743f, 0.270485f,
 0.442211f, 7.728743f, 0.270485f,
 0.033961f, 7.700020f, 0.550620f,
 0.442211f, 7.728743f, 0.270485f,
 0.445001f, 7.468944f, 0.439254f,
 0.445001f, 7.468944f, 0.439254f,
 0.432372f, 7.130841f, 0.414306f,
 0.432372f, 7.130841f, 0.414306f,
 0.432372f, 7.130841f, 0.414306f,
 0.782250f, 7.124083f, 0.480220f,
 1.272911f, 7.729060f, 0.267390f,
 0.782250f, 7.465961f, 0.468351f,
 0.782250f, 7.465961f, 0.468351f,
 0.782250f, 7.124083f, 0.480220f,
 0.429582f, 7.762155f, -0.055384f,
 0.776421f, 7.462817f, -0.086076f,
 0.371258f, 7.884387f, -1.247509f,
 0.371258f, 7.884387f, -1.247509f,
 0.776421f, 7.462817f, -0.086076f,
 1.200907f, 7.500332f, -1.140545f,
 0.033961f, 7.496784f, -0.119858f,
 0.429582f, 7.762155f, -0.055384f,
 0.429582f, 7.762155f, -0.055384f,
 0.033961f, 7.496784f, -0.119858f,
 0.776421f, 7.462817f, -0.086076f,
 0.033961f, 7.893315f, -1.334582f,
 0.371258f, 7.884387f, -1.247509f,
 0.033961f, 7.510942f, -1.243929f,
 0.033961f, 7.510942f, -1.243929f,
 0.371258f, 7.884387f, -1.247509f,
 1.200907f, 7.500332f, -1.140545f,
 0.971581f, 6.678546f, 0.263608f,
 0.684600f, 4.624249f, 0.286110f,
 0.700363f, 4.502938f, -0.399952f,
 0.684600f, 4.624249f, 0.286110f,
 0.684600f, 4.624249f, 0.286110f,
 1.174433f, 2.308247f, 1.098774f,
 0.033961f, 4.654234f, 0.455640f,
 0.684600f, 4.624249f, 0.286110f,
 0.684600f, 4.624249f, 0.286110f,
 0.033961f, 4.432394f, -0.798955f,
 0.700363f, 4.502938f, -0.399952f,
 0.700363f, 4.502938f, -0.399952f,
 0.776421f, 7.462817f, -0.086076f,
 1.200907f, 7.500332f, -1.140545f,
 1.200907f, 7.500332f, -1.140545f,
 0.971581f, 6.678546f, 0.263608f,
 0.776421f, 7.462817f, -0.086076f,
 0.971581f, 6.678546f, 0.263608f,
 0.997360f, 6.477733f, -0.872077f,
 0.971581f, 6.678546f, 0.263608f,
 0.971581f, 6.678546f, 0.263608f,
 0.665132f, 6.915883f, 0.045690f,
 1.200907f, 7.500332f, -1.140545f,
 0.997360f, 6.477733f, -0.872077f,
 0.997360f, 6.477733f, -0.872077f,
 0.665132f, 6.915883f, 0.045690f,
 1.564240f, 6.475991f, 1.055195f,
 1.564240f, 6.475991f, 1.055195f,
 1.564240f, 6.475991f, 1.055195f,
 1.230064f, 5.902971f, 2.172170f,
 1.230064f, 5.902971f, 2.172170f,
 1.174433f, 2.308247f, 1.098774f,
 1.773750f, -0.210845f, 1.409616f,
 1.773750f, -0.210845f, 1.409616f,
 -0.868441f, 9.434016f, 0.238363f,
 -0.723264f, 8.966738f, -0.906459f,
 -0.723264f, 8.966738f, -0.906459f,
 -0.749646f, 8.042428f, -1.148578f,
 -0.723264f, 8.966738f, -0.906459f,
 -0.303336f, 7.884387f, -1.247509f,
 -0.303336f, 7.884387f, -1.247509f,
 -0.723264f, 8.966738f, -0.906459f,
 -0.303336f, 7.884387f, -1.247509f,
 -0.494279f, 9.493959f, 0.480884f,
 0.033961f, 9.657143f, 0.557925f,
 0.033961f, 9.657143f, 0.557925f,
 -0.868441f, 9.413218f, 0.440072f,
 -0.494279f, 9.493959f, 0.480884f,
 -0.868441f, 9.434016f, 0.238363f,
 -0.868441f, 9.434016f, 0.238363f,
 -0.494279f, 9.493959f, 0.480884f,
 -0.868441f, 9.413218f, 0.440072f,
 -0.868441f, 9.413218f, 0.440072f,
 -1.204989f, 7.729060f, 0.267390f,
 0.033961f, 7.700020f, 0.550620f,
 -0.374288f, 7.728743f, 0.270486f,
 -0.374288f, 7.728743f, 0.270486f,
 -0.361660f, 7.762155f, -0.055384f,
 -0.374288f, 7.728743f, 0.270486f,
 -0.377078f, 7.468944f, 0.439254f,
 -0.377078f, 7.468944f, 0.439254f,
 -0.364450f, 7.130841f, 0.414306f,
 -0.364450f, 7.130841f, 0.414306f,
 -0.364450f, 7.130841f, 0.414306f,
 -0.714328f, 7.124083f, 0.480220f,
 -0.714328f, 7.124083f, 0.480220f,
 -0.714328f, 7.465961f, 0.468351f,
 -0.714328f, 7.465961f, 0.468351f,
 -1.204989f, 7.729060f, 0.267390f,
 -1.132985f, 7.500332f, -1.140545f,
 -0.708500f, 7.462817f, -0.086076f,
 -0.303336f, 7.884387f, -1.247509f,
 -0.303336f, 7.884387f, -1.247509f,
 -0.708500f, 7.462817f, -0.086076f,
 -0.361660f, 7.762155f, -0.055384f,
 -0.708500f, 7.462817f, -0.086076f,
 0.033961f, 7.496784f, -0.119858f,
 -0.361660f, 7.762155f, -0.055384f,
 -0.361660f, 7.762155f, -0.055384f,
 0.033961f, 7.496784f, -0.119858f,
 0.033961f, 7.893315f, -1.334582f,
 0.033961f, 7.510942f, -1.243929f,
 -0.303336f, 7.884387f, -1.247509f,
 -0.303336f, 7.884387f, -1.247509f,
 0.033961f, 7.510942f, -1.243929f,
 -1.132985f, 7.500332f, -1.140545f,
 -0.903658f, 6.678546f, 0.263608f,
 -0.616678f, 4.624249f, 0.286110f,
 -0.632440f, 4.502938f, -0.399952f,
 -0.616678f, 4.624249f, 0.286110f,
 -0.616678f, 4.624249f, 0.286110f,
 -1.092606f, 2.307900f, 1.112373f,
 -0.616678f, 4.624249f, 0.286110f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.624249f, 0.286110f,
 0.041883f, 2.319419f, 1.237473f,
 0.033961f, 4.654234f, 0.455640f,
 0.033961f, 4.432394f, -0.798955f,
 0.028425f, 2.184519f, -0.742645f,
 -0.632440f, 4.502938f, -0.399952f,
 -0.632440f, 4.502938f, -0.399952f,
 0.028425f, 2.184519f, -0.742645f,
 -1.136423f, 2.202933f, -0.343887f,
 -0.708500f, 7.462817f, -0.086076f,
 -1.132985f, 7.500332f, -1.140545f,
 -1.521723f, 7.106946f, -0.380233f,
 -1.132985f, 7.500332f, -1.140545f,
 -1.066259f, 6.731420f, -0.783484f,
 -1.521723f, 7.106946f, -0.380233f,
 -1.521723f, 7.106946f, -0.380233f,
 -1.258464f, 7.060221f, 0.161122f,
 -0.708500f, 7.462817f, -0.086076f,
 -0.708500f, 7.462817f, -0.086076f,
 -1.258464f, 7.060221f, 0.161122f,
 -0.903658f, 6.678546f, 0.263608f,
 -0.929437f, 6.477733f, -0.872077f,
 -0.903658f, 6.678546f, 0.263608f,
 -0.729467f, 6.630444f, -0.304996f,
 -0.903658f, 6.678546f, 0.263608f,
 -1.258464f, 7.060221f, 0.161122f,
 -0.729467f, 6.630444f, -0.304996f,
 -0.729467f, 6.630444f, -0.304996f,
 -1.066259f, 6.731420f, -0.783484f,
 -0.929437f, 6.477733f, -0.872077f,
 -0.929437f, 6.477733f, -0.872077f,
 -1.066259f, 6.731420f, -0.783484f,
 -1.132985f, 7.500332f, -1.140545f,
 -1.521723f, 7.106946f, -0.380233f,
 -1.835234f, 5.458957f, 0.399042f,
 -1.258464f, 7.060221f, 0.161122f,
 -1.258464f, 7.060221f, 0.161122f,
 -1.835234f, 5.458957f, 0.399042f,
 -1.640594f, 5.651499f, 0.533082f,
 -1.684822f, 5.156318f, 1.733289f,
 -1.640594f, 5.651499f, 0.533082f,
 -1.961123f, 4.882996f, 1.543015f,
 -1.961123f, 4.882996f, 1.543015f,
 -1.640594f, 5.651499f, 0.533082f,
 -1.835234f, 5.458957f, 0.399042f,
 -1.752316f, -0.172759f, -0.936587f,
 -1.694173f, -0.212604f, 1.419541f,
 -1.136423f, 2.202933f, -0.343887f,
 -1.136423f, 2.202933f, -0.343887f,
 -1.694173f, -0.212604f, 1.419541f,
 -1.092606f, 2.307900f, 1.112373f,
 1.950593f, 5.810173f, 2.243252f,
 1.432143f, 5.955234f, 2.980612f,
 1.998954f, 5.478979f, 2.865080f,
 1.677730f, 5.526849f, 2.080848f,
 1.950593f, 5.810173f, 2.243252f,
 1.629904f, 5.114198f, 2.579023f,
 1.629904f, 5.114198f, 2.579023f,
 1.950593f, 5.810173f, 2.243252f,
 1.998954f, 5.478979f, 2.865080f,
 1.230064f, 5.902971f, 2.172170f,
 1.677730f, 5.526849f, 2.080848f,
 0.993886f, 5.647334f, 2.711861f,
 0.993886f, 5.647334f, 2.711861f,
 1.677730f, 5.526849f, 2.080848f,
 1.629904f, 5.114198f, 2.579023f,
 -1.312560f, 4.737046f, 1.543963f,
 -1.724621f, 4.982765f, 2.350292f,
 -1.195304f, 4.389091f, 2.078683f,
 -1.312560f, 4.737046f, 1.543963f,
 -1.195304f, 4.389091f, 2.078683f,
 -1.639487f, 4.518303f, 1.381568f,
 -1.639487f, 4.518303f, 1.381568f,
 -1.195304f, 4.389091f, 2.078683f,
 -1.653792f, 4.052650f, 1.912285f,
 -1.961123f, 4.882996f, 1.543015f,
 -1.639487f, 4.518303f, 1.381568f,
 -2.125108f, 4.583571f, 2.151921f,
 -2.125108f, 4.583571f, 2.151921f,
 -1.639487f, 4.518303f, 1.381568f,
 -1.653792f, 4.052650f, 1.912285f,
 -1.961123f, 4.882996f, 1.543015f,
 -2.125108f, 4.583571f, 2.151921f,
 -1.684822f, 5.156318f, 1.733289f,
 4.715308f, 1.731952f, 1.404177f,
 4.748975f, 1.601278f, 2.168035f,
 -0.554825f, 7.968404f, 2.703327f,
 -0.554825f, 7.968404f, 2.703327f,
 4.748975f, 1.601278f, 2.168035f,
 -0.521159f, 7.837731f, 3.467185f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.177173f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.176724f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.091983f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.263257f, -0.107513f},
{ 0.826605f, -0.284341f, -0.485669f},
{ 0.904768f, 0.157370f, -0.395764f},
{ 0.857718f, -0.265920f, -0.440007f},
{ 0.363846f, 0.458331f, -0.810894f},
{ 0.549456f, 0.816487f, -0.177332f},
{ 0.485921f, 0.213228f, -0.847594f},
{ 0.520281f, -0.831982f, -0.192648f},
{ 0.517275f, -0.083612f, 0.851725f},
{ 0.414373f, -0.019816f, 0.909891f},
{ 0.188089f, -0.188327f, 0.963927f},
{ 0.238558f, 0.232771f, 0.942819f},
{ -0.000000f, 0.354873f, 0.934915f},
{ -0.000000f, -0.315207f, 0.949023f},
{ -0.000000f, 0.579362f, -0.815070f},
{ 0.000000f, 0.997483f, -0.070909f},
{ 0.000000f, 0.105702f, -0.994398f},
{ 0.453144f, 0.254555f, 0.854320f},
{ -0.760935f, 0.180993f, 0.623072f},
{ 0.383690f, -0.820154f, -0.424417f},
{ -0.216586f, -0.791204f, -0.571915f},
{ -0.000000f, -0.934047f, 0.357149f},
{ 0.341639f, 0.750595f, 0.565588f},
{ 0.582853f, 0.349528f, -0.733561f},
{ 0.000000f, 0.530173f, 0.847889f},
{ 0.000000f, -0.217542f, -0.976051f},
{ 0.761072f, -0.136767f, 0.634085f},
{ -0.048940f, 0.431459f, 0.900804f},
{ -0.151192f, -0.986950f, 0.055412f},
{ -0.907098f, -0.267113f, 0.325307f},
{ 0.000000f, 0.153062f, 0.988217f},
{ 0.752797f, 0.026687f, 0.657712f},
{ 0.674571f, -0.248763f, -0.695034f},
{ -0.000000f, -0.147340f, -0.989086f},
{ 0.817855f, 0.147487f, 0.556202f},
{ 0.833364f, -0.044315f, -0.550946f},
{ 0.000387f, -0.134307f, -0.990940f},
{ -0.000262f, 0.154089f, 0.988057f},
{ 0.837829f, 0.273411f, -0.472535f},
{ 0.739396f, 0.313915f, 0.595609f},
{ 0.005502f, 0.298814f, 0.954295f},
{ -0.006909f, 0.222248f, -0.974966f},
{ 0.184997f, 0.885568f, 0.426083f},
{ 0.896905f, 0.407249f, -0.172367f},
{ -0.802351f, -0.367223f, 0.470511f},
{ 0.465296f, -0.838553f, -0.283424f},
{ 0.252303f, 0.883383f, 0.394940f},
{ 0.978079f, 0.207120f, -0.021505f},
{ -0.909711f, -0.402183f, 0.103322f},
{ 0.035369f, -0.891067f, -0.452492f},
{ 0.077605f, 0.928960f, 0.361955f},
{ 0.978461f, 0.171014f, 0.115619f},
{ -0.943376f, 0.011599f, -0.331524f},
{ -0.100786f, -0.806723f, -0.582271f},
{ 0.003033f, 0.200164f, 0.979758f},
{ 0.791772f, 0.262603f, 0.551487f},
{ 0.814837f, 0.328663f, -0.477517f},
{ -0.003106f, 0.336292f, -0.941753f},
{ -0.958716f, 0.263257f, -0.107513f},
{ -0.904768f, 0.157371f, -0.395764f},
{ -0.826605f, -0.284341f, -0.485669f},
{ -0.857718f, -0.265920f, -0.440007f},
{ -0.549456f, 0.816488f, -0.177332f},
{ -0.363846f, 0.458331f, -0.810894f},
{ -0.485922f, 0.213228f, -0.847593f},
{ -0.520280f, -0.831982f, -0.192651f},
{ -0.238558f, 0.232771f, 0.942819f},
{ -0.414373f, -0.019816f, 0.909892f},
{ -0.188090f, -0.188327f, 0.963927f},
{ -0.517274f, -0.083612f, 0.851726f},
{ -0.453143f, 0.254555f, 0.854320f},
{ -0.383691f, -0.820154f, -0.424416f},
{ 0.760937f, 0.180992f, 0.623070f},
{ 0.216586f, -0.791204f, -0.571916f},
{ -0.561791f, 0.487833f, -0.668139f},
{ -0.365880f, 0.775358f, 0.514735f},
{ -0.190993f, -0.981080f, 0.031692f},
{ 0.834720f, -0.202063f, 0.512262f},
{ -0.816012f, -0.309461f, 0.488220f},
{ 0.075731f, 0.469860f, 0.879486f},
{ -0.730201f, -0.025603f, 0.682753f},
{ -0.674720f, -0.216763f, -0.705526f},
{ -0.833796f, -0.043620f, -0.550347f},
{ -0.816653f, 0.147515f, 0.557958f},
{ -0.843946f, 0.273000f, -0.461765f},
{ -0.730735f, 0.314405f, 0.605951f},
{ -0.931445f, 0.312517f, -0.186395f},
{ -0.522367f, -0.461282f, -0.717183f},
{ -0.230604f, 0.408508f, 0.883144f},
{ 0.928998f, -0.360579f, 0.083343f},
{ -0.220057f, -0.677219f, -0.702103f},
{ -0.937933f, -0.067270f, -0.340230f},
{ 0.207675f, 0.534043f, 0.819554f},
{ 0.984754f, -0.116983f, 0.128746f},
{ -0.987603f, 0.022606f, -0.155336f},
{ -0.207040f, -0.788336f, -0.579362f},
{ 0.152908f, 0.928841f, 0.337450f},
{ 0.988408f, 0.148636f, -0.030926f},
{ -0.788402f, 0.260711f, 0.557182f},
{ -0.817259f, 0.329776f, -0.472585f},
{ -0.783409f, -0.617427f, -0.071096f},
{ -0.769203f, -0.626601f, -0.125295f},
{ -0.748597f, -0.616044f, -0.245139f},
{ -0.736331f, -0.621625f, -0.267207f},
{ -0.769282f, -0.634534f, -0.074645f},
{ -0.769282f, -0.634534f, -0.074645f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
40, 39, 173,
174, 175, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: block Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86