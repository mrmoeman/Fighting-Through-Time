package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phaattacke {

static String TextureName = "attack";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 6.503594f, 1.932894f,
 0.936363f, 8.133729f, 2.389917f,
 0.791186f, 7.923129f, 0.987013f,
 0.817567f, 7.053566f, 0.590994f,
 0.562201f, 8.206339f, 2.443885f,
 0.444292f, 8.335476f, 0.994456f,
 0.371258f, 6.914686f, 0.466589f,
 0.442211f, 6.502755f, 1.935890f,
 0.033961f, 6.426735f, 2.207039f,
 0.033961f, 8.354014f, 2.547595f,
 0.033961f, 8.495060f, 1.039197f,
 0.033961f, 6.938315f, 0.382309f,
 0.033961f, 8.663995f, 1.825510f,
 0.541219f, 8.565828f, 1.797988f,
 0.936363f, 8.188580f, 2.194697f,
 0.936363f, 6.573298f, 1.684271f,
 0.429582f, 6.591184f, 1.620474f,
 0.033961f, 6.591184f, 1.620474f,
 0.445001f, 6.218005f, 2.057941f,
 0.782250f, 6.210110f, 2.086104f,
 0.432372f, 5.889093f, 1.975768f,
 0.782250f, 5.871206f, 2.039568f,
 1.200907f, 6.518023f, 0.506574f,
 0.776421f, 6.301448f, 1.539244f,
 0.033961f, 6.340673f, 1.511741f,
 0.033961f, 6.546087f, 0.406508f,
 0.700363f, 3.927960f, -0.536563f,
 0.684600f, 3.634120f, 0.095145f,
 0.033961f, 3.561517f, 0.251248f,
 0.033961f, 4.098860f, -0.903950f,
 0.971581f, 5.330351f, 1.254214f,
 0.997360f, 5.816767f, 0.208504f,
 0.033961f, 6.035864f, 0.139324f,
 0.033961f, 5.316341f, 1.509870f,
 1.814442f, -0.153512f, -0.836012f,
 1.774051f, -0.111817f, 1.539237f,
 0.041520f, -0.141615f, 1.990414f,
 0.028911f, -0.114189f, -1.576286f,
 1.402063f, 5.940226f, 0.483213f,
 1.499225f, 6.112862f, 1.170115f,
 1.047055f, 5.807396f, 1.428548f,
 0.931377f, 5.611507f, 0.634786f,
 1.796012f, 4.209193f, 1.024752f,
 1.846785f, 4.374779f, 1.341416f,
 1.561683f, 4.380628f, 1.449152f,
 1.502347f, 4.191542f, 1.082383f,
 2.036457f, 2.333093f, 1.651356f,
 2.143074f, 2.673034f, 2.310533f,
 1.571059f, 2.737523f, 2.477081f,
 1.450627f, 2.359225f, 1.736281f,
 0.044745f, 2.381009f, 1.309353f,
 1.177490f, 2.334554f, 1.196108f,
 1.203094f, 1.903547f, -0.031259f,
 0.033594f, 1.816973f, -0.362154f,
 -0.868441f, 8.188580f, 2.194697f,
 -0.868441f, 6.573298f, 1.684271f,
 -0.749646f, 7.053566f, 0.590994f,
 -0.723264f, 7.923129f, 0.987013f,
 -0.376369f, 8.335476f, 0.994456f,
 -0.473295f, 8.565828f, 1.797988f,
 -0.303336f, 6.914686f, 0.466589f,
 -0.361660f, 6.591184f, 1.620474f,
 -0.374288f, 6.502755f, 1.935890f,
 -1.204989f, 6.503594f, 1.932894f,
 -0.868441f, 8.133729f, 2.389917f,
 -0.494279f, 8.206339f, 2.443885f,
 -0.714328f, 6.210110f, 2.086104f,
 -0.377078f, 6.218005f, 2.057941f,
 -0.364450f, 5.889093f, 1.975768f,
 -0.714328f, 5.871206f, 2.039568f,
 -0.708500f, 6.301448f, 1.539244f,
 -1.132985f, 6.518023f, 0.506574f,
 -1.792467f, 2.947615f, -0.745149f,
 -2.412005f, 3.194029f, -0.403252f,
 -2.193487f, 3.261995f, 0.150578f,
 -1.497336f, 2.988798f, -0.233003f,
 -0.903658f, 5.330351f, 1.254214f,
 -0.929437f, 5.816767f, 0.208504f,
 -0.616678f, 3.634120f, 0.095145f,
 -0.632440f, 3.927960f, -0.536563f,
 -1.089600f, 2.336777f, 1.207084f,
 -1.131703f, 1.905205f, -0.015549f,
 -1.520619f, 6.103347f, 0.838031f,
 -0.897169f, 6.265125f, 0.527844f,
 -1.429416f, 5.523520f, 0.979581f,
 -0.707310f, 5.711102f, 0.625763f,
 -1.699268f, 5.018698f, -0.695654f,
 -1.401628f, 4.898043f, -0.860353f,
 -1.606056f, 5.023320f, -0.405457f,
 -1.261341f, 4.886274f, -0.595676f,
 -1.693922f, -0.117088f, 1.541824f,
 -1.751469f, -0.150026f, -0.835103f,
 1.583254f, 3.254078f, 2.095743f,
 1.987968f, 3.245776f, 1.942807f,
 1.915895f, 3.010719f, 1.493287f,
 1.499024f, 2.985663f, 1.575097f,
 -1.973273f, 3.822583f, -0.072227f,
 -1.483935f, 3.628041f, -0.342253f,
 -1.683077f, 3.644747f, -0.717973f,
 -2.105592f, 3.816022f, -0.484175f,
 1.977896f, 2.465107f, -1.585479f,
 2.006104f, 1.717420f, -1.380890f,
 1.542894f, 5.778959f, 8.076817f,
 1.209963f, 3.689791f, 8.590877f,
 1.485441f, 4.626030f, 6.379654f,
 1.513649f, 3.878344f, 6.584244f,
 0.791186f, 7.923129f, 0.987013f,
 0.791186f, 7.923129f, 0.987013f,
 0.936363f, 8.188580f, 2.194697f,
 0.817567f, 7.053566f, 0.590994f,
 0.371258f, 6.914686f, 0.466589f,
 0.791186f, 7.923129f, 0.987013f,
 0.791186f, 7.923129f, 0.987013f,
 0.371258f, 6.914686f, 0.466589f,
 0.371258f, 6.914686f, 0.466589f,
 0.033961f, 8.354014f, 2.547595f,
 0.033961f, 8.354014f, 2.547595f,
 0.562201f, 8.206339f, 2.443885f,
 0.562201f, 8.206339f, 2.443885f,
 0.936363f, 8.188580f, 2.194697f,
 0.936363f, 8.188580f, 2.194697f,
 0.562201f, 8.206339f, 2.443885f,
 0.936363f, 8.133729f, 2.389917f,
 1.272911f, 6.503594f, 1.932894f,
 0.936363f, 8.133729f, 2.389917f,
 0.936363f, 8.133729f, 2.389917f,
 0.429582f, 6.591184f, 1.620474f,
 0.442211f, 6.502755f, 1.935890f,
 0.442211f, 6.502755f, 1.935890f,
 0.033961f, 6.426735f, 2.207039f,
 0.442211f, 6.502755f, 1.935890f,
 0.445001f, 6.218005f, 2.057941f,
 0.445001f, 6.218005f, 2.057941f,
 0.432372f, 5.889093f, 1.975768f,
 0.432372f, 5.889093f, 1.975768f,
 0.432372f, 5.889093f, 1.975768f,
 0.782250f, 5.871206f, 2.039568f,
 1.272911f, 6.503594f, 1.932894f,
 0.782250f, 6.210110f, 2.086104f,
 0.782250f, 6.210110f, 2.086104f,
 0.782250f, 5.871206f, 2.039568f,
 0.429582f, 6.591184f, 1.620474f,
 0.776421f, 6.301448f, 1.539244f,
 0.371258f, 6.914686f, 0.466589f,
 0.371258f, 6.914686f, 0.466589f,
 0.776421f, 6.301448f, 1.539244f,
 1.200907f, 6.518023f, 0.506574f,
 0.033961f, 6.340673f, 1.511741f,
 0.429582f, 6.591184f, 1.620474f,
 0.429582f, 6.591184f, 1.620474f,
 0.033961f, 6.340673f, 1.511741f,
 0.776421f, 6.301448f, 1.539244f,
 0.033961f, 6.938315f, 0.382309f,
 0.371258f, 6.914686f, 0.466589f,
 0.033961f, 6.546087f, 0.406508f,
 0.033961f, 6.546087f, 0.406508f,
 0.371258f, 6.914686f, 0.466589f,
 1.200907f, 6.518023f, 0.506574f,
 0.971581f, 5.330351f, 1.254214f,
 0.684600f, 3.634120f, 0.095145f,
 0.700363f, 3.927960f, -0.536563f,
 0.684600f, 3.634120f, 0.095145f,
 0.684600f, 3.634120f, 0.095145f,
 1.177490f, 2.334554f, 1.196108f,
 0.033961f, 3.561517f, 0.251248f,
 0.684600f, 3.634120f, 0.095145f,
 0.684600f, 3.634120f, 0.095145f,
 0.033961f, 4.098860f, -0.903950f,
 0.700363f, 3.927960f, -0.536563f,
 0.700363f, 3.927960f, -0.536563f,
 0.776421f, 6.301448f, 1.539244f,
 1.200907f, 6.518023f, 0.506574f,
 1.200907f, 6.518023f, 0.506574f,
 0.971581f, 5.330351f, 1.254214f,
 0.776421f, 6.301448f, 1.539244f,
 0.776421f, 6.301448f, 1.539244f,
 1.047055f, 5.807396f, 1.428548f,
 0.971581f, 5.330351f, 1.254214f,
 0.971581f, 5.330351f, 1.254214f,
 0.997360f, 5.816767f, 0.208504f,
 1.200907f, 6.518023f, 0.506574f,
 0.997360f, 5.816767f, 0.208504f,
 0.997360f, 5.816767f, 0.208504f,
 1.047055f, 5.807396f, 1.428548f,
 1.561683f, 4.380628f, 1.449152f,
 1.561683f, 4.380628f, 1.449152f,
 1.561683f, 4.380628f, 1.449152f,
 1.583254f, 3.254078f, 2.095743f,
 1.583254f, 3.254078f, 2.095743f,
 1.177490f, 2.334554f, 1.196108f,
 1.774051f, -0.111817f, 1.539237f,
 1.774051f, -0.111817f, 1.539237f,
 -0.868441f, 8.188580f, 2.194697f,
 -0.723264f, 7.923129f, 0.987013f,
 -0.723264f, 7.923129f, 0.987013f,
 -0.749646f, 7.053566f, 0.590994f,
 -0.723264f, 7.923129f, 0.987013f,
 -0.303336f, 6.914686f, 0.466589f,
 -0.303336f, 6.914686f, 0.466589f,
 -0.723264f, 7.923129f, 0.987013f,
 -0.303336f, 6.914686f, 0.466589f,
 -0.494279f, 8.206339f, 2.443885f,
 0.033961f, 8.354014f, 2.547595f,
 0.033961f, 8.354014f, 2.547595f,
 -0.868441f, 8.133729f, 2.389917f,
 -0.494279f, 8.206339f, 2.443885f,
 -0.868441f, 8.188580f, 2.194697f,
 -0.868441f, 8.188580f, 2.194697f,
 -0.494279f, 8.206339f, 2.443885f,
 -0.868441f, 8.133729f, 2.389917f,
 -0.868441f, 8.133729f, 2.389917f,
 -1.204989f, 6.503594f, 1.932894f,
 0.033961f, 6.426735f, 2.207039f,
 -0.374288f, 6.502755f, 1.935890f,
 -0.374288f, 6.502755f, 1.935890f,
 -0.361660f, 6.591184f, 1.620474f,
 -0.374288f, 6.502755f, 1.935890f,
 -0.377078f, 6.218005f, 2.057941f,
 -0.377078f, 6.218005f, 2.057941f,
 -0.364450f, 5.889093f, 1.975768f,
 -0.364450f, 5.889093f, 1.975768f,
 -0.364450f, 5.889093f, 1.975768f,
 -0.714328f, 5.871206f, 2.039568f,
 -0.714328f, 5.871206f, 2.039568f,
 -0.714328f, 6.210110f, 2.086104f,
 -0.714328f, 6.210110f, 2.086104f,
 -1.204989f, 6.503594f, 1.932894f,
 -1.132985f, 6.518023f, 0.506574f,
 -0.708500f, 6.301448f, 1.539244f,
 -0.303336f, 6.914686f, 0.466589f,
 -0.303336f, 6.914686f, 0.466589f,
 -0.708500f, 6.301448f, 1.539244f,
 -0.361660f, 6.591184f, 1.620474f,
 -0.708500f, 6.301448f, 1.539244f,
 0.033961f, 6.340673f, 1.511741f,
 -0.361660f, 6.591184f, 1.620474f,
 -0.361660f, 6.591184f, 1.620474f,
 0.033961f, 6.340673f, 1.511741f,
 0.033961f, 6.938315f, 0.382309f,
 0.033961f, 6.546087f, 0.406508f,
 -0.303336f, 6.914686f, 0.466589f,
 -0.303336f, 6.914686f, 0.466589f,
 0.033961f, 6.546087f, 0.406508f,
 -1.132985f, 6.518023f, 0.506574f,
 -0.903658f, 5.330351f, 1.254214f,
 -0.616678f, 3.634120f, 0.095145f,
 -0.632440f, 3.927960f, -0.536563f,
 -0.616678f, 3.634120f, 0.095145f,
 -0.616678f, 3.634120f, 0.095145f,
 -1.089600f, 2.336777f, 1.207084f,
 -0.616678f, 3.634120f, 0.095145f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 3.634120f, 0.095145f,
 0.044745f, 2.381009f, 1.309353f,
 0.033961f, 3.561517f, 0.251248f,
 0.033961f, 4.098860f, -0.903950f,
 0.033594f, 1.816973f, -0.362154f,
 -0.632440f, 3.927960f, -0.536563f,
 -0.632440f, 3.927960f, -0.536563f,
 0.033594f, 1.816973f, -0.362154f,
 -1.131703f, 1.905205f, -0.015549f,
 -1.132985f, 6.518023f, 0.506574f,
 -0.897169f, 6.265125f, 0.527844f,
 -0.708500f, 6.301448f, 1.539244f,
 -0.897169f, 6.265125f, 0.527844f,
 -1.520619f, 6.103347f, 0.838031f,
 -0.708500f, 6.301448f, 1.539244f,
 -0.708500f, 6.301448f, 1.539244f,
 -1.520619f, 6.103347f, 0.838031f,
 -0.903658f, 5.330351f, 1.254214f,
 -0.903658f, 5.330351f, 1.254214f,
 -1.520619f, 6.103347f, 0.838031f,
 -1.429416f, 5.523520f, 0.979581f,
 -0.903658f, 5.330351f, 1.254214f,
 -1.429416f, 5.523520f, 0.979581f,
 -0.929437f, 5.816767f, 0.208504f,
 -1.429416f, 5.523520f, 0.979581f,
 -0.707310f, 5.711102f, 0.625763f,
 -0.929437f, 5.816767f, 0.208504f,
 -0.707310f, 5.711102f, 0.625763f,
 -0.897169f, 6.265125f, 0.527844f,
 -0.929437f, 5.816767f, 0.208504f,
 -0.929437f, 5.816767f, 0.208504f,
 -0.897169f, 6.265125f, 0.527844f,
 -1.132985f, 6.518023f, 0.506574f,
 -1.699268f, 5.018698f, -0.695654f,
 -1.606056f, 5.023320f, -0.405457f,
 -1.520619f, 6.103347f, 0.838031f,
 -1.520619f, 6.103347f, 0.838031f,
 -1.606056f, 5.023320f, -0.405457f,
 -1.429416f, 5.523520f, 0.979581f,
 -1.973273f, 3.822583f, -0.072227f,
 -1.606056f, 5.023320f, -0.405457f,
 -2.105592f, 3.816022f, -0.484175f,
 -2.105592f, 3.816022f, -0.484175f,
 -1.606056f, 5.023320f, -0.405457f,
 -1.699268f, 5.018698f, -0.695654f,
 -1.751469f, -0.150026f, -0.835103f,
 -1.693922f, -0.117088f, 1.541824f,
 -1.131703f, 1.905205f, -0.015549f,
 -1.131703f, 1.905205f, -0.015549f,
 -1.693922f, -0.117088f, 1.541824f,
 -1.089600f, 2.336777f, 1.207084f,
 1.915895f, 3.010719f, 1.493287f,
 2.143074f, 2.673034f, 2.310533f,
 2.036457f, 2.333093f, 1.651356f,
 1.499024f, 2.985663f, 1.575097f,
 1.915895f, 3.010719f, 1.493287f,
 1.450627f, 2.359225f, 1.736281f,
 1.450627f, 2.359225f, 1.736281f,
 1.915895f, 3.010719f, 1.493287f,
 2.036457f, 2.333093f, 1.651356f,
 1.583254f, 3.254078f, 2.095743f,
 1.499024f, 2.985663f, 1.575097f,
 1.571059f, 2.737523f, 2.477081f,
 1.571059f, 2.737523f, 2.477081f,
 1.499024f, 2.985663f, 1.575097f,
 1.450627f, 2.359225f, 1.736281f,
 -1.483935f, 3.628041f, -0.342253f,
 -2.193487f, 3.261995f, 0.150578f,
 -1.497336f, 2.988798f, -0.233003f,
 -1.483935f, 3.628041f, -0.342253f,
 -1.497336f, 2.988798f, -0.233003f,
 -1.683077f, 3.644747f, -0.717973f,
 -1.683077f, 3.644747f, -0.717973f,
 -1.497336f, 2.988798f, -0.233003f,
 -1.792467f, 2.947615f, -0.745149f,
 -2.105592f, 3.816022f, -0.484175f,
 -1.683077f, 3.644747f, -0.717973f,
 -2.412005f, 3.194029f, -0.403252f,
 -2.412005f, 3.194029f, -0.403252f,
 -1.683077f, 3.644747f, -0.717973f,
 -1.792467f, 2.947615f, -0.745149f,
 -2.105592f, 3.816022f, -0.484175f,
 -2.412005f, 3.194029f, -0.403252f,
 -1.973273f, 3.822583f, -0.072227f,
 1.977896f, 2.465107f, -1.585479f,
 2.006104f, 1.717420f, -1.380890f,
 1.485441f, 4.626030f, 6.379654f,
 1.485441f, 4.626030f, 6.379654f,
 2.006104f, 1.717420f, -1.380890f,
 1.513649f, 3.878344f, 6.584244f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.049042f, 0.357626f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.277722f, -0.061101f},
{ 0.826605f, -0.197461f, -0.527004f},
{ 0.904768f, 0.222481f, -0.363176f},
{ 0.857718f, -0.187087f, -0.478872f},
{ 0.363845f, 0.589754f, -0.720977f},
{ 0.549456f, 0.834761f, -0.035667f},
{ 0.485921f, 0.354483f, -0.798888f},
{ 0.520280f, -0.787011f, -0.331546f},
{ 0.517275f, -0.227465f, 0.825037f},
{ 0.414373f, -0.174509f, 0.893220f},
{ 0.188090f, -0.349761f, 0.917763f},
{ 0.238558f, 0.068778f, 0.968690f},
{ 0.000000f, 0.190442f, 0.981698f},
{ 0.000000f, -0.472249f, 0.881465f},
{ -0.000000f, 0.709727f, -0.704477f},
{ 0.000000f, 0.994985f, 0.100030f},
{ 0.000000f, 0.273534f, -0.961862f},
{ 0.453143f, 0.105319f, 0.885195f},
{ -0.760935f, 0.072220f, 0.644796f},
{ 0.383690f, -0.735877f, -0.557913f},
{ -0.216586f, -0.682227f, -0.698324f},
{ 0.000000f, -0.981232f, 0.192833f},
{ 0.398561f, 0.438893f, 0.805309f},
{ 0.492280f, 0.814807f, -0.306188f},
{ -0.000000f, -0.063949f, 0.997953f},
{ 0.000000f, 0.309492f, -0.950902f},
{ 0.616980f, -0.684037f, -0.389139f},
{ 0.744853f, -0.346760f, 0.570045f},
{ -0.728365f, -0.676865f, -0.106481f},
{ -0.467079f, -0.249563f, 0.848266f},
{ 0.000000f, -0.454837f, 0.890575f},
{ 0.744817f, -0.395391f, 0.537506f},
{ 0.683311f, 0.201545f, -0.701759f},
{ -0.000000f, 0.471692f, -0.881764f},
{ 0.897260f, 0.102724f, 0.429387f},
{ 0.732020f, -0.021508f, -0.680943f},
{ 0.000025f, 0.103491f, -0.994630f},
{ -0.000214f, -0.064031f, 0.997948f},
{ 0.835766f, 0.278888f, -0.472987f},
{ 0.670061f, 0.406983f, 0.620793f},
{ 0.004733f, 0.421109f, 0.906998f},
{ -0.003897f, 0.247330f, -0.968923f},
{ 0.844248f, 0.418273f, 0.335102f},
{ 0.779738f, 0.022130f, -0.625715f},
{ -0.150461f, -0.154265f, 0.976506f},
{ -0.618484f, -0.513028f, -0.595214f},
{ 0.934227f, 0.232689f, 0.270324f},
{ 0.662354f, -0.149727f, -0.734077f},
{ -0.689368f, 0.014290f, 0.724270f},
{ -0.856502f, -0.313536f, -0.409999f},
{ 0.869884f, 0.351771f, 0.345773f},
{ 0.666928f, -0.144215f, -0.731033f},
{ -0.636180f, 0.415659f, 0.650002f},
{ -0.912236f, -0.107302f, -0.395363f},
{ 0.000569f, 0.210365f, 0.977623f},
{ 0.761964f, 0.288479f, 0.579820f},
{ 0.769946f, 0.445397f, -0.456952f},
{ 0.000094f, 0.532253f, -0.846586f},
{ -0.958716f, 0.277723f, -0.061101f},
{ -0.904768f, 0.222482f, -0.363176f},
{ -0.826605f, -0.197461f, -0.527004f},
{ -0.857718f, -0.187087f, -0.478872f},
{ -0.549455f, 0.834762f, -0.035667f},
{ -0.363846f, 0.589754f, -0.720976f},
{ -0.485922f, 0.354483f, -0.798888f},
{ -0.520280f, -0.787010f, -0.331547f},
{ -0.238558f, 0.068779f, 0.968690f},
{ -0.414372f, -0.174509f, 0.893220f},
{ -0.188090f, -0.349762f, 0.917763f},
{ -0.517274f, -0.227465f, 0.825038f},
{ -0.453142f, 0.105319f, 0.885195f},
{ -0.383691f, -0.735878f, -0.557912f},
{ 0.760937f, 0.072219f, 0.644794f},
{ 0.216586f, -0.682227f, -0.698325f},
{ -0.563847f, 0.740546f, -0.365606f},
{ -0.495161f, 0.336492f, 0.800993f},
{ 0.005666f, -0.654789f, -0.755791f},
{ 0.622562f, -0.623922f, 0.472374f},
{ -0.858527f, -0.450891f, -0.244190f},
{ -0.332776f, -0.336269f, 0.881013f},
{ -0.701335f, -0.423886f, 0.573106f},
{ -0.723056f, 0.234719f, -0.649690f},
{ -0.732465f, -0.022586f, -0.680430f},
{ -0.896490f, 0.100959f, 0.431409f},
{ -0.841260f, 0.281123f, -0.461792f},
{ -0.661110f, 0.407421f, 0.630033f},
{ -0.436873f, 0.797967f, -0.415199f},
{ -0.799203f, 0.599426f, 0.044299f},
{ -0.473554f, -0.803844f, 0.359975f},
{ 0.939261f, -0.342177f, -0.026508f},
{ 0.177004f, 0.280419f, -0.943417f},
{ -0.567757f, 0.567384f, -0.596429f},
{ -0.401096f, -0.508899f, 0.761672f},
{ 0.948460f, -0.260070f, 0.181070f},
{ -0.853342f, 0.264506f, -0.449271f},
{ 0.168931f, -0.077966f, -0.982539f},
{ -0.160556f, 0.355971f, 0.920601f},
{ 0.886350f, -0.014016f, 0.462803f},
{ -0.759969f, 0.286941f, 0.583192f},
{ -0.771405f, 0.448018f, -0.451901f},
{ -0.998648f, -0.044860f, -0.026252f},
{ -0.997993f, -0.001845f, -0.063304f},
{ -0.987315f, 0.107181f, -0.117137f},
{ -0.982892f, 0.122873f, -0.137206f},
{ -0.997562f, -0.050745f, -0.047909f},
{ -0.997562f, -0.050745f, -0.047909f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 177, 41,
178, 179, 41,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
52, 34, 53,
53, 34, 37,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
85, 89, 83,
83, 89, 87,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
37, 91, 53,
53, 91, 81,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: attack Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86