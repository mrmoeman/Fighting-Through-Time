package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phawalkc {

static String TextureName = "walk";

static int Vertices = 344;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 31;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.253206f, 7.770861f, 1.355102f,
 0.868666f, 9.425969f, 1.658774f,
 0.764446f, 9.090030f, 0.276801f,
 0.820442f, 8.190083f, -0.040416f,
 0.491709f, 9.493827f, 1.697251f,
 0.408353f, 9.492823f, 0.239694f,
 0.380701f, 8.029962f, -0.162667f,
 0.422931f, 7.749927f, 1.338454f,
 0.009626f, 7.687922f, 1.605479f,
 -0.042195f, 9.637013f, 1.775002f,
 -0.006456f, 9.645602f, 0.260470f,
 0.045245f, 8.037858f, -0.256678f,
 -0.030501f, 9.882585f, 1.028641f,
 0.479363f, 9.794849f, 1.021907f,
 0.872474f, 9.463526f, 1.459540f,
 0.921707f, 7.810291f, 1.093397f,
 0.416466f, 7.810106f, 1.016268f,
 0.021075f, 7.800410f, 1.006883f,
 0.428931f, 7.477093f, 1.485123f,
 0.765435f, 7.479957f, 1.521864f,
 0.425774f, 7.142045f, 1.431939f,
 0.774203f, 7.138385f, 1.505348f,
 1.217694f, 7.658766f, -0.068258f,
 0.771669f, 7.522965f, 0.969103f,
 0.029473f, 7.541427f, 0.920650f,
 0.053380f, 7.649366f, -0.198060f,
 0.700363f, 4.610892f, 0.108029f,
 0.684600f, 4.610892f, 0.804733f,
 0.033961f, 4.610900f, 0.976895f,
 0.033961f, 4.610900f, -0.297162f,
 0.971581f, 6.637726f, 1.140271f,
 0.997360f, 6.637726f, -0.013032f,
 0.033961f, 6.807207f, -0.168164f,
 0.033961f, 6.732848f, 1.377986f,
 1.691626f, 0.090219f, -0.620274f,
 1.914621f, 0.115279f, 1.662909f,
 0.277413f, 0.074342f, 2.322933f,
 -0.117566f, 0.077226f, -1.121656f,
 1.441969f, 7.106571f, 0.095391f,
 1.430443f, 6.895564f, 0.778341f,
 0.946749f, 6.534189f, 0.776910f,
 0.956673f, 6.781350f, -0.010887f,
 1.772715f, 5.293685f, -0.323269f,
 1.835864f, 5.418725f, 0.009372f,
 1.552650f, 5.486148f, 0.099749f,
 1.479640f, 5.344066f, -0.285316f,
 1.508628f, 3.375578f, 0.147180f,
 1.639847f, 3.631046f, 0.839248f,
 1.088157f, 3.820907f, 0.975954f,
 0.940985f, 3.537569f, 0.198485f,
 0.427853f, 2.510745f, 1.797026f,
 1.473851f, 2.505764f, 1.342083f,
 1.105086f, 2.345632f, -0.017759f,
 -0.113939f, 2.301374f, -0.070961f,
 -0.931279f, 9.419293f, 1.416726f,
 -0.882047f, 7.766058f, 1.050582f,
 -0.745860f, 8.151672f, -0.077594f,
 -0.749123f, 9.052913f, 0.240874f,
 -0.411830f, 9.472710f, 0.220226f,
 -0.534560f, 9.769985f, 0.997840f,
 -0.293501f, 8.013429f, -0.178671f,
 -0.374315f, 7.790714f, 0.997498f,
 -0.393093f, 7.729916f, 1.319084f,
 -1.223252f, 7.710131f, 1.296320f,
 -0.935087f, 9.381736f, 1.615959f,
 -0.564156f, 9.467935f, 1.672189f,
 -0.730272f, 7.443278f, 1.486361f,
 -0.392669f, 7.456945f, 1.465621f,
 -0.370584f, 7.122516f, 1.413037f,
 -0.721504f, 7.101706f, 1.469845f,
 -0.712388f, 7.486572f, 0.933877f,
 -1.114839f, 7.601566f, -0.123624f,
 -1.913048f, 3.385497f, 1.286524f,
 -2.421953f, 3.757235f, 1.691823f,
 -2.060714f, 3.981795f, 2.113932f,
 -1.488853f, 3.567775f, 1.657906f,
 -0.903658f, 6.637726f, 1.140271f,
 -0.929437f, 6.637726f, -0.013032f,
 -0.616678f, 4.610892f, 0.804733f,
 -0.632440f, 4.610892f, 0.108029f,
 -0.699317f, 2.481879f, 1.997339f,
 -1.132409f, 2.315731f, 0.606996f,
 -1.526993f, 7.167009f, 0.535702f,
 -1.017416f, 6.948282f, 0.084518f,
 -1.329857f, 6.927453f, 1.053682f,
 -0.738432f, 6.678592f, 0.533974f,
 -1.889478f, 5.362600f, 0.661202f,
 -1.645024f, 5.181715f, 0.466791f,
 -1.719433f, 5.451938f, 0.897903f,
 -1.436273f, 5.245163f, 0.672387f,
 -1.461426f, 0.045155f, 2.060743f,
 -1.781660f, 0.020554f, -0.251422f,
 1.253508f, 4.344906f, 0.643569f,
 1.655543f, 4.249196f, 0.515275f,
 1.565901f, 4.071696f, 0.043075f,
 1.149868f, 4.143214f, 0.096950f,
 -1.932938f, 4.433813f, 1.676039f,
 -1.530980f, 4.140286f, 1.355908f,
 -1.827311f, 4.050218f, 1.064055f,
 -2.174325f, 4.306994f, 1.340031f,
 0.071398f, 1.733437f, -3.662789f,
 -0.142201f, 1.122772f, -3.234828f,
 3.222256f, 7.138613f, 4.423432f,
 2.244141f, 5.597848f, 5.610469f,
 2.330268f, 5.752825f, 3.199971f,
 2.116669f, 5.142160f, 3.627932f,
 0.764446f, 9.090030f, 0.276801f,
 0.764446f, 9.090030f, 0.276801f,
 0.872474f, 9.463526f, 1.459540f,
 0.820442f, 8.190083f, -0.040416f,
 0.380701f, 8.029962f, -0.162667f,
 0.764446f, 9.090030f, 0.276801f,
 0.764446f, 9.090030f, 0.276801f,
 0.380701f, 8.029962f, -0.162667f,
 0.380701f, 8.029962f, -0.162667f,
 -0.042195f, 9.637013f, 1.775002f,
 -0.042195f, 9.637013f, 1.775002f,
 0.491709f, 9.493827f, 1.697251f,
 0.491709f, 9.493827f, 1.697251f,
 0.872474f, 9.463526f, 1.459540f,
 0.872474f, 9.463526f, 1.459540f,
 0.491709f, 9.493827f, 1.697251f,
 0.868666f, 9.425969f, 1.658774f,
 1.253206f, 7.770861f, 1.355102f,
 0.868666f, 9.425969f, 1.658774f,
 0.868666f, 9.425969f, 1.658774f,
 0.416466f, 7.810106f, 1.016268f,
 0.422931f, 7.749927f, 1.338454f,
 0.422931f, 7.749927f, 1.338454f,
 0.009626f, 7.687922f, 1.605479f,
 0.422931f, 7.749927f, 1.338454f,
 0.428931f, 7.477093f, 1.485123f,
 0.428931f, 7.477093f, 1.485123f,
 0.425774f, 7.142045f, 1.431939f,
 0.425774f, 7.142045f, 1.431939f,
 0.425774f, 7.142045f, 1.431939f,
 0.774203f, 7.138385f, 1.505348f,
 1.253206f, 7.770861f, 1.355102f,
 0.765435f, 7.479957f, 1.521864f,
 0.765435f, 7.479957f, 1.521864f,
 0.774203f, 7.138385f, 1.505348f,
 0.416466f, 7.810106f, 1.016268f,
 0.771669f, 7.522965f, 0.969103f,
 0.380701f, 8.029962f, -0.162667f,
 0.380701f, 8.029962f, -0.162667f,
 0.771669f, 7.522965f, 0.969103f,
 1.217694f, 7.658766f, -0.068258f,
 0.029473f, 7.541427f, 0.920650f,
 0.416466f, 7.810106f, 1.016268f,
 0.416466f, 7.810106f, 1.016268f,
 0.029473f, 7.541427f, 0.920650f,
 0.771669f, 7.522965f, 0.969103f,
 0.045245f, 8.037858f, -0.256678f,
 0.380701f, 8.029962f, -0.162667f,
 0.053380f, 7.649366f, -0.198060f,
 0.053380f, 7.649366f, -0.198060f,
 0.380701f, 8.029962f, -0.162667f,
 1.217694f, 7.658766f, -0.068258f,
 0.971581f, 6.637726f, 1.140271f,
 0.684600f, 4.610892f, 0.804733f,
 0.700363f, 4.610892f, 0.108029f,
 0.684600f, 4.610892f, 0.804733f,
 0.684600f, 4.610892f, 0.804733f,
 1.473851f, 2.505764f, 1.342083f,
 0.033961f, 4.610900f, 0.976895f,
 0.684600f, 4.610892f, 0.804733f,
 0.684600f, 4.610892f, 0.804733f,
 0.033961f, 4.610900f, -0.297162f,
 0.700363f, 4.610892f, 0.108029f,
 0.700363f, 4.610892f, 0.108029f,
 0.771669f, 7.522965f, 0.969103f,
 1.217694f, 7.658766f, -0.068258f,
 1.217694f, 7.658766f, -0.068258f,
 0.771669f, 7.522965f, 0.969103f,
 0.971581f, 6.637726f, 1.140271f,
 0.971581f, 6.637726f, 1.140271f,
 0.971581f, 6.637726f, 1.140271f,
 0.997360f, 6.637726f, -0.013032f,
 0.946749f, 6.534189f, 0.776910f,
 0.997360f, 6.637726f, -0.013032f,
 0.946749f, 6.534189f, 0.776910f,
 1.217694f, 7.658766f, -0.068258f,
 0.997360f, 6.637726f, -0.013032f,
 0.997360f, 6.637726f, -0.013032f,
 0.946749f, 6.534189f, 0.776910f,
 1.552650f, 5.486148f, 0.099749f,
 1.552650f, 5.486148f, 0.099749f,
 1.552650f, 5.486148f, 0.099749f,
 1.253508f, 4.344906f, 0.643569f,
 1.253508f, 4.344906f, 0.643569f,
 1.473851f, 2.505764f, 1.342083f,
 1.914621f, 0.115279f, 1.662909f,
 1.914621f, 0.115279f, 1.662909f,
 -0.931279f, 9.419293f, 1.416726f,
 -0.749123f, 9.052913f, 0.240874f,
 -0.749123f, 9.052913f, 0.240874f,
 -0.745860f, 8.151672f, -0.077594f,
 -0.749123f, 9.052913f, 0.240874f,
 -0.293501f, 8.013429f, -0.178671f,
 -0.293501f, 8.013429f, -0.178671f,
 -0.749123f, 9.052913f, 0.240874f,
 -0.293501f, 8.013429f, -0.178671f,
 -0.564156f, 9.467935f, 1.672189f,
 -0.042195f, 9.637013f, 1.775002f,
 -0.042195f, 9.637013f, 1.775002f,
 -0.935087f, 9.381736f, 1.615959f,
 -0.564156f, 9.467935f, 1.672189f,
 -0.931279f, 9.419293f, 1.416726f,
 -0.931279f, 9.419293f, 1.416726f,
 -0.564156f, 9.467935f, 1.672189f,
 -0.935087f, 9.381736f, 1.615959f,
 -0.935087f, 9.381736f, 1.615959f,
 -1.223252f, 7.710131f, 1.296320f,
 0.009626f, 7.687922f, 1.605479f,
 -0.393093f, 7.729916f, 1.319084f,
 -0.393093f, 7.729916f, 1.319084f,
 -0.374315f, 7.790714f, 0.997498f,
 -0.393093f, 7.729916f, 1.319084f,
 -0.392669f, 7.456945f, 1.465621f,
 -0.392669f, 7.456945f, 1.465621f,
 -0.370584f, 7.122516f, 1.413037f,
 -0.370584f, 7.122516f, 1.413037f,
 -0.370584f, 7.122516f, 1.413037f,
 -0.721504f, 7.101706f, 1.469845f,
 -0.721504f, 7.101706f, 1.469845f,
 -0.730272f, 7.443278f, 1.486361f,
 -0.730272f, 7.443278f, 1.486361f,
 -1.223252f, 7.710131f, 1.296320f,
 -1.114839f, 7.601566f, -0.123624f,
 -0.712388f, 7.486572f, 0.933877f,
 -0.293501f, 8.013429f, -0.178671f,
 -0.293501f, 8.013429f, -0.178671f,
 -0.712388f, 7.486572f, 0.933877f,
 -0.374315f, 7.790714f, 0.997498f,
 -0.712388f, 7.486572f, 0.933877f,
 0.029473f, 7.541427f, 0.920650f,
 -0.374315f, 7.790714f, 0.997498f,
 -0.374315f, 7.790714f, 0.997498f,
 0.029473f, 7.541427f, 0.920650f,
 0.045245f, 8.037858f, -0.256678f,
 0.053380f, 7.649366f, -0.198060f,
 -0.293501f, 8.013429f, -0.178671f,
 -0.293501f, 8.013429f, -0.178671f,
 0.053380f, 7.649366f, -0.198060f,
 -1.114839f, 7.601566f, -0.123624f,
 -0.903658f, 6.637726f, 1.140271f,
 -0.616678f, 4.610892f, 0.804733f,
 -0.632440f, 4.610892f, 0.108029f,
 -0.616678f, 4.610892f, 0.804733f,
 -0.616678f, 4.610892f, 0.804733f,
 -0.699317f, 2.481879f, 1.997339f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.610892f, 0.804733f,
 -0.699317f, 2.481879f, 1.997339f,
 0.033961f, 4.610900f, 0.976895f,
 0.033961f, 4.610900f, 0.976895f,
 -0.699317f, 2.481879f, 1.997339f,
 0.427853f, 2.510745f, 1.797026f,
 0.033961f, 4.610900f, -0.297162f,
 -0.113939f, 2.301374f, -0.070961f,
 -0.632440f, 4.610892f, 0.108029f,
 -0.632440f, 4.610892f, 0.108029f,
 -0.113939f, 2.301374f, -0.070961f,
 -1.132409f, 2.315731f, 0.606996f,
 -1.114839f, 7.601566f, -0.123624f,
 -1.017416f, 6.948282f, 0.084518f,
 -0.712388f, 7.486572f, 0.933877f,
 -1.017416f, 6.948282f, 0.084518f,
 -1.526993f, 7.167009f, 0.535702f,
 -0.712388f, 7.486572f, 0.933877f,
 -1.526993f, 7.167009f, 0.535702f,
 -1.329857f, 6.927453f, 1.053682f,
 -0.712388f, 7.486572f, 0.933877f,
 -0.712388f, 7.486572f, 0.933877f,
 -1.329857f, 6.927453f, 1.053682f,
 -0.903658f, 6.637726f, 1.140271f,
 -1.329857f, 6.927453f, 1.053682f,
 -0.738432f, 6.678592f, 0.533974f,
 -0.903658f, 6.637726f, 1.140271f,
 -0.903658f, 6.637726f, 1.140271f,
 -0.738432f, 6.678592f, 0.533974f,
 -0.929437f, 6.637726f, -0.013032f,
 -0.738432f, 6.678592f, 0.533974f,
 -1.017416f, 6.948282f, 0.084518f,
 -0.929437f, 6.637726f, -0.013032f,
 -0.929437f, 6.637726f, -0.013032f,
 -1.017416f, 6.948282f, 0.084518f,
 -1.114839f, 7.601566f, -0.123624f,
 -1.526993f, 7.167009f, 0.535702f,
 -1.889478f, 5.362600f, 0.661202f,
 -1.329857f, 6.927453f, 1.053682f,
 -1.329857f, 6.927453f, 1.053682f,
 -1.889478f, 5.362600f, 0.661202f,
 -1.719433f, 5.451938f, 0.897903f,
 -1.932938f, 4.433813f, 1.676039f,
 -1.719433f, 5.451938f, 0.897903f,
 -2.174325f, 4.306994f, 1.340031f,
 -2.174325f, 4.306994f, 1.340031f,
 -1.719433f, 5.451938f, 0.897903f,
 -1.889478f, 5.362600f, 0.661202f,
 -1.781660f, 0.020554f, -0.251422f,
 -1.461426f, 0.045155f, 2.060743f,
 -1.132409f, 2.315731f, 0.606996f,
 -1.132409f, 2.315731f, 0.606996f,
 -1.461426f, 0.045155f, 2.060743f,
 -0.699317f, 2.481879f, 1.997339f,
 1.565901f, 4.071696f, 0.043075f,
 1.639847f, 3.631046f, 0.839248f,
 1.508628f, 3.375578f, 0.147180f,
 1.149868f, 4.143214f, 0.096950f,
 1.565901f, 4.071696f, 0.043075f,
 0.940985f, 3.537569f, 0.198485f,
 0.940985f, 3.537569f, 0.198485f,
 1.565901f, 4.071696f, 0.043075f,
 1.508628f, 3.375578f, 0.147180f,
 1.253508f, 4.344906f, 0.643569f,
 1.149868f, 4.143214f, 0.096950f,
 1.088157f, 3.820907f, 0.975954f,
 1.088157f, 3.820907f, 0.975954f,
 1.149868f, 4.143214f, 0.096950f,
 0.940985f, 3.537569f, 0.198485f,
 -1.530980f, 4.140286f, 1.355908f,
 -2.060714f, 3.981795f, 2.113932f,
 -1.488853f, 3.567775f, 1.657906f,
 -1.530980f, 4.140286f, 1.355908f,
 -1.488853f, 3.567775f, 1.657906f,
 -1.827311f, 4.050218f, 1.064055f,
 -1.827311f, 4.050218f, 1.064055f,
 -1.488853f, 3.567775f, 1.657906f,
 -1.913048f, 3.385497f, 1.286524f,
 -2.174325f, 4.306994f, 1.340031f,
 -1.827311f, 4.050218f, 1.064055f,
 -2.421953f, 3.757235f, 1.691823f,
 -2.421953f, 3.757235f, 1.691823f,
 -1.827311f, 4.050218f, 1.064055f,
 -1.913048f, 3.385497f, 1.286524f,
 -2.174325f, 4.306994f, 1.340031f,
 -2.421953f, 3.757235f, 1.691823f,
 -1.932938f, 4.433813f, 1.676039f,
 0.071398f, 1.733437f, -3.662789f,
 -0.142201f, 1.122772f, -3.234828f,
 2.330268f, 5.752825f, 3.199971f,
 2.330268f, 5.752825f, 3.199971f,
 -0.142201f, 1.122772f, -3.234828f,
 2.116669f, 5.142160f, 3.627932f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.134506f, 0.357626f,
 0.177173f, 0.357626f,
 0.177173f, 0.357626f,
 0.008494f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.230576f, 0.348630f,
 0.340575f, 0.584800f,
 0.340575f, 0.584800f,
 0.230576f, 0.348630f,
 0.340574f, 0.348630f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.953532f, 0.294730f, -0.062545f},
{ 0.844121f, -0.222461f, -0.487823f},
{ 0.908636f, 0.211985f, -0.359781f},
{ 0.873743f, -0.207159f, -0.440065f},
{ 0.369051f, 0.533202f, -0.761247f},
{ 0.531414f, 0.841661f, -0.095949f},
{ 0.498319f, 0.295084f, -0.815233f},
{ 0.546101f, -0.799995f, -0.248560f},
{ 0.500783f, -0.141717f, 0.853893f},
{ 0.395000f, -0.085541f, 0.914690f},
{ 0.172130f, -0.263469f, 0.949187f},
{ 0.211909f, 0.159030f, 0.964263f},
{ -0.029563f, 0.275483f, 0.960851f},
{ -0.012179f, -0.393234f, 0.919358f},
{ 0.002312f, 0.645206f, -0.764006f},
{ -0.024799f, 0.999620f, 0.012048f},
{ 0.018690f, 0.188311f, -0.981932f},
{ 0.427707f, 0.193379f, 0.882990f},
{ -0.778730f, 0.109645f, 0.617704f},
{ 0.414286f, -0.772211f, -0.481724f},
{ -0.183221f, -0.745769f, -0.640515f},
{ 0.016942f, -0.960319f, 0.278388f},
{ 0.466150f, 0.620444f, 0.630676f},
{ 0.591088f, 0.634831f, -0.497599f},
{ -0.031065f, 0.364690f, 0.930611f},
{ 0.034153f, -0.045816f, -0.998366f},
{ 0.465612f, -0.784051f, -0.410451f},
{ 0.592699f, -0.557879f, 0.580930f},
{ -0.857576f, -0.469439f, -0.210215f},
{ -0.579569f, -0.188402f, 0.792845f},
{ -0.002627f, -0.026801f, 0.999637f},
{ 0.708418f, -0.115563f, 0.696268f},
{ 0.670043f, -0.070329f, -0.738984f},
{ 0.005863f, 0.017128f, -0.999836f},
{ 0.859890f, 0.133005f, 0.492848f},
{ 0.805359f, -0.041527f, -0.591331f},
{ 0.010560f, -0.083627f, -0.996441f},
{ 0.022041f, 0.150191f, 0.988411f},
{ 0.688264f, 0.296307f, -0.662190f},
{ 0.901415f, 0.296280f, 0.315705f},
{ 0.277186f, 0.272922f, 0.921239f},
{ -0.270208f, 0.253717f, -0.928771f},
{ 0.831675f, 0.208900f, 0.514468f},
{ 0.833919f, 0.272594f, -0.479866f},
{ -0.525186f, -0.661280f, 0.535620f},
{ -0.554897f, -0.093234f, -0.826678f},
{ 0.971664f, 0.091277f, 0.218030f},
{ 0.652794f, -0.025279f, -0.757114f},
{ -0.653489f, -0.241390f, 0.717415f},
{ -0.817324f, -0.010319f, -0.576086f},
{ 0.897979f, 0.103340f, 0.427731f},
{ 0.669878f, -0.249582f, -0.699265f},
{ -0.569006f, 0.510437f, 0.644737f},
{ -0.876806f, 0.146988f, -0.457826f},
{ 0.862715f, 0.265692f, 0.430267f},
{ 0.139685f, 0.140174f, 0.980224f},
{ 0.745038f, 0.346082f, -0.570215f},
{ -0.140916f, 0.383633f, -0.912671f},
{ -0.962785f, 0.247737f, -0.108032f},
{ -0.899847f, 0.167637f, -0.402708f},
{ -0.808128f, -0.262979f, -0.527041f},
{ -0.840695f, -0.249202f, -0.480760f},
{ -0.566859f, 0.814729f, -0.122018f},
{ -0.358217f, 0.515367f, -0.778510f},
{ -0.472959f, 0.271265f, -0.838287f},
{ -0.493854f, -0.825497f, -0.273246f},
{ -0.264929f, 0.147338f, 0.952945f},
{ -0.433263f, -0.105852f, 0.895030f},
{ -0.203831f, -0.272689f, 0.940263f},
{ -0.533164f, -0.167072f, 0.829351f},
{ -0.478054f, 0.171168f, 0.861491f},
{ -0.352650f, -0.791017f, -0.499930f},
{ 0.742257f, 0.146942f, 0.653806f},
{ 0.249699f, -0.735153f, -0.630238f},
{ -0.731593f, 0.506360f, -0.456477f},
{ -0.463846f, 0.668626f, 0.581194f},
{ -0.179726f, -0.855831f, -0.485029f},
{ 0.752947f, -0.478490f, 0.451794f},
{ -0.874566f, -0.459336f, 0.155383f},
{ -0.061243f, -0.029605f, 0.997684f},
{ -0.712834f, -0.150707f, 0.684949f},
{ -0.697391f, -0.097423f, -0.710038f},
{ -0.824333f, -0.040803f, -0.564632f},
{ -0.855883f, 0.123829f, 0.502126f},
{ -0.941317f, 0.273225f, -0.198168f},
{ -0.533984f, 0.304363f, 0.788812f},
{ -0.655178f, 0.046814f, -0.754023f},
{ -0.814774f, 0.466887f, -0.343744f},
{ -0.328964f, 0.106641f, 0.938302f},
{ 0.919636f, -0.384776f, 0.078850f},
{ -0.117295f, -0.307095f, -0.944423f},
{ -0.908413f, 0.111903f, -0.402820f},
{ 0.089708f, 0.165654f, 0.982095f},
{ 0.957814f, -0.205040f, 0.201371f},
{ -0.954180f, 0.156269f, -0.255188f},
{ -0.108328f, -0.386675f, -0.915831f},
{ 0.088436f, 0.631066f, 0.770672f},
{ 0.979991f, 0.084066f, 0.180417f},
{ -0.763190f, 0.211471f, 0.610591f},
{ -0.850919f, 0.363394f, -0.379318f},
{ -0.915326f, 0.390139f, 0.099848f},
{ -0.906937f, 0.418145f, 0.051178f},
{ -0.868214f, 0.494921f, -0.035451f},
{ -0.862955f, 0.501725f, -0.059836f},
{ -0.921697f, 0.379312f, 0.081220f},
{ -0.921697f, 0.379312f, 0.081220f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 174, 39,
39, 175, 40,
176, 177, 178,
179, 41, 180,
181, 38, 182,
183, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
184, 41, 185,
186, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
187, 45, 188,
189, 45, 95,
42, 94, 45,
45, 94, 95,
51, 50, 35,
35, 50, 36,
190, 191, 52,
52, 192, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
193, 59, 194,
195, 59, 58,
196, 197, 198,
199, 200, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 201,
202, 203, 59,
59, 204, 12,
205, 206, 207,
208, 209, 59,
54, 55, 210,
211, 55, 212,
66, 69, 67,
67, 69, 68,
213, 214, 17,
17, 215, 216,
63, 66, 62,
62, 66, 67,
217, 218, 61,
61, 219, 220,
61, 221, 55,
55, 222, 223,
224, 225, 55,
55, 226, 227,
228, 229, 230,
231, 232, 233,
234, 235, 236,
237, 238, 17,
239, 240, 241,
242, 243, 244,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
25, 32, 71,
71, 32, 77,
79, 78, 77,
77, 78, 245,
32, 29, 77,
77, 29, 79,
246, 28, 76,
76, 28, 33,
247, 81, 248,
249, 81, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
37, 91, 53,
53, 91, 81,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 344  Texture Co-ords: 191  Normals: 106  Texture: walk Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 83