package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phadeatha {

static String TextureName = "defeat";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.808765f, 0.802844f,
 0.936363f, 9.417588f, 1.330003f,
 0.791186f, 9.267914f, -0.080701f,
 0.817567f, 8.416309f, -0.513991f,
 0.562201f, 9.487794f, 1.387064f,
 0.444292f, 9.679553f, -0.055416f,
 0.371258f, 8.282945f, -0.644291f,
 0.442211f, 7.807796f, 0.805801f,
 0.033961f, 7.720111f, 1.073405f,
 0.033961f, 9.630841f, 1.497070f,
 0.033961f, 9.837050f, -0.003809f,
 0.033961f, 8.310200f, -0.727469f,
 0.033961f, 9.971789f, 0.789079f,
 0.541219f, 9.874907f, 0.757334f,
 0.936363f, 9.480838f, 1.137341f,
 0.936363f, 7.889166f, 0.557472f,
 0.429582f, 7.909797f, 0.494509f,
 0.033961f, 7.909797f, 0.494509f,
 0.445001f, 7.518031f, 0.915412f,
 0.782250f, 7.508923f, 0.943207f,
 0.432372f, 7.192984f, 0.819078f,
 0.782250f, 7.172352f, 0.882044f,
 1.200907f, 7.884923f, -0.621514f,
 0.776421f, 7.623848f, 0.400813f,
 0.033961f, 7.664227f, 0.375033f,
 0.033961f, 7.917292f, -0.720271f,
 0.700363f, 4.777358f, -1.207919f,
 0.684600f, 4.777358f, -0.511215f,
 0.033961f, 4.777366f, -0.339053f,
 0.033961f, 4.777366f, -1.613110f,
 0.971581f, 6.804192f, 0.220750f,
 0.997360f, 6.804192f, -0.932553f,
 0.033961f, 6.973672f, -1.087685f,
 0.033961f, 6.899314f, 0.458465f,
 1.814099f, 0.144616f, -0.750020f,
 1.773810f, 0.918579f, 1.445045f,
 0.041457f, 1.058182f, 1.881971f,
 0.028665f, -0.056141f, -1.414437f,
 1.488864f, 7.249065f, -0.327230f,
 1.366352f, 7.487392f, 0.335544f,
 0.978586f, 7.070189f, 0.535876f,
 1.115933f, 6.797101f, -0.231177f,
 2.281819f, 5.662005f, 0.492357f,
 2.368924f, 6.008067f, 0.546456f,
 2.096591f, 6.141197f, 0.514281f,
 1.996084f, 5.741856f, 0.449331f,
 1.868018f, 5.181818f, 2.381375f,
 2.048666f, 5.899594f, 2.498014f,
 1.521786f, 6.152303f, 2.365225f,
 1.319409f, 5.347675f, 2.231009f,
 0.043391f, 3.141800f, 0.906938f,
 1.176059f, 3.090177f, 0.785630f,
 1.201024f, 2.543053f, -0.578767f,
 0.031347f, 2.418044f, -0.921805f,
 -0.868441f, 9.480838f, 1.137341f,
 -0.868441f, 7.889166f, 0.557472f,
 -0.749646f, 8.416309f, -0.513991f,
 -0.723264f, 9.267914f, -0.080701f,
 -0.376369f, 9.679553f, -0.055416f,
 -0.473295f, 9.874907f, 0.757334f,
 -0.303336f, 8.282945f, -0.644291f,
 -0.361660f, 7.909797f, 0.494509f,
 -0.374288f, 7.807796f, 0.805801f,
 -1.204989f, 7.808765f, 0.802844f,
 -0.868441f, 9.417588f, 1.330003f,
 -0.494279f, 9.487794f, 1.387064f,
 -0.714328f, 7.508923f, 0.943207f,
 -0.377078f, 7.518031f, 0.915412f,
 -0.364450f, 7.192984f, 0.819078f,
 -0.714328f, 7.172352f, 0.882044f,
 -0.708500f, 7.623848f, 0.400813f,
 -1.132985f, 7.884923f, -0.621514f,
 -2.037384f, 4.304798f, 2.197408f,
 -2.415041f, 4.891127f, 2.471332f,
 -1.952363f, 5.220262f, 2.662895f,
 -1.527943f, 4.564413f, 2.352851f,
 -0.903658f, 6.804192f, 0.220750f,
 -0.929437f, 6.804192f, -0.932553f,
 -0.616678f, 4.777358f, -0.511215f,
 -0.632440f, 4.777358f, -1.207919f,
 -1.091011f, 3.093386f, 0.782940f,
 -1.133781f, 2.548493f, -0.559808f,
 -1.508089f, 7.408361f, 0.068999f,
 -1.128899f, 6.997942f, -0.376926f,
 -1.242787f, 7.278356f, 0.595560f,
 -0.801297f, 6.807777f, 0.080338f,
 -2.066481f, 5.771588f, 0.731734f,
 -1.885121f, 5.488016f, 0.601472f,
 -1.840377f, 5.928858f, 0.862376f,
 -1.630243f, 5.602674f, 0.709929f,
 -1.694144f, 0.917495f, 1.450330f,
 -1.751788f, 0.147726f, -0.745331f,
 1.719510f, 6.097676f, 1.756688f,
 2.106100f, 5.908693f, 1.802362f,
 1.982450f, 5.417440f, 1.725566f,
 1.576837f, 5.530793f, 1.664488f,
 -1.911147f, 5.406302f, 2.049637f,
 -1.612851f, 4.943268f, 1.833230f,
 -1.974662f, 4.780506f, 1.679271f,
 -2.232111f, 5.183051f, 1.864183f,
 3.613937f, 0.183800f, 2.987080f,
 3.229240f, 0.456473f, 3.602990f,
 4.398355f, 9.373583f, -1.424651f,
 2.978654f, 10.025574f, 0.091621f,
 3.845108f, 7.793322f, -0.237385f,
 3.460410f, 8.065995f, 0.378524f,
 0.791186f, 9.267914f, -0.080701f,
 0.791186f, 9.267914f, -0.080701f,
 0.936363f, 9.480838f, 1.137341f,
 0.817567f, 8.416309f, -0.513991f,
 0.371258f, 8.282945f, -0.644291f,
 0.791186f, 9.267914f, -0.080701f,
 0.791186f, 9.267914f, -0.080701f,
 0.371258f, 8.282945f, -0.644291f,
 0.371258f, 8.282945f, -0.644291f,
 0.033961f, 9.630841f, 1.497070f,
 0.033961f, 9.630841f, 1.497070f,
 0.562201f, 9.487794f, 1.387064f,
 0.562201f, 9.487794f, 1.387064f,
 0.936363f, 9.480838f, 1.137341f,
 0.936363f, 9.480838f, 1.137341f,
 0.562201f, 9.487794f, 1.387064f,
 0.936363f, 9.417588f, 1.330003f,
 1.272911f, 7.808765f, 0.802844f,
 0.936363f, 9.417588f, 1.330003f,
 0.936363f, 9.417588f, 1.330003f,
 0.429582f, 7.909797f, 0.494509f,
 0.442211f, 7.807796f, 0.805801f,
 0.442211f, 7.807796f, 0.805801f,
 0.033961f, 7.720111f, 1.073405f,
 0.442211f, 7.807796f, 0.805801f,
 0.445001f, 7.518031f, 0.915412f,
 0.445001f, 7.518031f, 0.915412f,
 0.432372f, 7.192984f, 0.819078f,
 0.432372f, 7.192984f, 0.819078f,
 0.432372f, 7.192984f, 0.819078f,
 0.782250f, 7.172352f, 0.882044f,
 1.272911f, 7.808765f, 0.802844f,
 0.782250f, 7.508923f, 0.943207f,
 0.782250f, 7.508923f, 0.943207f,
 0.782250f, 7.172352f, 0.882044f,
 0.429582f, 7.909797f, 0.494509f,
 0.776421f, 7.623848f, 0.400813f,
 0.371258f, 8.282945f, -0.644291f,
 0.371258f, 8.282945f, -0.644291f,
 0.776421f, 7.623848f, 0.400813f,
 1.200907f, 7.884923f, -0.621514f,
 0.033961f, 7.664227f, 0.375033f,
 0.429582f, 7.909797f, 0.494509f,
 0.429582f, 7.909797f, 0.494509f,
 0.033961f, 7.664227f, 0.375033f,
 0.776421f, 7.623848f, 0.400813f,
 0.033961f, 8.310200f, -0.727469f,
 0.371258f, 8.282945f, -0.644291f,
 0.033961f, 7.917292f, -0.720271f,
 0.033961f, 7.917292f, -0.720271f,
 0.371258f, 8.282945f, -0.644291f,
 1.200907f, 7.884923f, -0.621514f,
 0.971581f, 6.804192f, 0.220750f,
 0.684600f, 4.777358f, -0.511215f,
 0.700363f, 4.777358f, -1.207919f,
 0.684600f, 4.777358f, -0.511215f,
 0.684600f, 4.777358f, -0.511215f,
 1.176059f, 3.090177f, 0.785630f,
 0.033961f, 4.777366f, -0.339053f,
 0.684600f, 4.777358f, -0.511215f,
 0.684600f, 4.777358f, -0.511215f,
 0.033961f, 4.777366f, -1.613110f,
 0.700363f, 4.777358f, -1.207919f,
 0.700363f, 4.777358f, -1.207919f,
 0.776421f, 7.623848f, 0.400813f,
 1.200907f, 7.884923f, -0.621514f,
 1.200907f, 7.884923f, -0.621514f,
 0.971581f, 6.804192f, 0.220750f,
 0.776421f, 7.623848f, 0.400813f,
 0.776421f, 7.623848f, 0.400813f,
 0.997360f, 6.804192f, -0.932553f,
 0.971581f, 6.804192f, 0.220750f,
 0.971581f, 6.804192f, 0.220750f,
 0.978586f, 7.070189f, 0.535876f,
 1.200907f, 7.884923f, -0.621514f,
 0.997360f, 6.804192f, -0.932553f,
 0.997360f, 6.804192f, -0.932553f,
 0.978586f, 7.070189f, 0.535876f,
 2.096591f, 6.141197f, 0.514281f,
 2.096591f, 6.141197f, 0.514281f,
 2.096591f, 6.141197f, 0.514281f,
 1.719510f, 6.097676f, 1.756688f,
 1.719510f, 6.097676f, 1.756688f,
 1.176059f, 3.090177f, 0.785630f,
 1.773810f, 0.918579f, 1.445045f,
 1.773810f, 0.918579f, 1.445045f,
 -0.868441f, 9.480838f, 1.137341f,
 -0.723264f, 9.267914f, -0.080701f,
 -0.723264f, 9.267914f, -0.080701f,
 -0.749646f, 8.416309f, -0.513991f,
 -0.723264f, 9.267914f, -0.080701f,
 -0.303336f, 8.282945f, -0.644291f,
 -0.303336f, 8.282945f, -0.644291f,
 -0.723264f, 9.267914f, -0.080701f,
 -0.303336f, 8.282945f, -0.644291f,
 -0.494279f, 9.487794f, 1.387064f,
 0.033961f, 9.630841f, 1.497070f,
 0.033961f, 9.630841f, 1.497070f,
 -0.868441f, 9.417588f, 1.330003f,
 -0.494279f, 9.487794f, 1.387064f,
 -0.868441f, 9.480838f, 1.137341f,
 -0.868441f, 9.480838f, 1.137341f,
 -0.494279f, 9.487794f, 1.387064f,
 -0.868441f, 9.417588f, 1.330003f,
 -0.868441f, 9.417588f, 1.330003f,
 -1.204989f, 7.808765f, 0.802844f,
 0.033961f, 7.720111f, 1.073405f,
 -0.374288f, 7.807796f, 0.805801f,
 -0.374288f, 7.807796f, 0.805801f,
 -0.361660f, 7.909797f, 0.494509f,
 -0.374288f, 7.807796f, 0.805801f,
 -0.377078f, 7.518031f, 0.915412f,
 -0.377078f, 7.518031f, 0.915412f,
 -0.364450f, 7.192984f, 0.819078f,
 -0.364450f, 7.192984f, 0.819078f,
 -0.364450f, 7.192984f, 0.819078f,
 -0.714328f, 7.172352f, 0.882044f,
 -0.714328f, 7.172352f, 0.882044f,
 -0.714328f, 7.508923f, 0.943207f,
 -0.714328f, 7.508923f, 0.943207f,
 -1.204989f, 7.808765f, 0.802844f,
 -1.132985f, 7.884923f, -0.621514f,
 -0.708500f, 7.623848f, 0.400813f,
 -0.303336f, 8.282945f, -0.644291f,
 -0.303336f, 8.282945f, -0.644291f,
 -0.708500f, 7.623848f, 0.400813f,
 -0.361660f, 7.909797f, 0.494509f,
 -0.708500f, 7.623848f, 0.400813f,
 0.033961f, 7.664227f, 0.375033f,
 -0.361660f, 7.909797f, 0.494509f,
 -0.361660f, 7.909797f, 0.494509f,
 0.033961f, 7.664227f, 0.375033f,
 0.033961f, 8.310200f, -0.727469f,
 0.033961f, 7.917292f, -0.720271f,
 -0.303336f, 8.282945f, -0.644291f,
 -0.303336f, 8.282945f, -0.644291f,
 0.033961f, 7.917292f, -0.720271f,
 -1.132985f, 7.884923f, -0.621514f,
 -0.903658f, 6.804192f, 0.220750f,
 -0.616678f, 4.777358f, -0.511215f,
 -0.632440f, 4.777358f, -1.207919f,
 -0.616678f, 4.777358f, -0.511215f,
 -0.616678f, 4.777358f, -0.511215f,
 -1.091011f, 3.093386f, 0.782940f,
 -0.616678f, 4.777358f, -0.511215f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.777358f, -0.511215f,
 0.043391f, 3.141800f, 0.906938f,
 0.033961f, 4.777366f, -0.339053f,
 0.033961f, 4.777366f, -1.613110f,
 0.031347f, 2.418044f, -0.921805f,
 -0.632440f, 4.777358f, -1.207919f,
 -0.632440f, 4.777358f, -1.207919f,
 0.031347f, 2.418044f, -0.921805f,
 -1.133781f, 2.548493f, -0.559808f,
 -0.708500f, 7.623848f, 0.400813f,
 -1.132985f, 7.884923f, -0.621514f,
 -1.508089f, 7.408361f, 0.068999f,
 -1.132985f, 7.884923f, -0.621514f,
 -1.128899f, 6.997942f, -0.376926f,
 -1.508089f, 7.408361f, 0.068999f,
 -1.508089f, 7.408361f, 0.068999f,
 -1.242787f, 7.278356f, 0.595560f,
 -0.708500f, 7.623848f, 0.400813f,
 -0.708500f, 7.623848f, 0.400813f,
 -1.242787f, 7.278356f, 0.595560f,
 -0.903658f, 6.804192f, 0.220750f,
 -1.242787f, 7.278356f, 0.595560f,
 -0.801297f, 6.807777f, 0.080338f,
 -0.903658f, 6.804192f, 0.220750f,
 -0.903658f, 6.804192f, 0.220750f,
 -0.801297f, 6.807777f, 0.080338f,
 -0.929437f, 6.804192f, -0.932553f,
 -0.801297f, 6.807777f, 0.080338f,
 -1.128899f, 6.997942f, -0.376926f,
 -0.929437f, 6.804192f, -0.932553f,
 -0.929437f, 6.804192f, -0.932553f,
 -1.128899f, 6.997942f, -0.376926f,
 -1.132985f, 7.884923f, -0.621514f,
 -2.066481f, 5.771588f, 0.731734f,
 -1.840377f, 5.928858f, 0.862376f,
 -1.508089f, 7.408361f, 0.068999f,
 -1.508089f, 7.408361f, 0.068999f,
 -1.840377f, 5.928858f, 0.862376f,
 -1.242787f, 7.278356f, 0.595560f,
 -1.911147f, 5.406302f, 2.049637f,
 -1.840377f, 5.928858f, 0.862376f,
 -2.232111f, 5.183051f, 1.864183f,
 -2.232111f, 5.183051f, 1.864183f,
 -1.840377f, 5.928858f, 0.862376f,
 -2.066481f, 5.771588f, 0.731734f,
 -1.751788f, 0.147726f, -0.745331f,
 -1.694144f, 0.917495f, 1.450330f,
 -1.133781f, 2.548493f, -0.559808f,
 -1.133781f, 2.548493f, -0.559808f,
 -1.694144f, 0.917495f, 1.450330f,
 -1.091011f, 3.093386f, 0.782940f,
 1.982450f, 5.417440f, 1.725566f,
 2.048666f, 5.899594f, 2.498014f,
 1.868018f, 5.181818f, 2.381375f,
 1.576837f, 5.530793f, 1.664488f,
 1.982450f, 5.417440f, 1.725566f,
 1.319409f, 5.347675f, 2.231009f,
 1.319409f, 5.347675f, 2.231009f,
 1.982450f, 5.417440f, 1.725566f,
 1.868018f, 5.181818f, 2.381375f,
 1.719510f, 6.097676f, 1.756688f,
 1.576837f, 5.530793f, 1.664488f,
 1.521786f, 6.152303f, 2.365225f,
 1.521786f, 6.152303f, 2.365225f,
 1.576837f, 5.530793f, 1.664488f,
 1.319409f, 5.347675f, 2.231009f,
 -1.612851f, 4.943268f, 1.833230f,
 -1.952363f, 5.220262f, 2.662895f,
 -1.527943f, 4.564413f, 2.352851f,
 -1.612851f, 4.943268f, 1.833230f,
 -1.527943f, 4.564413f, 2.352851f,
 -1.974662f, 4.780506f, 1.679271f,
 -1.974662f, 4.780506f, 1.679271f,
 -1.527943f, 4.564413f, 2.352851f,
 -2.037384f, 4.304798f, 2.197408f,
 -2.232111f, 5.183051f, 1.864183f,
 -1.974662f, 4.780506f, 1.679271f,
 -2.415041f, 4.891127f, 2.471332f,
 -2.415041f, 4.891127f, 2.471332f,
 -1.974662f, 4.780506f, 1.679271f,
 -2.037384f, 4.304798f, 2.197408f,
 -2.232111f, 5.183051f, 1.864183f,
 -2.415041f, 4.891127f, 2.471332f,
 -1.911147f, 5.406302f, 2.049637f,
 3.613937f, 0.183800f, 2.987080f,
 3.229240f, 0.456473f, 3.602990f,
 3.845108f, 7.793322f, -0.237385f,
 3.845108f, 7.793322f, -0.237385f,
 3.229240f, 0.456473f, 3.602990f,
 3.460410f, 8.065995f, 0.378524f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.176724f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.280107f, -0.049022f},
{ 0.826605f, -0.174463f, -0.535058f},
{ 0.904768f, 0.237994f, -0.353205f},
{ 0.857718f, -0.166183f, -0.486521f},
{ 0.363846f, 0.620410f, -0.694771f},
{ 0.549456f, 0.835522f, 0.000501f},
{ 0.485921f, 0.388733f, -0.782795f},
{ 0.520281f, -0.771921f, -0.365302f},
{ 0.517275f, -0.262965f, 0.814417f},
{ 0.414371f, -0.213010f, 0.884829f},
{ 0.188090f, -0.389161f, 0.901763f},
{ 0.238558f, 0.026782f, 0.970759f},
{ -0.000000f, 0.147768f, 0.989022f},
{ 0.000000f, -0.509962f, 0.860197f},
{ -0.000000f, 0.739558f, -0.673093f},
{ -0.000000f, 0.989722f, 0.143005f},
{ 0.000000f, 0.314914f, -0.949120f},
{ 0.453143f, 0.066902f, 0.888924f},
{ -0.760936f, 0.044241f, 0.647317f},
{ 0.383690f, -0.711037f, -0.589244f},
{ -0.216586f, -0.651358f, -0.727203f},
{ 0.000000f, -0.988659f, 0.150177f},
{ 0.330813f, 0.549463f, 0.767237f},
{ 0.510378f, 0.677715f, -0.529355f},
{ 0.000000f, -0.002037f, 0.999998f},
{ 0.000000f, 0.259285f, -0.965801f},
{ 0.377803f, -0.768650f, 0.516180f},
{ 0.563620f, 0.197740f, 0.802017f},
{ -0.903391f, -0.341357f, 0.259540f},
{ -0.562049f, 0.649724f, 0.511821f},
{ 0.000000f, -0.272422f, 0.962178f},
{ 0.650736f, -0.321793f, 0.687744f},
{ 0.696875f, 0.021935f, -0.716857f},
{ -0.000000f, 0.219171f, -0.975687f},
{ 0.886853f, 0.143519f, 0.439197f},
{ 0.750399f, -0.020745f, -0.660660f},
{ 0.000201f, -0.034038f, -0.999421f},
{ -0.000291f, 0.099410f, 0.995047f},
{ 0.831499f, 0.166734f, -0.529914f},
{ 0.728537f, 0.458709f, 0.508744f},
{ -0.000055f, 0.519586f, 0.854418f},
{ -0.005724f, 0.020745f, -0.999768f},
{ 0.632204f, 0.635107f, 0.443799f},
{ 0.887505f, 0.191374f, -0.419179f},
{ -0.391573f, -0.337673f, 0.855948f},
{ -0.060897f, -0.914050f, -0.401004f},
{ 0.940433f, 0.252555f, -0.227601f},
{ 0.640997f, -0.626016f, -0.444102f},
{ -0.619261f, 0.232820f, 0.749874f},
{ -0.702434f, -0.472726f, -0.532087f},
{ 0.919859f, 0.354598f, 0.167693f},
{ 0.616913f, -0.783126f, -0.078303f},
{ -0.495612f, 0.851695f, -0.170247f},
{ -0.877843f, -0.263478f, -0.399964f},
{ 0.000383f, 0.372252f, 0.928132f},
{ 0.834770f, 0.360299f, 0.416345f},
{ 0.760068f, 0.253555f, -0.598336f},
{ -0.001078f, 0.195277f, -0.980748f},
{ -0.958716f, 0.280108f, -0.049022f},
{ -0.904768f, 0.237994f, -0.353205f},
{ -0.826605f, -0.174463f, -0.535057f},
{ -0.857718f, -0.166183f, -0.486521f},
{ -0.549456f, 0.835523f, 0.000501f},
{ -0.363846f, 0.620410f, -0.694771f},
{ -0.485922f, 0.388733f, -0.782794f},
{ -0.520281f, -0.771920f, -0.365304f},
{ -0.238558f, 0.026782f, 0.970759f},
{ -0.414371f, -0.213011f, 0.884829f},
{ -0.188090f, -0.389161f, 0.901763f},
{ -0.517274f, -0.262966f, 0.814418f},
{ -0.453142f, 0.066902f, 0.888924f},
{ -0.383690f, -0.711037f, -0.589244f},
{ 0.760936f, 0.044240f, 0.647317f},
{ 0.216585f, -0.651358f, -0.727202f},
{ -0.540022f, 0.684473f, -0.489769f},
{ -0.332776f, 0.529515f, 0.780304f},
{ -0.333135f, -0.942782f, 0.013532f},
{ 0.814668f, -0.339507f, 0.470161f},
{ -0.833399f, -0.201887f, 0.514478f},
{ 0.178608f, 0.424354f, 0.887707f},
{ -0.634475f, -0.302415f, 0.711327f},
{ -0.712208f, 0.024745f, -0.701532f},
{ -0.750842f, -0.021270f, -0.660139f},
{ -0.885113f, 0.142190f, 0.443123f},
{ -0.836680f, 0.169563f, -0.520784f},
{ -0.720673f, 0.460249f, 0.518460f},
{ -0.898520f, 0.409925f, -0.156917f},
{ -0.669374f, -0.378193f, -0.639460f},
{ 0.001623f, 0.263128f, 0.964760f},
{ 0.819175f, -0.572486f, 0.034810f},
{ -0.341680f, -0.597082f, -0.725774f},
{ -0.936046f, 0.085593f, -0.341310f},
{ 0.158245f, 0.495709f, 0.853950f},
{ 0.959043f, -0.270956f, 0.082581f},
{ -0.978569f, 0.172847f, -0.111922f},
{ -0.344024f, -0.729746f, -0.590863f},
{ 0.302029f, 0.884583f, 0.355374f},
{ 0.997577f, 0.002455f, -0.069533f},
{ -0.830355f, 0.362739f, 0.423003f},
{ -0.762069f, 0.255839f, -0.594809f},
{ -0.867056f, -0.150499f, -0.474936f},
{ -0.841422f, -0.190861f, -0.505551f},
{ -0.771317f, -0.252421f, -0.584255f},
{ -0.758017f, -0.273078f, -0.592317f},
{ -0.867904f, -0.171220f, -0.466291f},
{ -0.867904f, -0.171220f, -0.466291f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
31, 26, 32,
32, 26, 29,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
183, 41, 184,
185, 41, 45,
41, 38, 45,
45, 38, 42,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
52, 34, 53,
53, 34, 37,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
29, 79, 32,
32, 79, 77,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
37, 91, 53,
53, 91, 81,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: defeat Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86