package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phaidleb {

static String TextureName = "Idle";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.881715f, 1.131793f,
 0.936363f, 9.572774f, 1.212579f,
 0.791186f, 9.053687f, -0.107663f,
 0.817567f, 8.117572f, -0.299129f,
 0.562201f, 9.655617f, 1.248937f,
 0.444292f, 9.457250f, -0.192649f,
 0.371258f, 7.954382f, -0.389314f,
 0.442211f, 7.881567f, 1.134901f,
 0.033961f, 7.868129f, 1.416184f,
 0.033961f, 9.822749f, 1.316985f,
 0.033961f, 9.622798f, -0.184741f,
 0.033961f, 7.958559f, -0.476744f,
 0.033961f, 9.963347f, 0.543856f,
 0.541219f, 9.861512f, 0.538991f,
 0.936363f, 9.582565f, 1.010037f,
 0.936363f, 7.894036f, 0.873878f,
 0.429582f, 7.897198f, 0.807697f,
 0.033961f, 7.897198f, 0.807697f,
 0.445001f, 7.631336f, 1.317556f,
 0.782250f, 7.629940f, 1.346772f,
 0.432372f, 7.292377f, 1.311043f,
 0.782250f, 7.289215f, 1.377227f,
 1.200907f, 7.576716f, -0.261610f,
 0.776421f, 7.596633f, 0.793338f,
 0.033961f, 7.628712f, 0.757757f,
 0.033961f, 7.581684f, -0.365418f,
 0.700363f, 4.652187f, -0.069943f,
 0.684600f, 4.652187f, 0.626761f,
 0.033961f, 4.652195f, 0.798922f,
 0.033961f, 4.652195f, -0.475135f,
 0.971581f, 6.679021f, 0.962299f,
 0.997360f, 6.679021f, -0.191005f,
 0.033961f, 6.848502f, -0.346137f,
 0.033961f, 6.774143f, 1.200014f,
 1.813507f, -0.067039f, -0.927435f,
 1.774010f, -0.066519f, 1.419795f,
 0.041985f, -0.073257f, 1.909017f,
 0.027967f, -0.049224f, -1.612932f,
 1.488884f, 7.098330f, 0.028279f,
 1.366505f, 7.414460f, 0.657694f,
 0.972272f, 7.028674f, 0.903260f,
 1.109503f, 6.665577f, 0.174466f,
 2.246959f, 5.665798f, 1.030930f,
 2.240666f, 6.011268f, 1.135253f,
 1.941169f, 6.067615f, 1.128145f,
 1.948294f, 5.669314f, 1.005268f,
 2.086962f, 4.829376f, 2.832318f,
 2.074148f, 5.545296f, 3.053078f,
 1.491966f, 5.659624f, 2.968873f,
 1.506256f, 4.857599f, 2.717975f,
 0.042538f, 2.353169f, 1.420177f,
 1.175069f, 2.348315f, 1.281821f,
 1.198789f, 2.307092f, -0.207030f,
 0.028775f, 2.303193f, -0.587018f,
 -0.868441f, 9.582565f, 1.010037f,
 -0.868441f, 7.894036f, 0.873878f,
 -0.749646f, 8.117572f, -0.299129f,
 -0.723264f, 9.053687f, -0.107663f,
 -0.376369f, 9.457250f, -0.192649f,
 -0.473295f, 9.861512f, 0.538991f,
 -0.303336f, 7.954382f, -0.389314f,
 -0.361660f, 7.897198f, 0.807697f,
 -0.374288f, 7.881567f, 1.134901f,
 -1.204989f, 7.881715f, 1.131793f,
 -0.868441f, 9.572774f, 1.212579f,
 -0.494279f, 9.655617f, 1.248937f,
 -0.714328f, 7.629940f, 1.346772f,
 -0.377078f, 7.631336f, 1.317556f,
 -0.364450f, 7.292377f, 1.311043f,
 -0.714328f, 7.289215f, 1.377227f,
 -0.708500f, 7.596633f, 0.793338f,
 -1.132985f, 7.576716f, -0.261610f,
 -1.854091f, 3.350269f, -0.055591f,
 -2.417728f, 3.586939f, 0.377700f,
 -2.113497f, 3.680886f, 0.885355f,
 -1.480205f, 3.418654f, 0.398968f,
 -0.903658f, 6.679021f, 0.962299f,
 -0.929437f, 6.679021f, -0.191005f,
 -0.616678f, 4.652187f, 0.626761f,
 -0.632440f, 4.652187f, -0.069943f,
 -1.091976f, 2.349579f, 1.289264f,
 -1.136016f, 2.305770f, -0.188363f,
 -1.527685f, 7.198596f, 0.317370f,
 -0.965147f, 7.112237f, -0.115264f,
 -1.378305f, 6.830398f, 0.771979f,
 -0.726018f, 6.733928f, 0.274961f,
 -1.834811f, 5.423811f, -0.079483f,
 -1.564012f, 5.307826f, -0.288020f,
 -1.695170f, 5.441362f, 0.190918f,
 -1.381558f, 5.309739f, -0.050155f,
 -1.693917f, -0.068559f, 1.429223f,
 -1.752351f, -0.066743f, -0.917592f,
 1.661778f, 5.747676f, 2.355842f,
 2.086929f, 5.667690f, 2.365932f,
 2.095861f, 5.177278f, 2.217840f,
 1.671892f, 5.182270f, 2.181411f,
 -1.955163f, 4.240786f, 0.613623f,
 -1.509977f, 4.053940f, 0.271408f,
 -1.768977f, 4.051225f, -0.066250f,
 -2.153391f, 4.215873f, 0.229779f,
 4.117198f, 0.744706f, 0.142615f,
 3.971975f, 0.385653f, 0.814685f,
 0.504806f, 9.736663f, 3.402387f,
 -0.257358f, 8.612261f, 5.103725f,
 0.944462f, 7.742462f, 3.195581f,
 0.799239f, 7.383409f, 3.867652f,
 0.791186f, 9.053687f, -0.107663f,
 0.791186f, 9.053687f, -0.107663f,
 0.936363f, 9.582565f, 1.010037f,
 0.817567f, 8.117572f, -0.299129f,
 0.371258f, 7.954382f, -0.389314f,
 0.791186f, 9.053687f, -0.107663f,
 0.791186f, 9.053687f, -0.107663f,
 0.371258f, 7.954382f, -0.389314f,
 0.371258f, 7.954382f, -0.389314f,
 0.033961f, 9.822749f, 1.316985f,
 0.033961f, 9.822749f, 1.316985f,
 0.562201f, 9.655617f, 1.248937f,
 0.562201f, 9.655617f, 1.248937f,
 0.936363f, 9.582565f, 1.010037f,
 0.936363f, 9.582565f, 1.010037f,
 0.562201f, 9.655617f, 1.248937f,
 0.936363f, 9.572774f, 1.212579f,
 1.272911f, 7.881715f, 1.131793f,
 0.936363f, 9.572774f, 1.212579f,
 0.936363f, 9.572774f, 1.212579f,
 0.429582f, 7.897198f, 0.807697f,
 0.442211f, 7.881567f, 1.134901f,
 0.442211f, 7.881567f, 1.134901f,
 0.033961f, 7.868129f, 1.416184f,
 0.442211f, 7.881567f, 1.134901f,
 0.445001f, 7.631336f, 1.317556f,
 0.445001f, 7.631336f, 1.317556f,
 0.432372f, 7.292377f, 1.311043f,
 0.432372f, 7.292377f, 1.311043f,
 0.432372f, 7.292377f, 1.311043f,
 0.782250f, 7.289215f, 1.377227f,
 1.272911f, 7.881715f, 1.131793f,
 0.782250f, 7.629940f, 1.346772f,
 0.782250f, 7.629940f, 1.346772f,
 0.782250f, 7.289215f, 1.377227f,
 0.429582f, 7.897198f, 0.807697f,
 0.776421f, 7.596633f, 0.793338f,
 0.371258f, 7.954382f, -0.389314f,
 0.371258f, 7.954382f, -0.389314f,
 0.776421f, 7.596633f, 0.793338f,
 1.200907f, 7.576716f, -0.261610f,
 0.033961f, 7.628712f, 0.757757f,
 0.429582f, 7.897198f, 0.807697f,
 0.429582f, 7.897198f, 0.807697f,
 0.033961f, 7.628712f, 0.757757f,
 0.776421f, 7.596633f, 0.793338f,
 0.033961f, 7.958559f, -0.476744f,
 0.371258f, 7.954382f, -0.389314f,
 0.033961f, 7.581684f, -0.365418f,
 0.033961f, 7.581684f, -0.365418f,
 0.371258f, 7.954382f, -0.389314f,
 1.200907f, 7.576716f, -0.261610f,
 0.971581f, 6.679021f, 0.962299f,
 0.684600f, 4.652187f, 0.626761f,
 0.700363f, 4.652187f, -0.069943f,
 0.684600f, 4.652187f, 0.626761f,
 0.684600f, 4.652187f, 0.626761f,
 1.175069f, 2.348315f, 1.281821f,
 0.033961f, 4.652195f, 0.798922f,
 0.684600f, 4.652187f, 0.626761f,
 0.684600f, 4.652187f, 0.626761f,
 0.033961f, 4.652195f, -0.475135f,
 0.700363f, 4.652187f, -0.069943f,
 0.700363f, 4.652187f, -0.069943f,
 0.776421f, 7.596633f, 0.793338f,
 1.200907f, 7.576716f, -0.261610f,
 1.200907f, 7.576716f, -0.261610f,
 0.971581f, 6.679021f, 0.962299f,
 0.776421f, 7.596633f, 0.793338f,
 0.776421f, 7.596633f, 0.793338f,
 0.997360f, 6.679021f, -0.191005f,
 0.971581f, 6.679021f, 0.962299f,
 0.971581f, 6.679021f, 0.962299f,
 0.972272f, 7.028674f, 0.903260f,
 1.200907f, 7.576716f, -0.261610f,
 0.997360f, 6.679021f, -0.191005f,
 0.997360f, 6.679021f, -0.191005f,
 0.972272f, 7.028674f, 0.903260f,
 1.941169f, 6.067615f, 1.128145f,
 1.941169f, 6.067615f, 1.128145f,
 1.941169f, 6.067615f, 1.128145f,
 1.661778f, 5.747676f, 2.355842f,
 1.661778f, 5.747676f, 2.355842f,
 1.175069f, 2.348315f, 1.281821f,
 1.774010f, -0.066519f, 1.419795f,
 1.774010f, -0.066519f, 1.419795f,
 -0.868441f, 9.582565f, 1.010037f,
 -0.723264f, 9.053687f, -0.107663f,
 -0.723264f, 9.053687f, -0.107663f,
 -0.749646f, 8.117572f, -0.299129f,
 -0.723264f, 9.053687f, -0.107663f,
 -0.303336f, 7.954382f, -0.389314f,
 -0.303336f, 7.954382f, -0.389314f,
 -0.723264f, 9.053687f, -0.107663f,
 -0.303336f, 7.954382f, -0.389314f,
 -0.494279f, 9.655617f, 1.248937f,
 0.033961f, 9.822749f, 1.316985f,
 0.033961f, 9.822749f, 1.316985f,
 -0.868441f, 9.572774f, 1.212579f,
 -0.494279f, 9.655617f, 1.248937f,
 -0.868441f, 9.582565f, 1.010037f,
 -0.868441f, 9.582565f, 1.010037f,
 -0.494279f, 9.655617f, 1.248937f,
 -0.868441f, 9.572774f, 1.212579f,
 -0.868441f, 9.572774f, 1.212579f,
 -1.204989f, 7.881715f, 1.131793f,
 0.033961f, 7.868129f, 1.416184f,
 -0.374288f, 7.881567f, 1.134901f,
 -0.374288f, 7.881567f, 1.134901f,
 -0.361660f, 7.897198f, 0.807697f,
 -0.374288f, 7.881567f, 1.134901f,
 -0.377078f, 7.631336f, 1.317556f,
 -0.377078f, 7.631336f, 1.317556f,
 -0.364450f, 7.292377f, 1.311043f,
 -0.364450f, 7.292377f, 1.311043f,
 -0.364450f, 7.292377f, 1.311043f,
 -0.714328f, 7.289215f, 1.377227f,
 -0.714328f, 7.289215f, 1.377227f,
 -0.714328f, 7.629940f, 1.346772f,
 -0.714328f, 7.629940f, 1.346772f,
 -1.204989f, 7.881715f, 1.131793f,
 -1.132985f, 7.576716f, -0.261610f,
 -0.708500f, 7.596633f, 0.793338f,
 -0.303336f, 7.954382f, -0.389314f,
 -0.303336f, 7.954382f, -0.389314f,
 -0.708500f, 7.596633f, 0.793338f,
 -0.361660f, 7.897198f, 0.807697f,
 -0.708500f, 7.596633f, 0.793338f,
 0.033961f, 7.628712f, 0.757757f,
 -0.361660f, 7.897198f, 0.807697f,
 -0.361660f, 7.897198f, 0.807697f,
 0.033961f, 7.628712f, 0.757757f,
 0.033961f, 7.958559f, -0.476744f,
 0.033961f, 7.581684f, -0.365418f,
 -0.303336f, 7.954382f, -0.389314f,
 -0.303336f, 7.954382f, -0.389314f,
 0.033961f, 7.581684f, -0.365418f,
 -1.132985f, 7.576716f, -0.261610f,
 -0.903658f, 6.679021f, 0.962299f,
 -0.616678f, 4.652187f, 0.626761f,
 -0.632440f, 4.652187f, -0.069943f,
 -0.616678f, 4.652187f, 0.626761f,
 -0.616678f, 4.652187f, 0.626761f,
 -1.091976f, 2.349579f, 1.289264f,
 -0.616678f, 4.652187f, 0.626761f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.652187f, 0.626761f,
 0.042538f, 2.353169f, 1.420177f,
 0.033961f, 4.652195f, 0.798922f,
 0.033961f, 4.652195f, -0.475135f,
 0.028775f, 2.303193f, -0.587018f,
 -0.632440f, 4.652187f, -0.069943f,
 -0.632440f, 4.652187f, -0.069943f,
 0.028775f, 2.303193f, -0.587018f,
 -1.136016f, 2.305770f, -0.188363f,
 -1.132985f, 7.576716f, -0.261610f,
 -0.965147f, 7.112237f, -0.115264f,
 -0.708500f, 7.596633f, 0.793338f,
 -0.965147f, 7.112237f, -0.115264f,
 -1.527685f, 7.198596f, 0.317370f,
 -0.708500f, 7.596633f, 0.793338f,
 -1.527685f, 7.198596f, 0.317370f,
 -1.378305f, 6.830398f, 0.771979f,
 -0.708500f, 7.596633f, 0.793338f,
 -0.708500f, 7.596633f, 0.793338f,
 -1.378305f, 6.830398f, 0.771979f,
 -0.903658f, 6.679021f, 0.962299f,
 -0.903658f, 6.679021f, 0.962299f,
 -1.378305f, 6.830398f, 0.771979f,
 -0.929437f, 6.679021f, -0.191005f,
 -1.378305f, 6.830398f, 0.771979f,
 -0.726018f, 6.733928f, 0.274961f,
 -0.929437f, 6.679021f, -0.191005f,
 -0.726018f, 6.733928f, 0.274961f,
 -0.965147f, 7.112237f, -0.115264f,
 -0.929437f, 6.679021f, -0.191005f,
 -0.929437f, 6.679021f, -0.191005f,
 -0.965147f, 7.112237f, -0.115264f,
 -1.132985f, 7.576716f, -0.261610f,
 -1.527685f, 7.198596f, 0.317370f,
 -1.834811f, 5.423811f, -0.079483f,
 -1.378305f, 6.830398f, 0.771979f,
 -1.378305f, 6.830398f, 0.771979f,
 -1.834811f, 5.423811f, -0.079483f,
 -1.695170f, 5.441362f, 0.190918f,
 -1.955163f, 4.240786f, 0.613623f,
 -1.695170f, 5.441362f, 0.190918f,
 -2.153391f, 4.215873f, 0.229779f,
 -2.153391f, 4.215873f, 0.229779f,
 -1.695170f, 5.441362f, 0.190918f,
 -1.834811f, 5.423811f, -0.079483f,
 -1.752351f, -0.066743f, -0.917592f,
 -1.693917f, -0.068559f, 1.429223f,
 -1.136016f, 2.305770f, -0.188363f,
 -1.136016f, 2.305770f, -0.188363f,
 -1.693917f, -0.068559f, 1.429223f,
 -1.091976f, 2.349579f, 1.289264f,
 2.095861f, 5.177278f, 2.217840f,
 2.074148f, 5.545296f, 3.053078f,
 2.086962f, 4.829376f, 2.832318f,
 1.671892f, 5.182270f, 2.181411f,
 2.095861f, 5.177278f, 2.217840f,
 1.506256f, 4.857599f, 2.717975f,
 1.506256f, 4.857599f, 2.717975f,
 2.095861f, 5.177278f, 2.217840f,
 2.086962f, 4.829376f, 2.832318f,
 1.661778f, 5.747676f, 2.355842f,
 1.671892f, 5.182270f, 2.181411f,
 1.491966f, 5.659624f, 2.968873f,
 1.491966f, 5.659624f, 2.968873f,
 1.671892f, 5.182270f, 2.181411f,
 1.506256f, 4.857599f, 2.717975f,
 -1.509977f, 4.053940f, 0.271408f,
 -2.113497f, 3.680886f, 0.885355f,
 -1.480205f, 3.418654f, 0.398968f,
 -1.509977f, 4.053940f, 0.271408f,
 -1.480205f, 3.418654f, 0.398968f,
 -1.768977f, 4.051225f, -0.066250f,
 -1.768977f, 4.051225f, -0.066250f,
 -1.480205f, 3.418654f, 0.398968f,
 -1.854091f, 3.350269f, -0.055591f,
 -2.153391f, 4.215873f, 0.229779f,
 -1.768977f, 4.051225f, -0.066250f,
 -2.417728f, 3.586939f, 0.377700f,
 -2.417728f, 3.586939f, 0.377700f,
 -1.768977f, 4.051225f, -0.066250f,
 -1.854091f, 3.350269f, -0.055591f,
 -2.153391f, 4.215873f, 0.229779f,
 -2.417728f, 3.586939f, 0.377700f,
 -1.955163f, 4.240786f, 0.613623f,
 4.117198f, 0.744706f, 0.142615f,
 3.971975f, 0.385653f, 0.814685f,
 0.944462f, 7.742462f, 3.195581f,
 0.944462f, 7.742462f, 3.195581f,
 3.971975f, 0.385653f, 0.814685f,
 0.799239f, 7.383409f, 3.867652f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.257016f, -0.121678f},
{ 0.826605f, -0.310346f, -0.469478f},
{ 0.904768f, 0.135602f, -0.403741f},
{ 0.857718f, -0.289468f, -0.424885f},
{ 0.363845f, 0.413529f, -0.834632f},
{ 0.549456f, 0.805629f, -0.221496f},
{ 0.485921f, 0.166792f, -0.857940f},
{ 0.520281f, -0.841232f, -0.147093f},
{ 0.517275f, -0.037143f, 0.855013f},
{ 0.414372f, 0.029724f, 0.909622f},
{ 0.188090f, -0.135597f, 0.972746f},
{ 0.238558f, 0.283728f, 0.928757f},
{ 0.000000f, 0.405218f, 0.914220f},
{ 0.000000f, -0.263101f, 0.964768f},
{ 0.000000f, 0.534153f, -0.845388f},
{ 0.000000f, 0.992147f, -0.125080f},
{ 0.000000f, 0.051437f, -0.998676f},
{ 0.453144f, 0.300665f, 0.839203f},
{ -0.760935f, 0.214628f, 0.612301f},
{ 0.383690f, -0.842033f, -0.379161f},
{ -0.216586f, -0.821151f, -0.528016f},
{ -0.000000f, -0.913230f, 0.407445f},
{ 0.364671f, 0.705194f, 0.608043f},
{ 0.498508f, 0.582382f, -0.642123f},
{ 0.000000f, 0.360257f, 0.932853f},
{ 0.000000f, -0.094921f, -0.995485f},
{ 0.599765f, -0.700012f, 0.387640f},
{ 0.534732f, 0.229973f, 0.813126f},
{ -0.761708f, -0.609402f, 0.220068f},
{ -0.685797f, 0.391517f, 0.613512f},
{ 0.000000f, -0.032200f, 0.999481f},
{ 0.740338f, -0.122250f, 0.661026f},
{ 0.666968f, -0.114054f, -0.736305f},
{ -0.000000f, 0.033817f, -0.999428f},
{ 0.834698f, 0.088905f, 0.543484f},
{ 0.825199f, 0.016598f, -0.564597f},
{ 0.000361f, -0.010494f, -0.999945f},
{ -0.000283f, 0.036945f, 0.999317f},
{ 0.827210f, 0.303678f, -0.472761f},
{ 0.744734f, 0.282153f, 0.604782f},
{ 0.003293f, 0.242481f, 0.970151f},
{ -0.033957f, 0.280302f, -0.959311f},
{ 0.654552f, 0.680303f, 0.329772f},
{ 0.833699f, 0.120945f, -0.538811f},
{ -0.149802f, -0.129925f, 0.980142f},
{ -0.147151f, -0.883487f, -0.444744f},
{ 0.901628f, 0.432415f, 0.009204f},
{ 0.764245f, -0.440716f, -0.470849f},
{ -0.708953f, 0.189317f, 0.679371f},
{ -0.693870f, -0.609466f, -0.383531f},
{ 0.798534f, 0.566357f, 0.203920f},
{ 0.799367f, -0.564380f, -0.206126f},
{ -0.715492f, 0.697924f, -0.031202f},
{ -0.796016f, -0.435438f, -0.420419f},
{ 0.002412f, 0.140707f, 0.990048f},
{ 0.817970f, 0.235291f, 0.524942f},
{ 0.791522f, 0.355734f, -0.496937f},
{ -0.026634f, 0.390301f, -0.920302f},
{ -0.958716f, 0.257017f, -0.121678f},
{ -0.904768f, 0.135603f, -0.403742f},
{ -0.826605f, -0.310346f, -0.469477f},
{ -0.857718f, -0.289468f, -0.424885f},
{ -0.549456f, 0.805629f, -0.221497f},
{ -0.363846f, 0.413529f, -0.834632f},
{ -0.485922f, 0.166791f, -0.857940f},
{ -0.520281f, -0.841232f, -0.147094f},
{ -0.238557f, 0.283728f, 0.928757f},
{ -0.414371f, 0.029724f, 0.909622f},
{ -0.188090f, -0.135598f, 0.972746f},
{ -0.517274f, -0.037143f, 0.855013f},
{ -0.453143f, 0.300665f, 0.839204f},
{ -0.383691f, -0.842033f, -0.379160f},
{ 0.760937f, 0.214627f, 0.612299f},
{ 0.216586f, -0.821151f, -0.528017f},
{ -0.653650f, 0.478486f, -0.586338f},
{ -0.450542f, 0.675615f, 0.583572f},
{ -0.093805f, -0.679313f, -0.727829f},
{ 0.715919f, -0.586212f, 0.379231f},
{ -0.868838f, -0.487678f, -0.085382f},
{ -0.169218f, -0.317474f, 0.933046f},
{ -0.691689f, -0.182156f, 0.698846f},
{ -0.703904f, -0.072565f, -0.706579f},
{ -0.825617f, 0.016953f, -0.563976f},
{ -0.833018f, 0.088168f, 0.546176f},
{ -0.852019f, 0.290151f, -0.435747f},
{ -0.736084f, 0.281566f, 0.615549f},
{ -0.568737f, 0.291646f, -0.769078f},
{ -0.810676f, 0.514552f, -0.279358f},
{ -0.468487f, -0.204086f, 0.859575f},
{ 0.985159f, -0.165213f, 0.046544f},
{ -0.003366f, -0.032990f, -0.999450f},
{ -0.866962f, 0.212089f, -0.450994f},
{ -0.022788f, -0.108942f, 0.993787f},
{ 0.936526f, -0.248922f, 0.246896f},
{ -0.925516f, 0.220167f, -0.308134f},
{ 0.007123f, -0.105258f, -0.994420f},
{ -0.019945f, 0.381142f, 0.924301f},
{ 0.950515f, 0.031610f, 0.309065f},
{ -0.813837f, 0.234210f, 0.531803f},
{ -0.808986f, 0.362325f, -0.462885f},
{ -0.912653f, -0.244273f, -0.327711f},
{ -0.892707f, -0.241019f, -0.380769f},
{ -0.848933f, -0.202715f, -0.488078f},
{ -0.835352f, -0.205335f, -0.509925f},
{ -0.904260f, -0.263356f, -0.336092f},
{ -0.904260f, -0.263356f, -0.336092f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
37, 91, 53,
53, 91, 81,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: Idle Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86