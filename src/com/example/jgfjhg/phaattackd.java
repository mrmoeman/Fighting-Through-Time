package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phaattackd {

static String TextureName = "attack";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 4.193719f, 3.477571f,
 0.936363f, 5.325951f, 4.736244f,
 0.791186f, 5.899077f, 3.438547f,
 0.817567f, 5.376603f, 2.638552f,
 0.562201f, 5.358391f, 4.820697f,
 0.444292f, 6.243381f, 3.665573f,
 0.371258f, 5.325895f, 2.459129f,
 0.442211f, 4.191406f, 3.479652f,
 0.033961f, 3.982044f, 3.667982f,
 0.033961f, 5.427606f, 4.987350f,
 0.033961f, 6.354222f, 3.788792f,
 0.033961f, 5.390970f, 2.400591f,
 0.033961f, 6.075980f, 4.543384f,
 0.541219f, 6.007797f, 4.467587f,
 0.936363f, 5.476787f, 4.600716f,
 0.936363f, 4.385688f, 3.304887f,
 0.429582f, 4.434948f, 3.260575f,
 0.033961f, 4.434947f, 3.260575f,
 0.445001f, 3.885557f, 3.430308f,
 0.782250f, 3.863811f, 3.449869f,
 0.432372f, 3.651731f, 3.184827f,
 0.782250f, 3.602469f, 3.229140f,
 1.200907f, 4.969450f, 2.280559f,
 0.776421f, 4.233707f, 3.036861f,
 0.033961f, 4.281561f, 3.034629f,
 0.033961f, 5.046722f, 2.211061f,
 0.700363f, 4.242610f, -0.232165f,
 0.684600f, 3.570861f, -0.047369f,
 0.033961f, 3.404868f, -0.001696f,
 0.033961f, 4.633290f, -0.339632f,
 0.971581f, 3.784947f, 1.995867f,
 0.997360f, 4.896940f, 1.689960f,
 0.033961f, 5.091470f, 1.812222f,
 0.033961f, 3.580977f, 2.150634f,
 1.813982f, -0.280232f, -0.887571f,
 1.773428f, 0.006724f, 1.450934f,
 0.041133f, 0.053967f, 1.932765f,
 0.028697f, -0.330066f, -1.586757f,
 1.397874f, 4.556134f, 1.958450f,
 1.500651f, 4.567327f, 2.665833f,
 1.043807f, 4.219213f, 2.852013f,
 0.921705f, 4.209847f, 2.035425f,
 1.760226f, 2.745787f, 2.095664f,
 1.813187f, 2.798599f, 2.448763f,
 1.529653f, 2.763163f, 2.554956f,
 1.467742f, 2.704534f, 2.146884f,
 2.037982f, 0.772931f, 2.065801f,
 2.149225f, 0.878403f, 2.799246f,
 1.578832f, 0.873462f, 2.982892f,
 1.453146f, 0.758445f, 2.159866f,
 0.042071f, 2.567038f, 0.677849f,
 1.174729f, 2.515230f, 0.551847f,
 1.199695f, 2.005661f, -0.750752f,
 0.030002f, 1.887116f, -1.109116f,
 -0.868441f, 5.476787f, 4.600716f,
 -0.868441f, 4.385688f, 3.304887f,
 -0.749646f, 5.376603f, 2.638552f,
 -0.723264f, 5.899077f, 3.438547f,
 -0.376369f, 6.243381f, 3.665573f,
 -0.473295f, 6.007797f, 4.467587f,
 -0.303336f, 5.325895f, 2.459129f,
 -0.361660f, 4.434948f, 3.260575f,
 -0.374288f, 4.191406f, 3.479652f,
 -1.204989f, 4.193719f, 3.477571f,
 -0.868441f, 5.325951f, 4.736244f,
 -0.494279f, 5.358391f, 4.820697f,
 -0.714328f, 3.863811f, 3.449869f,
 -0.377078f, 3.885557f, 3.430308f,
 -0.364450f, 3.651731f, 3.184827f,
 -0.714328f, 3.602469f, 3.229140f,
 -0.708500f, 4.233707f, 3.036861f,
 -1.132985f, 4.969450f, 2.280559f,
 -1.757720f, 4.506866f, -1.181019f,
 -2.377991f, 4.702596f, -0.809005f,
 -2.413678f, 4.237007f, -0.433439f,
 -1.716016f, 4.018501f, -0.848072f,
 -0.903658f, 3.784947f, 1.995867f,
 -0.929437f, 4.896940f, 1.689960f,
 -0.616678f, 3.570861f, -0.047369f,
 -0.632440f, 4.242610f, -0.232165f,
 -1.092325f, 2.516227f, 0.571126f,
 -1.135119f, 2.008116f, -0.738647f,
 -1.426989f, 4.793511f, 2.310708f,
 -0.712204f, 4.782944f, 2.303697f,
 -1.550424f, 4.365700f, 1.902915f,
 -0.724877f, 4.349642f, 1.897907f,
 -1.167588f, 5.462774f, 0.562112f,
 -0.869985f, 5.367914f, 0.381262f,
 -1.212598f, 5.214028f, 0.732475f,
 -0.867466f, 5.105142f, 0.525543f,
 -1.694512f, 0.005608f, 1.458108f,
 -1.751892f, -0.276183f, -0.881363f,
 1.577651f, 1.487018f, 2.793304f,
 1.980140f, 1.537321f, 2.642558f,
 1.904959f, 1.462352f, 2.141316f,
 1.489766f, 1.403792f, 2.214026f,
 -1.982733f, 4.563414f, -0.086827f,
 -1.492801f, 4.408846f, -0.380577f,
 -1.496377f, 4.781862f, -0.585390f,
 -1.918839f, 4.916521f, -0.328664f,
 1.977896f, 1.572876f, -1.067975f,
 2.006104f, 0.797749f, -1.059634f,
 1.542894f, 2.328736f, 9.118793f,
 1.209963f, 0.177497f, 9.086383f,
 1.485441f, 1.643765f, 7.184776f,
 1.513649f, 0.868638f, 7.193118f,
 0.791186f, 5.899077f, 3.438547f,
 0.791186f, 5.899077f, 3.438547f,
 0.936363f, 5.476787f, 4.600716f,
 0.817567f, 5.376603f, 2.638552f,
 0.371258f, 5.325895f, 2.459129f,
 0.791186f, 5.899077f, 3.438547f,
 0.791186f, 5.899077f, 3.438547f,
 0.371258f, 5.325895f, 2.459129f,
 0.371258f, 5.325895f, 2.459129f,
 0.033961f, 5.427606f, 4.987350f,
 0.033961f, 5.427606f, 4.987350f,
 0.562201f, 5.358391f, 4.820697f,
 0.562201f, 5.358391f, 4.820697f,
 0.936363f, 5.476787f, 4.600716f,
 0.936363f, 5.476787f, 4.600716f,
 0.562201f, 5.358391f, 4.820697f,
 0.936363f, 5.325951f, 4.736244f,
 1.272911f, 4.193719f, 3.477571f,
 0.936363f, 5.325951f, 4.736244f,
 0.936363f, 5.325951f, 4.736244f,
 0.429582f, 4.434948f, 3.260575f,
 0.442211f, 4.191406f, 3.479652f,
 0.442211f, 4.191406f, 3.479652f,
 0.033961f, 3.982044f, 3.667982f,
 0.442211f, 4.191406f, 3.479652f,
 0.445001f, 3.885557f, 3.430308f,
 0.445001f, 3.885557f, 3.430308f,
 0.432372f, 3.651731f, 3.184827f,
 0.432372f, 3.651731f, 3.184827f,
 0.432372f, 3.651731f, 3.184827f,
 0.782250f, 3.602469f, 3.229140f,
 1.272911f, 4.193719f, 3.477571f,
 0.782250f, 3.863811f, 3.449869f,
 0.782250f, 3.863811f, 3.449869f,
 0.782250f, 3.602469f, 3.229140f,
 0.429582f, 4.434948f, 3.260575f,
 0.776421f, 4.233707f, 3.036861f,
 0.371258f, 5.325895f, 2.459129f,
 0.371258f, 5.325895f, 2.459129f,
 0.776421f, 4.233707f, 3.036861f,
 1.200907f, 4.969450f, 2.280559f,
 0.033961f, 4.281561f, 3.034629f,
 0.429582f, 4.434948f, 3.260575f,
 0.429582f, 4.434948f, 3.260575f,
 0.033961f, 4.281561f, 3.034629f,
 0.776421f, 4.233707f, 3.036861f,
 0.033961f, 5.390970f, 2.400591f,
 0.371258f, 5.325895f, 2.459129f,
 0.033961f, 5.046722f, 2.211061f,
 0.033961f, 5.046722f, 2.211061f,
 0.371258f, 5.325895f, 2.459129f,
 1.200907f, 4.969450f, 2.280559f,
 0.971581f, 3.784947f, 1.995867f,
 0.684600f, 3.570861f, -0.047369f,
 0.700363f, 4.242610f, -0.232165f,
 0.684600f, 3.570861f, -0.047369f,
 0.684600f, 3.570861f, -0.047369f,
 1.174729f, 2.515230f, 0.551847f,
 0.033961f, 3.404868f, -0.001696f,
 0.684600f, 3.570861f, -0.047369f,
 0.684600f, 3.570861f, -0.047369f,
 0.033961f, 4.633290f, -0.339632f,
 0.700363f, 4.242610f, -0.232165f,
 0.700363f, 4.242610f, -0.232165f,
 0.776421f, 4.233707f, 3.036861f,
 1.200907f, 4.969450f, 2.280559f,
 1.200907f, 4.969450f, 2.280559f,
 0.971581f, 3.784947f, 1.995867f,
 0.776421f, 4.233707f, 3.036861f,
 0.776421f, 4.233707f, 3.036861f,
 0.997360f, 4.896940f, 1.689960f,
 0.971581f, 3.784947f, 1.995867f,
 0.971581f, 3.784947f, 1.995867f,
 1.043807f, 4.219213f, 2.852013f,
 1.200907f, 4.969450f, 2.280559f,
 0.997360f, 4.896940f, 1.689960f,
 0.997360f, 4.896940f, 1.689960f,
 1.043807f, 4.219213f, 2.852013f,
 1.529653f, 2.763163f, 2.554956f,
 1.529653f, 2.763163f, 2.554956f,
 1.529653f, 2.763163f, 2.554956f,
 1.577651f, 1.487018f, 2.793304f,
 1.577651f, 1.487018f, 2.793304f,
 1.174729f, 2.515230f, 0.551847f,
 1.773428f, 0.006724f, 1.450934f,
 1.773428f, 0.006724f, 1.450934f,
 -0.868441f, 5.476787f, 4.600716f,
 -0.723264f, 5.899077f, 3.438547f,
 -0.723264f, 5.899077f, 3.438547f,
 -0.749646f, 5.376603f, 2.638552f,
 -0.723264f, 5.899077f, 3.438547f,
 -0.303336f, 5.325895f, 2.459129f,
 -0.303336f, 5.325895f, 2.459129f,
 -0.723264f, 5.899077f, 3.438547f,
 -0.303336f, 5.325895f, 2.459129f,
 -0.494279f, 5.358391f, 4.820697f,
 0.033961f, 5.427606f, 4.987350f,
 0.033961f, 5.427606f, 4.987350f,
 -0.868441f, 5.325951f, 4.736244f,
 -0.494279f, 5.358391f, 4.820697f,
 -0.868441f, 5.476787f, 4.600716f,
 -0.868441f, 5.476787f, 4.600716f,
 -0.494279f, 5.358391f, 4.820697f,
 -0.868441f, 5.325951f, 4.736244f,
 -0.868441f, 5.325951f, 4.736244f,
 -1.204989f, 4.193719f, 3.477571f,
 0.033961f, 3.982044f, 3.667982f,
 -0.374288f, 4.191406f, 3.479652f,
 -0.374288f, 4.191406f, 3.479652f,
 -0.361660f, 4.434948f, 3.260575f,
 -0.374288f, 4.191406f, 3.479652f,
 -0.377078f, 3.885557f, 3.430308f,
 -0.377078f, 3.885557f, 3.430308f,
 -0.364450f, 3.651731f, 3.184827f,
 -0.364450f, 3.651731f, 3.184827f,
 -0.364450f, 3.651731f, 3.184827f,
 -0.714328f, 3.602469f, 3.229140f,
 -0.714328f, 3.602469f, 3.229140f,
 -0.714328f, 3.863811f, 3.449869f,
 -0.714328f, 3.863811f, 3.449869f,
 -1.204989f, 4.193719f, 3.477571f,
 -1.132985f, 4.969450f, 2.280559f,
 -0.708500f, 4.233707f, 3.036861f,
 -0.303336f, 5.325895f, 2.459129f,
 -0.303336f, 5.325895f, 2.459129f,
 -0.708500f, 4.233707f, 3.036861f,
 -0.361660f, 4.434948f, 3.260575f,
 -0.708500f, 4.233707f, 3.036861f,
 0.033961f, 4.281561f, 3.034629f,
 -0.361660f, 4.434948f, 3.260575f,
 -0.361660f, 4.434948f, 3.260575f,
 0.033961f, 4.281561f, 3.034629f,
 0.033961f, 5.390970f, 2.400591f,
 0.033961f, 5.046722f, 2.211061f,
 -0.303336f, 5.325895f, 2.459129f,
 -0.303336f, 5.325895f, 2.459129f,
 0.033961f, 5.046722f, 2.211061f,
 -1.132985f, 4.969450f, 2.280559f,
 -0.903658f, 3.784947f, 1.995867f,
 -0.616678f, 3.570861f, -0.047369f,
 -0.632440f, 4.242610f, -0.232165f,
 -0.616678f, 3.570861f, -0.047369f,
 -0.616678f, 3.570861f, -0.047369f,
 -1.092325f, 2.516227f, 0.571126f,
 -0.616678f, 3.570861f, -0.047369f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 3.570861f, -0.047369f,
 0.042071f, 2.567038f, 0.677849f,
 0.033961f, 3.404868f, -0.001696f,
 0.033961f, 4.633290f, -0.339632f,
 0.030002f, 1.887116f, -1.109116f,
 -0.632440f, 4.242610f, -0.232165f,
 -0.632440f, 4.242610f, -0.232165f,
 0.030002f, 1.887116f, -1.109116f,
 -1.135119f, 2.008116f, -0.738647f,
 -0.708500f, 4.233707f, 3.036861f,
 -1.132985f, 4.969450f, 2.280559f,
 -1.426989f, 4.793511f, 2.310708f,
 -1.132985f, 4.969450f, 2.280559f,
 -0.712204f, 4.782944f, 2.303697f,
 -1.426989f, 4.793511f, 2.310708f,
 -0.708500f, 4.233707f, 3.036861f,
 -1.426989f, 4.793511f, 2.310708f,
 -0.903658f, 3.784947f, 1.995867f,
 -0.903658f, 3.784947f, 1.995867f,
 -1.426989f, 4.793511f, 2.310708f,
 -1.550424f, 4.365700f, 1.902915f,
 -0.903658f, 3.784947f, 1.995867f,
 -1.550424f, 4.365700f, 1.902915f,
 -0.929437f, 4.896940f, 1.689960f,
 -1.550424f, 4.365700f, 1.902915f,
 -0.724877f, 4.349642f, 1.897907f,
 -0.929437f, 4.896940f, 1.689960f,
 -0.724877f, 4.349642f, 1.897907f,
 -0.712204f, 4.782944f, 2.303697f,
 -0.929437f, 4.896940f, 1.689960f,
 -0.929437f, 4.896940f, 1.689960f,
 -0.712204f, 4.782944f, 2.303697f,
 -1.132985f, 4.969450f, 2.280559f,
 -1.167588f, 5.462774f, 0.562112f,
 -1.212598f, 5.214028f, 0.732475f,
 -1.426989f, 4.793511f, 2.310708f,
 -1.426989f, 4.793511f, 2.310708f,
 -1.212598f, 5.214028f, 0.732475f,
 -1.550424f, 4.365700f, 1.902915f,
 -1.982733f, 4.563414f, -0.086827f,
 -1.212598f, 5.214028f, 0.732475f,
 -1.918839f, 4.916521f, -0.328664f,
 -1.918839f, 4.916521f, -0.328664f,
 -1.212598f, 5.214028f, 0.732475f,
 -1.167588f, 5.462774f, 0.562112f,
 -1.751892f, -0.276183f, -0.881363f,
 -1.694512f, 0.005608f, 1.458108f,
 -1.135119f, 2.008116f, -0.738647f,
 -1.135119f, 2.008116f, -0.738647f,
 -1.694512f, 0.005608f, 1.458108f,
 -1.092325f, 2.516227f, 0.571126f,
 1.904959f, 1.462352f, 2.141316f,
 2.149225f, 0.878403f, 2.799246f,
 2.037982f, 0.772931f, 2.065801f,
 1.489766f, 1.403792f, 2.214026f,
 1.904959f, 1.462352f, 2.141316f,
 1.453146f, 0.758445f, 2.159866f,
 1.453146f, 0.758445f, 2.159866f,
 1.904959f, 1.462352f, 2.141316f,
 2.037982f, 0.772931f, 2.065801f,
 1.577651f, 1.487018f, 2.793304f,
 1.489766f, 1.403792f, 2.214026f,
 1.578832f, 0.873462f, 2.982892f,
 1.578832f, 0.873462f, 2.982892f,
 1.489766f, 1.403792f, 2.214026f,
 1.453146f, 0.758445f, 2.159866f,
 -1.492801f, 4.408846f, -0.380577f,
 -2.413678f, 4.237007f, -0.433439f,
 -1.716016f, 4.018501f, -0.848072f,
 -1.492801f, 4.408846f, -0.380577f,
 -1.716016f, 4.018501f, -0.848072f,
 -1.496377f, 4.781862f, -0.585390f,
 -1.496377f, 4.781862f, -0.585390f,
 -1.716016f, 4.018501f, -0.848072f,
 -1.757720f, 4.506866f, -1.181019f,
 -1.918839f, 4.916521f, -0.328664f,
 -1.496377f, 4.781862f, -0.585390f,
 -2.377991f, 4.702596f, -0.809005f,
 -2.377991f, 4.702596f, -0.809005f,
 -1.496377f, 4.781862f, -0.585390f,
 -1.757720f, 4.506866f, -1.181019f,
 -1.918839f, 4.916521f, -0.328664f,
 -2.377991f, 4.702596f, -0.809005f,
 -1.982733f, 4.563414f, -0.086827f,
 1.977896f, 1.572876f, -1.067975f,
 2.006104f, 0.797749f, -1.059634f,
 1.485441f, 1.643765f, 7.184776f,
 1.485441f, 1.643765f, 7.184776f,
 2.006104f, 0.797749f, -1.059634f,
 1.513649f, 0.868638f, 7.193118f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.176724f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.267286f, 0.097063f},
{ 0.826605f, 0.115333f, -0.550838f},
{ 0.904768f, 0.382335f, -0.187656f},
{ 0.857718f, 0.098329f, -0.504629f},
{ 0.363845f, 0.884090f, -0.293261f},
{ 0.549456f, 0.724172f, 0.416742f},
{ 0.485921f, 0.727077f, -0.485015f},
{ 0.520282f, -0.487260f, -0.701345f},
{ 0.517276f, -0.633790f, 0.575097f},
{ 0.414371f, -0.625561f, 0.661038f},
{ 0.188090f, -0.786726f, 0.587950f},
{ 0.238558f, -0.460470f, 0.855019f},
{ 0.000000f, -0.364671f, 0.931137f},
{ -0.000000f, -0.870753f, 0.491721f},
{ -0.000000f, 0.976592f, -0.215100f},
{ 0.000000f, 0.786862f, 0.617129f},
{ -0.000000f, 0.745948f, -0.666005f},
{ 0.453144f, -0.384909f, 0.804056f},
{ -0.760935f, -0.284174f, 0.583286f},
{ 0.383692f, -0.322892f, -0.865171f},
{ -0.216585f, -0.202410f, -0.955050f},
{ -0.000000f, -0.932023f, -0.362399f},
{ 0.383664f, -0.290074f, 0.876732f},
{ 0.430120f, 0.840435f, 0.329645f},
{ -0.000000f, -0.786731f, 0.617296f},
{ 0.000000f, 0.938239f, -0.345988f},
{ 0.621339f, -0.505550f, -0.598629f},
{ 0.758307f, -0.501138f, 0.416930f},
{ -0.719638f, -0.617593f, -0.317334f},
{ -0.450700f, -0.524209f, 0.722547f},
{ 0.000000f, -0.972693f, 0.232096f},
{ 0.733232f, -0.677037f, 0.063182f},
{ 0.709526f, 0.651742f, -0.267964f},
{ 0.000000f, 0.988305f, -0.152492f},
{ 0.959769f, -0.084608f, 0.267740f},
{ 0.648718f, 0.385927f, -0.655915f},
{ 0.000194f, 0.713615f, -0.700538f},
{ 0.000273f, -0.820505f, 0.571639f},
{ 0.764861f, 0.282490f, -0.578953f},
{ 0.730193f, 0.449049f, 0.514950f},
{ 0.007492f, 0.476382f, 0.879207f},
{ -0.004546f, 0.241140f, -0.970480f},
{ 0.819581f, 0.348259f, 0.454976f},
{ 0.749961f, 0.128854f, -0.648811f},
{ -0.196980f, -0.467913f, 0.861543f},
{ -0.349256f, -0.392890f, -0.850681f},
{ 0.926101f, 0.140941f, 0.349962f},
{ 0.669313f, 0.057703f, -0.740736f},
{ -0.680432f, -0.170645f, 0.712666f},
{ -0.865929f, -0.193123f, -0.461380f},
{ 0.869532f, 0.234520f, 0.434643f},
{ 0.658136f, 0.117676f, -0.743646f},
{ -0.632659f, 0.165837f, 0.756465f},
{ -0.916270f, 0.011773f, -0.400389f},
{ 0.002627f, 0.401733f, 0.915753f},
{ 0.747021f, 0.387431f, 0.540237f},
{ 0.828643f, 0.252581f, -0.499554f},
{ -0.001987f, 0.174245f, -0.984700f},
{ -0.958716f, 0.267287f, 0.097063f},
{ -0.904768f, 0.382336f, -0.187656f},
{ -0.826605f, 0.115333f, -0.550838f},
{ -0.857718f, 0.098329f, -0.504629f},
{ -0.549456f, 0.724172f, 0.416742f},
{ -0.363846f, 0.884090f, -0.293261f},
{ -0.485921f, 0.727077f, -0.485015f},
{ -0.520281f, -0.487260f, -0.701346f},
{ -0.238557f, -0.460470f, 0.855019f},
{ -0.414371f, -0.625561f, 0.661037f},
{ -0.188090f, -0.786726f, 0.587949f},
{ -0.517275f, -0.633790f, 0.575097f},
{ -0.453143f, -0.384909f, 0.804057f},
{ -0.383693f, -0.322893f, -0.865170f},
{ 0.760937f, -0.284174f, 0.583283f},
{ 0.216585f, -0.202410f, -0.955050f},
{ -0.442822f, 0.785405f, 0.432490f},
{ -0.561904f, -0.396463f, 0.726004f},
{ 0.166593f, 0.200416f, -0.965443f},
{ 0.170826f, -0.958891f, -0.226598f},
{ -0.749627f, 0.378993f, -0.542608f},
{ -0.757604f, -0.619965f, 0.204154f},
{ -0.716652f, -0.694752f, 0.061079f},
{ -0.750197f, 0.624383f, -0.217603f},
{ -0.649519f, 0.385737f, -0.655234f},
{ -0.959100f, -0.083794f, 0.270382f},
{ -0.770900f, 0.283976f, -0.570150f},
{ -0.721674f, 0.450819f, 0.525308f},
{ -0.697739f, 0.491219f, 0.521406f},
{ 0.347703f, 0.857711f, 0.378727f},
{ -0.748425f, -0.532241f, -0.395702f},
{ 0.697192f, -0.673741f, -0.244943f},
{ 0.637472f, 0.717182f, -0.281564f},
{ -0.075483f, 0.989032f, 0.126956f},
{ -0.808467f, -0.587975f, -0.025819f},
{ 0.673347f, -0.735219f, -0.077822f},
{ -0.472160f, 0.879016f, -0.066304f},
{ 0.554305f, 0.566469f, -0.609803f},
{ -0.448740f, -0.387851f, 0.805111f},
{ 0.558989f, -0.779676f, 0.282199f},
{ -0.745237f, 0.385206f, 0.544278f},
{ -0.830536f, 0.255180f, -0.495069f},
{ -0.998648f, -0.036738f, -0.036768f},
{ -0.997993f, 0.014265f, -0.061703f},
{ -0.987315f, 0.133377f, -0.086136f},
{ -0.982892f, 0.153645f, -0.101571f},
{ -0.997562f, -0.036941f, -0.059209f},
{ -0.997562f, -0.036941f, -0.059209f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
85, 89, 83,
83, 89, 87,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: attack Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86