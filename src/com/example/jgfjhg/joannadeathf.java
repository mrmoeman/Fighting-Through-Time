package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class joannadeathf {

static String TextureName = "joannadeath6.mtl";

static int Vertices = 249;

static int VertTexts = 156;

static int Normals = 96;

static int Faces = 170;

static int FacesB = 0;

static int SmoothGroups = 4;

static float VertArray[] = new float[]{
 0.339961f, 1.058426f, -1.237435f,
 0.922332f, 1.065113f, -1.319036f,
 0.944295f, 0.444615f, -1.266265f,
 0.359400f, 0.437845f, -1.200603f,
 0.297545f, 1.460831f, -1.520457f,
 0.876843f, 1.461576f, -1.621417f,
 0.694109f, -0.398534f, -2.630754f,
 0.114880f, -0.395977f, -2.527073f,
 0.525698f, 0.862461f, 1.997951f,
 1.277627f, 0.716426f, 1.915137f,
 1.289121f, -0.155799f, 1.905925f,
 0.538618f, -0.136464f, 1.989542f,
 0.615360f, -0.107527f, 0.604791f,
 1.124245f, -0.108144f, 0.547660f,
 1.122865f, 0.506877f, 0.615766f,
 0.613649f, 0.538386f, 0.676626f,
 1.116533f, 0.810835f, 6.375062f,
 0.407992f, -0.431184f, 5.119721f,
 0.293986f, 1.238861f, 5.300606f,
 0.461206f, 1.189489f, 6.413172f,
 0.466935f, -0.330038f, 6.398259f,
 1.683976f, -0.002487f, 5.446569f,
 1.485577f, 0.545163f, 5.063513f,
 0.410641f, 0.869078f, 3.853419f,
 1.090132f, 0.610770f, 3.782689f,
 1.132900f, 0.030003f, 3.596217f,
 0.411059f, -0.191481f, 3.399134f,
 0.796051f, -0.221082f, 7.625943f,
 1.332239f, 0.103242f, 7.185009f,
 1.111686f, 0.055049f, 6.356466f,
 0.867297f, 0.206031f, 6.052077f,
 2.336022f, 0.578246f, 5.441469f,
 0.765546f, 1.203627f, 7.519278f,
 1.316795f, 0.861541f, 7.127410f,
 0.838544f, 0.769695f, 5.985239f,
 2.128802f, 0.675818f, 5.050398f,
 1.776698f, 0.856178f, 5.834693f,
 1.649743f, 0.911281f, 5.531191f,
 3.081593f, 0.033557f, 4.747941f,
 3.179021f, 0.403099f, 4.675772f,
 2.910522f, 0.470652f, 4.346485f,
 2.784832f, 0.125773f, 4.376615f,
 0.399986f, -0.123918f, 6.056787f,
 0.379839f, 1.101991f, 6.065070f,
 4.649291f, -0.317652f, 3.532258f,
 4.452497f, 0.352541f, 3.703392f,
 4.066211f, 0.428566f, 3.369042f,
 3.996812f, -0.120611f, 3.076523f,
 0.370595f, 1.403006f, 0.966132f,
 1.629151f, -0.328268f, 1.641344f,
 1.769597f, 0.877378f, 1.508635f,
 0.375126f, -0.683342f, 1.697339f,
 -1.105807f, 0.184010f, 5.924771f,
 -1.352497f, 0.033048f, 5.217865f,
 -1.169374f, 0.646515f, 5.840174f,
 -1.418619f, 0.481636f, 5.139786f,
 0.111089f, 0.102971f, 7.510757f,
 0.095576f, 0.861545f, 7.453347f,
 -0.300640f, 0.037556f, 3.588708f,
 -0.268649f, 0.610826f, 3.782381f,
 -0.600552f, -0.056820f, 5.169270f,
 -0.658466f, 0.860097f, 5.087510f,
 -0.073850f, 0.811778f, 6.133700f,
 -0.061030f, 0.209582f, 6.168739f,
 -0.109696f, 0.054980f, 6.682213f,
 -0.104923f, 0.811059f, 6.700829f,
 -2.722609f, -0.220616f, 2.409448f,
 -2.641539f, 0.578425f, 2.577702f,
 -3.034106f, -0.091198f, 3.046485f,
 -2.974846f, 0.421929f, 3.094168f,
 -1.624136f, -0.038238f, 4.088850f,
 -1.640257f, 0.446341f, 4.073623f,
 -1.976245f, 0.453313f, 4.225174f,
 -1.976842f, 0.023489f, 4.246197f,
 -0.906618f, -0.398866f, 1.889425f,
 -1.058079f, 0.829818f, 1.573196f,
 -0.336066f, 1.050331f, -1.079901f,
 -0.915142f, 1.091507f, -1.022650f,
 -0.974120f, 0.472213f, -1.059191f,
 -0.391554f, 0.429468f, -1.132505f,
 -0.298594f, 1.461449f, -1.340866f,
 -0.876843f, 1.461577f, -1.440858f,
 -0.694109f, -0.398533f, -2.450196f,
 -0.114884f, -0.395974f, -2.346619f,
 0.196225f, 0.754497f, 1.812259f,
 -0.559074f, 0.652850f, 1.927586f,
 -0.608002f, -0.208508f, 2.057129f,
 0.140172f, -0.235334f, 1.956278f,
 -0.277364f, -0.386083f, 0.612798f,
 -0.784607f, -0.358700f, 0.676620f,
 -0.730837f, 0.241270f, 0.740233f,
 -0.219349f, 0.258384f, 0.686346f,
 7.707328f, 0.681051f, 8.480103f,
 8.262747f, -0.088135f, 8.061422f,
 2.866540f, 0.405866f, 2.974875f,
 3.417389f, -0.368561f, 2.524106f,
 0.613649f, 0.538386f, 0.676626f,
 0.613649f, 0.538386f, 0.676626f,
 0.525698f, 0.862461f, 1.997951f,
 0.339961f, 1.058426f, -1.237435f,
 0.297545f, 1.460831f, -1.520457f,
 0.297545f, 1.460831f, -1.520457f,
 0.339961f, 1.058426f, -1.237435f,
 0.297545f, 1.460831f, -1.520457f,
 0.359400f, 0.437845f, -1.200603f,
 0.359400f, 0.437845f, -1.200603f,
 0.297545f, 1.460831f, -1.520457f,
 0.114880f, -0.395977f, -2.527073f,
 0.359400f, 0.437845f, -1.200603f,
 0.114880f, -0.395977f, -2.527073f,
 0.114880f, -0.395977f, -2.527073f,
 0.944295f, 0.444615f, -1.266265f,
 0.944295f, 0.444615f, -1.266265f,
 0.944295f, 0.444615f, -1.266265f,
 0.944295f, 0.444615f, -1.266265f,
 0.922332f, 1.065113f, -1.319036f,
 0.922332f, 1.065113f, -1.319036f,
 0.613649f, 0.538386f, 0.676626f,
 0.613649f, 0.538386f, 0.676626f,
 0.922332f, 1.065113f, -1.319036f,
 0.339961f, 1.058426f, -1.237435f,
 0.867297f, 0.206031f, 6.052077f,
 0.867297f, 0.206031f, 6.052077f,
 1.683976f, -0.002487f, 5.446569f,
 1.683976f, -0.002487f, 5.446569f,
 0.867297f, 0.206031f, 6.052077f,
 0.867297f, 0.206031f, 6.052077f,
 0.838544f, 0.769695f, 5.985239f,
 0.838544f, 0.769695f, 5.985239f,
 0.838544f, 0.769695f, 5.985239f,
 0.867297f, 0.206031f, 6.052077f,
 0.867297f, 0.206031f, 6.052077f,
 1.683976f, -0.002487f, 5.446569f,
 1.485577f, 0.545163f, 5.063513f,
 3.081593f, 0.033557f, 4.747941f,
 3.081593f, 0.033557f, 4.747941f,
 1.485577f, 0.545163f, 5.063513f,
 1.485577f, 0.545163f, 5.063513f,
 1.683976f, -0.002487f, 5.446569f,
 4.649291f, -0.317652f, 3.532258f,
 4.649291f, -0.317652f, 3.532258f,
 3.081593f, 0.033557f, 4.747941f,
 3.996812f, -0.120611f, 3.076523f,
 3.996812f, -0.120611f, 3.076523f,
 3.081593f, 0.033557f, 4.747941f,
 1.485577f, 0.545163f, 5.063513f,
 1.485577f, 0.545163f, 5.063513f,
 0.838544f, 0.769695f, 5.985239f,
 0.838544f, 0.769695f, 5.985239f,
 3.996812f, -0.120611f, 3.076523f,
 0.370595f, 1.403006f, 0.966132f,
 1.769597f, 0.877378f, 1.508635f,
 0.375126f, -0.683342f, 1.697339f,
 0.375126f, -0.683342f, 1.697339f,
 1.769597f, 0.877378f, 1.508635f,
 1.629151f, -0.328268f, 1.641344f,
 0.796051f, -0.221082f, 7.625943f,
 0.765546f, 1.203627f, 7.519278f,
 0.765546f, 1.203627f, 7.519278f,
 0.407992f, -0.431184f, 5.119721f,
 -0.061030f, 0.209582f, 6.168739f,
 0.407992f, -0.431184f, 5.119721f,
 0.399986f, -0.123918f, 6.056787f,
 -0.061030f, 0.209582f, 6.168739f,
 -0.600552f, -0.056820f, 5.169270f,
 -0.600552f, -0.056820f, 5.169270f,
 0.399986f, -0.123918f, 6.056787f,
 0.466935f, -0.330038f, 6.398259f,
 -0.061030f, 0.209582f, 6.168739f,
 0.466935f, -0.330038f, 6.398259f,
 -0.061030f, 0.209582f, 6.168739f,
 0.379839f, 1.101991f, 6.065070f,
 -0.073850f, 0.811778f, 6.133700f,
 0.461206f, 1.189489f, 6.413172f,
 -0.073850f, 0.811778f, 6.133700f,
 0.461206f, 1.189489f, 6.413172f,
 -0.073850f, 0.811778f, 6.133700f,
 -0.061030f, 0.209582f, 6.168739f,
 -0.061030f, 0.209582f, 6.168739f,
 0.411059f, -0.191481f, 3.399134f,
 0.407992f, -0.431184f, 5.119721f,
 0.407992f, -0.431184f, 5.119721f,
 -0.600552f, -0.056820f, 5.169270f,
 -1.624136f, -0.038238f, 4.088850f,
 -0.658466f, 0.860097f, 5.087510f,
 -1.624136f, -0.038238f, 4.088850f,
 -0.658466f, 0.860097f, 5.087510f,
 -0.658466f, 0.860097f, 5.087510f,
 -0.600552f, -0.056820f, 5.169270f,
 -2.722609f, -0.220616f, 2.409448f,
 -2.722609f, -0.220616f, 2.409448f,
 -2.641539f, 0.578425f, 2.577702f,
 -1.624136f, -0.038238f, 4.088850f,
 -2.641539f, 0.578425f, 2.577702f,
 -1.624136f, -0.038238f, 4.088850f,
 -0.658466f, 0.860097f, 5.087510f,
 -0.658466f, 0.860097f, 5.087510f,
 -0.073850f, 0.811778f, 6.133700f,
 0.293986f, 1.238861f, 5.300606f,
 -0.073850f, 0.811778f, 6.133700f,
 0.379839f, 1.101991f, 6.065070f,
 0.293986f, 1.238861f, 5.300606f,
 -2.641539f, 0.578425f, 2.577702f,
 0.461206f, 1.189489f, 6.413172f,
 0.765546f, 1.203627f, 7.519278f,
 0.461206f, 1.189489f, 6.413172f,
 0.796051f, -0.221082f, 7.625943f,
 0.466935f, -0.330038f, 6.398259f,
 0.466935f, -0.330038f, 6.398259f,
 0.410641f, 0.869078f, 3.853419f,
 0.293986f, 1.238861f, 5.300606f,
 0.410641f, 0.869078f, 3.853419f,
 0.370595f, 1.403006f, 0.966132f,
 0.410641f, 0.869078f, 3.853419f,
 0.410641f, 0.869078f, 3.853419f,
 0.375126f, -0.683342f, 1.697339f,
 0.411059f, -0.191481f, 3.399134f,
 0.411059f, -0.191481f, 3.399134f,
 0.370595f, 1.403006f, 0.966132f,
 0.375126f, -0.683342f, 1.697339f,
 -1.058079f, 0.829818f, 1.573196f,
 0.375126f, -0.683342f, 1.697339f,
 -0.906618f, -0.398866f, 1.889425f,
 -1.058079f, 0.829818f, 1.573196f,
 -0.219349f, 0.258384f, 0.686346f,
 0.196225f, 0.754497f, 1.812259f,
 -0.219349f, 0.258384f, 0.686346f,
 -0.336066f, 1.050331f, -1.079901f,
 -0.298594f, 1.461449f, -1.340866f,
 -0.298594f, 1.461449f, -1.340866f,
 -0.336066f, 1.050331f, -1.079901f,
 -0.391554f, 0.429468f, -1.132505f,
 -0.298594f, 1.461449f, -1.340866f,
 -0.391554f, 0.429468f, -1.132505f,
 -0.114884f, -0.395974f, -2.346619f,
 -0.298594f, 1.461449f, -1.340866f,
 -0.391554f, 0.429468f, -1.132505f,
 -0.114884f, -0.395974f, -2.346619f,
 -0.114884f, -0.395974f, -2.346619f,
 -0.974120f, 0.472213f, -1.059191f,
 -0.974120f, 0.472213f, -1.059191f,
 -0.974120f, 0.472213f, -1.059191f,
 -0.915142f, 1.091507f, -1.022650f,
 -0.974120f, 0.472213f, -1.059191f,
 -0.219349f, 0.258384f, 0.686346f,
 -0.915142f, 1.091507f, -1.022650f,
 -0.219349f, 0.258384f, 0.686346f,
 -0.336066f, 1.050331f, -1.079901f,
 -0.915142f, 1.091507f, -1.022650f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.453876f, 0.791903f,
 0.201824f, 0.532079f,
 0.590263f, 0.596995f,
 0.556897f, 0.779659f,
 0.235400f, 0.777966f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.566387f, 0.397259f,
 0.470805f, 0.365178f,
 0.365778f, 0.346308f,
 0.249833f, 0.335338f,
 0.289739f, 0.984705f,
 0.362886f, 0.905310f,
 0.354538f, 0.788048f,
 0.662213f, 0.973243f,
 0.649436f, 0.842323f,
 0.523433f, 0.983917f,
 0.451956f, 0.900429f,
 0.700374f, 0.973112f,
 0.714202f, 0.842324f,
 0.662213f, 0.871337f,
 0.700374f, 0.871169f,
 0.611238f, 0.659338f,
 0.649436f, 0.659338f,
 0.714202f, 0.659338f,
 0.749335f, 0.659338f,
 0.262276f, 0.714547f,
 0.539459f, 0.732725f,
 0.635368f, 0.320085f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.727698f, 0.329948f,
 0.754615f, 0.048462f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.147427f, 0.097935f,
 0.662213f, 0.871337f,
 0.649436f, 0.842323f,
 0.700374f, 0.871169f,
 0.714202f, 0.842324f,
 0.362886f, 0.905310f,
 0.451956f, 0.900429f,
 0.365778f, 0.346308f,
 0.470805f, 0.365178f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.700374f, 0.973112f,
 0.662213f, 0.973243f,
 0.354538f, 0.788048f,
 0.453876f, 0.791903f,
 0.635368f, 0.320085f,
 0.727698f, 0.329948f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.611238f, 0.659338f,
 0.749335f, 0.659338f,
 0.714202f, 0.659338f,
 0.649436f, 0.659338f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.829311f, 0.001810f,
 0.999173f, 0.001810f,
 0.829311f, 0.998093f,
 0.999173f, 0.998093f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.132466f, 0.001616f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.326300f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.806916f, 0.873085f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.749335f, 0.410462f,
 0.747690f, 0.223911f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.737676f, 0.256798f,
 0.289739f, 0.984705f,
 0.523433f, 0.983917f,
 0.523433f, 0.983917f,
 0.201824f, 0.532079f,
 0.353637f, 0.718421f,
 0.201824f, 0.532079f,
 0.262276f, 0.714547f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.262276f, 0.714547f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.539459f, 0.732725f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.249833f, 0.335338f,
 0.201824f, 0.532079f,
 0.201824f, 0.532079f,
 0.806916f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.590263f, 0.596995f,
 0.452577f, 0.721572f,
 0.539459f, 0.732725f,
 0.590263f, 0.596995f,
 0.749335f, 0.410462f,
 0.556897f, 0.779659f,
 0.523433f, 0.983917f,
 0.556897f, 0.779659f,
 0.289739f, 0.984705f,
 0.235400f, 0.777966f,
 0.235400f, 0.777966f,
 0.566387f, 0.397259f,
 0.590263f, 0.596995f,
 0.566387f, 0.397259f,
 0.754615f, 0.048462f,
 0.566387f, 0.397259f,
 0.566387f, 0.397259f,
 0.147427f, 0.097935f,
 0.249833f, 0.335338f,
 0.249833f, 0.335338f,
 0.747690f, 0.223911f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.737676f, 0.256798f,
 0.756142f, 0.248493f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.196341f, 0.621715f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.132466f, 0.001616f,
 0.063514f, 0.126699f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.102748f, 0.326300f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.326300f,
 0.148951f, 0.326300f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.703709f, 0.532802f, -0.470016f},
{ 0.525979f, 0.517960f, -0.674583f},
{ -0.768315f, -0.247662f, -0.590216f},
{ 0.531770f, -0.250377f, -0.809032f},
{ -0.790473f, -0.609423f, -0.061285f},
{ -0.718340f, -0.690915f, -0.081394f},
{ 0.728923f, -0.676140f, -0.107268f},
{ 0.724081f, -0.658897f, -0.203867f},
{ -0.738549f, 0.641776f, -0.206565f},
{ -0.788712f, 0.610447f, 0.072720f},
{ 0.827034f, 0.561390f, -0.029268f},
{ 0.754450f, 0.619641f, -0.216450f},
{ -0.613736f, 0.693273f, 0.377758f},
{ 0.676155f, 0.702723f, 0.221348f},
{ 0.885819f, -0.455711f, -0.087485f},
{ -0.848704f, -0.493495f, 0.190171f},
{ 0.466869f, 0.058842f, 0.882367f},
{ 0.567029f, -0.002583f, 0.823694f},
{ -0.122852f, 0.950830f, -0.284307f},
{ 0.032012f, 0.902001f, -0.430546f},
{ 0.197860f, -0.644134f, 0.738880f},
{ 0.861565f, -0.393098f, 0.321215f},
{ 0.162646f, 0.782586f, 0.600920f},
{ 0.848996f, 0.508163f, 0.144831f},
{ 0.705476f, -0.707919f, 0.033979f},
{ 0.783779f, 0.614578f, 0.089352f},
{ 0.386884f, -0.910795f, 0.144127f},
{ 0.484359f, 0.698007f, -0.527430f},
{ 0.532564f, 0.826584f, 0.182029f},
{ 0.517234f, -0.733285f, 0.441318f},
{ 0.025687f, -0.998728f, 0.043398f},
{ -0.027321f, -0.996024f, 0.084791f},
{ -0.037692f, -0.995172f, -0.090624f},
{ 0.794842f, -0.504508f, -0.337190f},
{ 0.035422f, 0.998719f, 0.036148f},
{ -0.033861f, 0.994939f, -0.094606f},
{ 0.809892f, 0.472577f, -0.347484f},
{ 0.022326f, -0.990032f, 0.139063f},
{ 0.383928f, -0.896356f, 0.221687f},
{ -0.410863f, -0.704908f, -0.578185f},
{ 0.731094f, 0.473580f, 0.491144f},
{ -0.210417f, 0.820351f, -0.531741f},
{ 0.152133f, -0.894788f, 0.419774f},
{ -0.564324f, -0.706418f, -0.427215f},
{ -0.291800f, 0.839195f, -0.458917f},
{ 0.521574f, 0.659327f, 0.541524f},
{ 0.088183f, 0.994168f, -0.062085f},
{ 0.794877f, -0.576424f, -0.189492f},
{ 0.786288f, 0.543188f, -0.294444f},
{ 0.039726f, 0.997764f, 0.053748f},
{ -0.024044f, 0.823442f, -0.566891f},
{ 0.010191f, -0.876255f, -0.481739f},
{ -0.370859f, -0.647179f, 0.666051f},
{ -0.507779f, 0.730533f, 0.456599f},
{ -0.470189f, -0.826986f, 0.308249f},
{ -0.711611f, 0.665431f, 0.225414f},
{ -0.587409f, -0.393131f, 0.707389f},
{ -0.666108f, 0.502071f, 0.551565f},
{ -0.689403f, -0.713356f, 0.125883f},
{ -0.272418f, -0.947650f, -0.166577f},
{ -0.804986f, 0.588358f, 0.076368f},
{ -0.415781f, 0.851948f, -0.318294f},
{ -0.539401f, 0.747297f, 0.388064f},
{ -0.547708f, -0.706794f, 0.447725f},
{ -0.863282f, -0.494970f, 0.098738f},
{ -0.886076f, 0.449752f, 0.112213f},
{ 0.500639f, -0.574228f, -0.647783f},
{ -0.613485f, -0.748415f, 0.252016f},
{ 0.555122f, 0.564747f, -0.610656f},
{ -0.647282f, 0.683299f, 0.337828f},
{ 0.643551f, -0.595086f, -0.481368f},
{ 0.580576f, 0.629653f, -0.516207f},
{ -0.586570f, 0.688210f, 0.426970f},
{ -0.606462f, -0.614044f, 0.505128f},
{ -0.795321f, -0.597721f, -0.100966f},
{ -0.784757f, 0.547139f, -0.291197f},
{ 0.649115f, 0.572938f, -0.500392f},
{ 0.734008f, -0.260196f, -0.627320f},
{ -0.544948f, 0.525010f, -0.653755f},
{ -0.536667f, -0.270246f, -0.799347f},
{ 0.705201f, -0.691891f, -0.154849f},
{ -0.736931f, -0.654478f, 0.169086f},
{ 0.597782f, -0.760773f, -0.252746f},
{ -0.749860f, -0.659176f, -0.056545f},
{ 0.682368f, 0.541894f, -0.490638f},
{ 0.852735f, 0.507547f, -0.123449f},
{ -0.816079f, 0.548256f, 0.182840f},
{ -0.756716f, 0.639264f, -0.136829f},
{ 0.733425f, 0.592073f, 0.333972f},
{ -0.605160f, 0.681778f, 0.411048f},
{ -0.924091f, -0.375319f, -0.072045f},
{ 0.829754f, -0.547052f, 0.110648f},
{ 0.541613f, 0.668508f, -0.509660f},
{ 0.541220f, 0.669194f, -0.509177f},
{ 0.537741f, 0.675210f, -0.504902f},
{ 0.537368f, 0.675849f, -0.504444f}};

static int[] FaceArray = new int[]{
4, 5, 7,
7, 5, 6,
11, 12, 10,
10, 12, 13,
8, 15, 11,
11, 15, 12,
14, 96, 9,
9, 97, 98,
13, 14, 10,
10, 14, 9,
99, 1, 100,
101, 1, 5,
1, 2, 5,
5, 2, 6,
102, 103, 104,
105, 106, 107,
108, 109, 2,
2, 110, 6,
13, 12, 111,
112, 12, 3,
13, 113, 14,
14, 114, 115,
14, 116, 117,
118, 119, 120,
12, 15, 3,
3, 15, 0,
36, 31, 37,
37, 31, 35,
27, 28, 32,
32, 28, 33,
25, 24, 21,
21, 24, 22,
37, 34, 36,
36, 34, 30,
21, 121, 17,
17, 122, 42,
31, 36, 123,
124, 36, 30,
42, 125, 20,
20, 126, 29,
43, 19, 127,
128, 19, 16,
129, 16, 130,
131, 16, 29,
29, 16, 28,
28, 16, 33,
26, 25, 17,
17, 25, 21,
44, 47, 45,
45, 47, 46,
132, 133, 134,
135, 136, 41,
137, 35, 41,
41, 35, 40,
138, 38, 31,
31, 38, 39,
31, 39, 35,
35, 39, 40,
39, 38, 45,
45, 38, 139,
140, 141, 142,
143, 144, 41,
40, 39, 46,
46, 39, 45,
35, 145, 37,
37, 146, 34,
22, 18, 147,
148, 18, 43,
149, 41, 46,
46, 41, 40,
16, 19, 33,
33, 19, 32,
27, 20, 28,
28, 20, 29,
25, 49, 24,
24, 49, 50,
24, 23, 22,
22, 23, 18,
48, 23, 50,
50, 23, 24,
51, 49, 26,
26, 49, 25,
150, 151, 152,
153, 154, 155,
52, 54, 53,
54, 55, 53,
156, 157, 56,
158, 57, 56,
58, 60, 59,
60, 61, 59,
54, 52, 62,
52, 63, 62,
60, 159, 160,
161, 162, 163,
53, 164, 52,
165, 63, 52,
166, 167, 168,
169, 64, 170,
171, 172, 173,
174, 65, 175,
176, 177, 65,
178, 64, 65,
64, 56, 65,
56, 57, 65,
179, 180, 58,
181, 60, 58,
66, 68, 67,
68, 69, 67,
182, 183, 184,
185, 71, 186,
187, 71, 55,
71, 72, 55,
188, 53, 70,
53, 73, 70,
53, 55, 73,
55, 72, 73,
73, 68, 70,
68, 189, 70,
190, 191, 192,
193, 71, 194,
72, 69, 73,
69, 68, 73,
55, 54, 195,
54, 62, 196,
61, 197, 198,
199, 200, 201,
202, 69, 71,
69, 72, 71,
65, 57, 203,
57, 204, 205,
206, 56, 207,
56, 64, 208,
58, 59, 74,
59, 75, 74,
59, 61, 209,
61, 210, 211,
212, 75, 213,
75, 59, 214,
215, 216, 74,
217, 58, 74,
218, 219, 220,
221, 222, 223,
80, 83, 81,
83, 82, 81,
87, 86, 88,
86, 89, 88,
84, 87, 91,
87, 88, 91,
90, 85, 224,
85, 225, 226,
89, 86, 90,
86, 85, 90,
227, 228, 77,
229, 81, 77,
77, 81, 78,
81, 82, 78,
230, 231, 232,
233, 234, 235,
236, 78, 237,
78, 82, 238,
89, 239, 88,
240, 79, 88,
89, 90, 241,
90, 242, 243,
90, 244, 245,
246, 247, 248,
88, 79, 91,
79, 76, 91,
92, 93, 94,
94, 93, 95, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 249  Texture Co-ords: 156  Normals: 96  Texture: joannadeath6.mtl Faces: 170 Smooth Groups: 4 sucess: 80 Doubles: 90 Redos needed: 153 Correct: 117