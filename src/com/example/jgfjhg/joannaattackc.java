package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class joannaattackc {

static String TextureName = "joannaattack3.mtl";

static int Vertices = 249;

static int VertTexts = 156;

static int Normals = 96;

static int Faces = 170;

static int FacesB = 0;

static int SmoothGroups = 4;

static float VertArray[] = new float[]{
 0.336278f, 0.536778f, 0.275555f,
 0.307828f, 0.933096f, -0.190908f,
 0.914073f, 0.850518f, -0.308963f,
 0.937483f, 0.457815f, 0.129067f,
 -0.008265f, 0.181228f, 0.046668f,
 -0.086497f, 0.558275f, -0.412485f,
 1.797732f, -0.003809f, -1.216163f,
 1.873092f, -0.380637f, -0.768781f,
 0.360242f, 1.919122f, 1.744179f,
 0.450856f, 2.500350f, 1.230767f,
 1.110249f, 2.942463f, 1.594539f,
 1.117523f, 2.421329f, 2.140234f,
 1.981685f, 1.759812f, 1.198552f,
 1.978371f, 2.097408f, 0.801865f,
 1.470447f, 2.051332f, 0.805380f,
 1.417142f, 1.733538f, 1.269125f,
 1.261152f, 4.742445f, 6.018777f,
 0.652102f, 3.631632f, 4.670868f,
 0.100031f, 4.160820f, 5.318328f,
 0.640530f, 4.873824f, 5.620704f,
 0.606048f, 3.923639f, 6.692160f,
 0.374989f, 4.535706f, 4.811292f,
 0.415976f, 4.839417f, 4.910093f,
 0.119775f, 3.915386f, 3.008576f,
 0.777334f, 3.768302f, 2.727741f,
 0.953442f, 3.200404f, 2.822154f,
 0.385299f, 2.799795f, 3.125274f,
 0.521528f, 4.957932f, 7.479454f,
 1.182899f, 4.941701f, 7.093315f,
 1.219472f, 4.248112f, 6.588895f,
 0.986685f, 4.345057f, 5.740866f,
 0.771078f, 4.463573f, 5.734309f,
 0.608930f, 5.774858f, 6.313141f,
 1.228456f, 5.376420f, 6.471953f,
 0.871382f, 4.665460f, 5.527597f,
 1.175608f, 4.578522f, 5.607371f,
 0.510898f, 5.141965f, 5.623729f,
 0.791584f, 5.353617f, 5.403654f,
 1.336750f, 3.398652f, 5.786461f,
 1.508497f, 3.570026f, 6.094328f,
 1.835571f, 3.753525f, 5.883970f,
 1.711525f, 3.612412f, 5.566605f,
 0.850037f, 3.983425f, 5.804131f,
 0.670868f, 4.547332f, 5.439029f,
 2.467911f, 1.843856f, 6.396574f,
 2.473762f, 2.471783f, 6.752369f,
 2.804304f, 2.745378f, 6.462985f,
 2.939124f, 2.354581f, 5.993451f,
 -0.722591f, 2.375230f, 1.064896f,
 1.393058f, 3.140534f, 1.287553f,
 0.567766f, 2.651758f, 0.595622f,
 0.199671f, 1.879310f, 2.280375f,
 0.221303f, 3.185516f, 6.592743f,
 0.713069f, 2.630311f, 6.565949f,
 -0.074907f, 2.875922f, 6.403879f,
 0.466322f, 2.343152f, 6.417924f,
 -0.076291f, 4.939767f, 7.001719f,
 -0.031145f, 5.373895f, 6.380473f,
 -0.246633f, 2.984879f, 3.524827f,
 -0.379775f, 3.562006f, 3.406795f,
 0.577960f, 3.020522f, 5.691849f,
 -0.063329f, 2.917912f, 5.782999f,
 0.227934f, 4.222716f, 5.748246f,
 0.420833f, 3.945590f, 5.951718f,
 -0.040089f, 4.246874f, 6.496831f,
 0.001720f, 4.740143f, 5.927102f,
 2.178550f, 3.294261f, 7.196592f,
 2.597274f, 2.588058f, 7.245635f,
 1.782770f, 2.821923f, 7.570601f,
 2.096420f, 2.408583f, 7.590585f,
 1.309331f, 1.873377f, 6.360689f,
 1.311569f, 1.507561f, 6.284081f,
 1.191984f, 1.431250f, 6.624458f,
 1.188165f, 1.752301f, 6.709589f,
 -1.113360f, 3.111071f, 3.345033f,
 -1.657666f, 2.169815f, 2.692577f,
 -0.349307f, 0.603148f, 3.664718f,
 -0.944575f, 0.605628f, 3.700076f,
 -0.938432f, 0.745043f, 4.307390f,
 -0.349987f, 0.750221f, 4.291505f,
 -0.356456f, 0.060447f, 3.534604f,
 -0.946553f, 0.061365f, 3.548886f,
 -0.941862f, 0.061362f, 5.673063f,
 -0.352675f, 0.061115f, 5.668505f,
 -0.195218f, 1.996804f, 2.926882f,
 -0.961486f, 2.151410f, 2.975019f,
 -0.962370f, 3.016665f, 3.079154f,
 -0.208962f, 2.991350f, 3.057433f,
 -0.389176f, 2.701548f, 4.470271f,
 -0.913306f, 2.710924f, 4.503150f,
 -0.906403f, 2.416714f, 4.142634f,
 -0.346226f, 2.372416f, 4.027803f,
 -0.829171f, 5.216710f, 10.664203f,
 -0.416292f, 4.257793f, 11.241530f,
 2.719725f, 2.351130f, 4.986532f,
 3.266232f, 1.689685f, 5.630554f,
 1.417142f, 1.733538f, 1.269125f,
 1.417142f, 1.733538f, 1.269125f,
 0.360242f, 1.919122f, 1.744179f,
 0.336278f, 0.536778f, 0.275555f,
 -0.008265f, 0.181228f, 0.046668f,
 -0.008265f, 0.181228f, 0.046668f,
 0.336278f, 0.536778f, 0.275555f,
 -0.008265f, 0.181228f, 0.046668f,
 0.937483f, 0.457815f, 0.129067f,
 0.937483f, 0.457815f, 0.129067f,
 -0.008265f, 0.181228f, 0.046668f,
 1.873092f, -0.380637f, -0.768781f,
 0.937483f, 0.457815f, 0.129067f,
 1.873092f, -0.380637f, -0.768781f,
 1.873092f, -0.380637f, -0.768781f,
 0.914073f, 0.850518f, -0.308963f,
 0.914073f, 0.850518f, -0.308963f,
 0.914073f, 0.850518f, -0.308963f,
 0.914073f, 0.850518f, -0.308963f,
 0.307828f, 0.933096f, -0.190908f,
 0.307828f, 0.933096f, -0.190908f,
 1.417142f, 1.733538f, 1.269125f,
 1.417142f, 1.733538f, 1.269125f,
 0.307828f, 0.933096f, -0.190908f,
 0.336278f, 0.536778f, 0.275555f,
 0.986685f, 4.345057f, 5.740866f,
 0.986685f, 4.345057f, 5.740866f,
 0.374989f, 4.535706f, 4.811292f,
 0.374989f, 4.535706f, 4.811292f,
 0.986685f, 4.345057f, 5.740866f,
 0.986685f, 4.345057f, 5.740866f,
 0.871382f, 4.665460f, 5.527597f,
 0.871382f, 4.665460f, 5.527597f,
 0.871382f, 4.665460f, 5.527597f,
 0.986685f, 4.345057f, 5.740866f,
 0.986685f, 4.345057f, 5.740866f,
 0.374989f, 4.535706f, 4.811292f,
 0.415976f, 4.839417f, 4.910093f,
 1.336750f, 3.398652f, 5.786461f,
 1.336750f, 3.398652f, 5.786461f,
 0.415976f, 4.839417f, 4.910093f,
 0.415976f, 4.839417f, 4.910093f,
 0.374989f, 4.535706f, 4.811292f,
 2.467911f, 1.843856f, 6.396574f,
 2.467911f, 1.843856f, 6.396574f,
 1.336750f, 3.398652f, 5.786461f,
 2.939124f, 2.354581f, 5.993451f,
 2.939124f, 2.354581f, 5.993451f,
 1.336750f, 3.398652f, 5.786461f,
 0.415976f, 4.839417f, 4.910093f,
 0.415976f, 4.839417f, 4.910093f,
 0.871382f, 4.665460f, 5.527597f,
 0.871382f, 4.665460f, 5.527597f,
 2.939124f, 2.354581f, 5.993451f,
 -0.722591f, 2.375230f, 1.064896f,
 0.567766f, 2.651758f, 0.595622f,
 0.199671f, 1.879310f, 2.280375f,
 0.199671f, 1.879310f, 2.280375f,
 0.567766f, 2.651758f, 0.595622f,
 1.393058f, 3.140534f, 1.287553f,
 0.521528f, 4.957932f, 7.479454f,
 0.608930f, 5.774858f, 6.313141f,
 0.608930f, 5.774858f, 6.313141f,
 0.652102f, 3.631632f, 4.670868f,
 0.420833f, 3.945590f, 5.951718f,
 0.652102f, 3.631632f, 4.670868f,
 0.850037f, 3.983425f, 5.804131f,
 0.420833f, 3.945590f, 5.951718f,
 0.577960f, 3.020522f, 5.691849f,
 0.577960f, 3.020522f, 5.691849f,
 0.850037f, 3.983425f, 5.804131f,
 0.606048f, 3.923639f, 6.692160f,
 0.420833f, 3.945590f, 5.951718f,
 0.606048f, 3.923639f, 6.692160f,
 0.420833f, 3.945590f, 5.951718f,
 0.670868f, 4.547332f, 5.439029f,
 0.227934f, 4.222716f, 5.748246f,
 0.640530f, 4.873824f, 5.620704f,
 0.227934f, 4.222716f, 5.748246f,
 0.640530f, 4.873824f, 5.620704f,
 0.227934f, 4.222716f, 5.748246f,
 0.420833f, 3.945590f, 5.951718f,
 0.420833f, 3.945590f, 5.951718f,
 0.385299f, 2.799795f, 3.125274f,
 0.652102f, 3.631632f, 4.670868f,
 0.652102f, 3.631632f, 4.670868f,
 0.577960f, 3.020522f, 5.691849f,
 1.309331f, 1.873377f, 6.360689f,
 -0.063329f, 2.917912f, 5.782999f,
 1.309331f, 1.873377f, 6.360689f,
 -0.063329f, 2.917912f, 5.782999f,
 -0.063329f, 2.917912f, 5.782999f,
 0.577960f, 3.020522f, 5.691849f,
 2.178550f, 3.294261f, 7.196592f,
 2.178550f, 3.294261f, 7.196592f,
 2.597274f, 2.588058f, 7.245635f,
 1.309331f, 1.873377f, 6.360689f,
 2.597274f, 2.588058f, 7.245635f,
 1.309331f, 1.873377f, 6.360689f,
 -0.063329f, 2.917912f, 5.782999f,
 -0.063329f, 2.917912f, 5.782999f,
 0.227934f, 4.222716f, 5.748246f,
 0.100031f, 4.160820f, 5.318328f,
 0.227934f, 4.222716f, 5.748246f,
 0.670868f, 4.547332f, 5.439029f,
 0.100031f, 4.160820f, 5.318328f,
 2.597274f, 2.588058f, 7.245635f,
 0.640530f, 4.873824f, 5.620704f,
 0.608930f, 5.774858f, 6.313141f,
 0.640530f, 4.873824f, 5.620704f,
 0.521528f, 4.957932f, 7.479454f,
 0.606048f, 3.923639f, 6.692160f,
 0.606048f, 3.923639f, 6.692160f,
 0.119775f, 3.915386f, 3.008576f,
 0.100031f, 4.160820f, 5.318328f,
 0.119775f, 3.915386f, 3.008576f,
 -0.722591f, 2.375230f, 1.064896f,
 0.119775f, 3.915386f, 3.008576f,
 0.119775f, 3.915386f, 3.008576f,
 0.199671f, 1.879310f, 2.280375f,
 0.385299f, 2.799795f, 3.125274f,
 0.385299f, 2.799795f, 3.125274f,
 -0.722591f, 2.375230f, 1.064896f,
 0.199671f, 1.879310f, 2.280375f,
 -1.657666f, 2.169815f, 2.692577f,
 0.199671f, 1.879310f, 2.280375f,
 -1.113360f, 3.111071f, 3.345033f,
 -1.657666f, 2.169815f, 2.692577f,
 -0.346226f, 2.372416f, 4.027803f,
 -0.195218f, 1.996804f, 2.926882f,
 -0.346226f, 2.372416f, 4.027803f,
 -0.349307f, 0.603148f, 3.664718f,
 -0.356456f, 0.060447f, 3.534604f,
 -0.356456f, 0.060447f, 3.534604f,
 -0.349307f, 0.603148f, 3.664718f,
 -0.349987f, 0.750221f, 4.291505f,
 -0.356456f, 0.060447f, 3.534604f,
 -0.349987f, 0.750221f, 4.291505f,
 -0.352675f, 0.061115f, 5.668505f,
 -0.356456f, 0.060447f, 3.534604f,
 -0.349987f, 0.750221f, 4.291505f,
 -0.352675f, 0.061115f, 5.668505f,
 -0.352675f, 0.061115f, 5.668505f,
 -0.938432f, 0.745043f, 4.307390f,
 -0.938432f, 0.745043f, 4.307390f,
 -0.938432f, 0.745043f, 4.307390f,
 -0.944575f, 0.605628f, 3.700076f,
 -0.938432f, 0.745043f, 4.307390f,
 -0.346226f, 2.372416f, 4.027803f,
 -0.944575f, 0.605628f, 3.700076f,
 -0.346226f, 2.372416f, 4.027803f,
 -0.349307f, 0.603148f, 3.664718f,
 -0.944575f, 0.605628f, 3.700076f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.453876f, 0.791903f,
 0.201824f, 0.532079f,
 0.590263f, 0.596995f,
 0.556897f, 0.779659f,
 0.235400f, 0.777966f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.566387f, 0.397259f,
 0.470805f, 0.365178f,
 0.365778f, 0.346308f,
 0.249833f, 0.335338f,
 0.289739f, 0.984705f,
 0.362886f, 0.905310f,
 0.354538f, 0.788048f,
 0.662213f, 0.973243f,
 0.649436f, 0.842323f,
 0.523433f, 0.983917f,
 0.451956f, 0.900429f,
 0.700374f, 0.973112f,
 0.714202f, 0.842324f,
 0.662213f, 0.871337f,
 0.700374f, 0.871169f,
 0.611238f, 0.659338f,
 0.649436f, 0.659338f,
 0.714202f, 0.659338f,
 0.749335f, 0.659338f,
 0.262276f, 0.714547f,
 0.539459f, 0.732725f,
 0.635368f, 0.320085f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.727698f, 0.329948f,
 0.754615f, 0.048462f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.147427f, 0.097935f,
 0.662213f, 0.871337f,
 0.649436f, 0.842323f,
 0.700374f, 0.871169f,
 0.714202f, 0.842324f,
 0.362886f, 0.905310f,
 0.451956f, 0.900429f,
 0.365778f, 0.346308f,
 0.470805f, 0.365178f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.700374f, 0.973112f,
 0.662213f, 0.973243f,
 0.354538f, 0.788048f,
 0.453876f, 0.791903f,
 0.635368f, 0.320085f,
 0.727698f, 0.329948f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.611238f, 0.659338f,
 0.749335f, 0.659338f,
 0.714202f, 0.659338f,
 0.649436f, 0.659338f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.829311f, 0.001810f,
 0.999173f, 0.001810f,
 0.829311f, 0.998093f,
 0.999173f, 0.998093f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.132466f, 0.001616f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.326300f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.806916f, 0.873085f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.749335f, 0.410462f,
 0.747690f, 0.223911f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.737676f, 0.256798f,
 0.289739f, 0.984705f,
 0.523433f, 0.983917f,
 0.523433f, 0.983917f,
 0.201824f, 0.532079f,
 0.353637f, 0.718421f,
 0.201824f, 0.532079f,
 0.262276f, 0.714547f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.262276f, 0.714547f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.539459f, 0.732725f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.249833f, 0.335338f,
 0.201824f, 0.532079f,
 0.201824f, 0.532079f,
 0.806916f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.590263f, 0.596995f,
 0.452577f, 0.721572f,
 0.539459f, 0.732725f,
 0.590263f, 0.596995f,
 0.749335f, 0.410462f,
 0.556897f, 0.779659f,
 0.523433f, 0.983917f,
 0.556897f, 0.779659f,
 0.289739f, 0.984705f,
 0.235400f, 0.777966f,
 0.235400f, 0.777966f,
 0.566387f, 0.397259f,
 0.590263f, 0.596995f,
 0.566387f, 0.397259f,
 0.754615f, 0.048462f,
 0.566387f, 0.397259f,
 0.566387f, 0.397259f,
 0.147427f, 0.097935f,
 0.249833f, 0.335338f,
 0.249833f, 0.335338f,
 0.747690f, 0.223911f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.737676f, 0.256798f,
 0.756142f, 0.248493f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.196341f, 0.621715f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.132466f, 0.001616f,
 0.063514f, 0.126699f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.102748f, 0.326300f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.326300f,
 0.148951f, 0.326300f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.492084f, -0.868476f, 0.060023f},
{ -0.631538f, -0.155542f, -0.759583f},
{ 0.296072f, -0.948795f, -0.110133f},
{ 0.141923f, -0.178171f, -0.973711f},
{ 0.663819f, -0.184947f, 0.724665f},
{ 0.874021f, -0.346896f, 0.340222f},
{ 0.591194f, 0.784031f, -0.189171f},
{ 0.846238f, 0.303763f, -0.437731f},
{ -0.196762f, -0.978888f, -0.055345f},
{ -0.348624f, -0.719494f, 0.600658f},
{ -0.454861f, 0.639926f, -0.619351f},
{ -0.321849f, 0.013391f, -0.946696f},
{ -0.579581f, -0.095781f, 0.809266f},
{ -0.642623f, 0.745952f, -0.174903f},
{ 0.397591f, 0.611551f, -0.684051f},
{ 0.551268f, -0.573347f, 0.606116f},
{ 0.487845f, 0.855034f, -0.175854f},
{ -0.725089f, -0.214422f, 0.654423f},
{ 0.610170f, 0.639043f, -0.468312f},
{ 0.795348f, 0.588589f, -0.144863f},
{ -0.077968f, 0.156452f, 0.984603f},
{ 0.699573f, 0.150283f, 0.698579f},
{ 0.018524f, 0.977008f, -0.212398f},
{ 0.793764f, 0.597375f, -0.114373f},
{ 0.935127f, -0.268513f, 0.231168f},
{ 0.463970f, 0.839512f, -0.282757f},
{ 0.974942f, 0.138375f, -0.174184f},
{ -0.614948f, 0.739687f, -0.273318f},
{ -0.889697f, 0.455731f, 0.027355f},
{ 0.923797f, -0.081042f, -0.374207f},
{ 0.976667f, -0.202590f, -0.071273f},
{ 0.663330f, -0.734035f, 0.145550f},
{ 0.006449f, -0.855252f, 0.518173f},
{ 0.784502f, -0.578656f, 0.222966f},
{ -0.593491f, 0.452997f, -0.665254f},
{ -0.045507f, 0.554529f, -0.830919f},
{ 0.921898f, 0.124892f, -0.366751f},
{ 0.428507f, -0.744042f, 0.512623f},
{ -0.442472f, -0.848049f, -0.291601f},
{ 0.366728f, -0.288288f, -0.884534f},
{ -0.332894f, -0.115372f, 0.935880f},
{ 0.726487f, 0.624061f, 0.287688f},
{ -0.649230f, -0.675261f, -0.350032f},
{ 0.270978f, -0.173302f, -0.946857f},
{ 0.651956f, 0.707492f, 0.272779f},
{ -0.346479f, 0.166336f, 0.923193f},
{ -0.966256f, 0.254974f, 0.036565f},
{ 0.876840f, 0.132111f, -0.462275f},
{ 0.050166f, 0.184360f, -0.981578f},
{ -0.481899f, 0.819796f, -0.309366f},
{ -0.669947f, 0.234675f, -0.704343f},
{ 0.309874f, -0.932298f, 0.186545f},
{ 0.222957f, 0.496918f, 0.838667f},
{ -0.931116f, -0.116011f, 0.345781f},
{ 0.644671f, 0.536209f, 0.544866f},
{ -0.716667f, -0.640266f, 0.276492f},
{ -0.791867f, 0.137247f, 0.595071f},
{ -0.770951f, 0.598723f, -0.217175f},
{ -0.398042f, -0.771339f, 0.496587f},
{ 0.779761f, -0.542361f, -0.312757f},
{ -0.705467f, 0.681652f, 0.194082f},
{ -0.846172f, -0.455432f, -0.276720f},
{ -0.957028f, 0.289314f, 0.019894f},
{ 0.674013f, -0.589207f, 0.445580f},
{ -0.846898f, -0.503540f, 0.170911f},
{ -0.827575f, 0.105205f, -0.551409f},
{ 0.080792f, 0.786775f, -0.611929f},
{ -0.748660f, 0.470437f, 0.467117f},
{ 0.880412f, -0.160519f, -0.446216f},
{ 0.229566f, -0.666332f, 0.709437f},
{ 0.421096f, 0.475573f, -0.772340f},
{ 0.314059f, -0.746533f, -0.586562f},
{ 0.017444f, -0.980350f, 0.196495f},
{ -0.664534f, 0.167294f, 0.728291f},
{ -0.175872f, -0.522285f, 0.834439f},
{ -0.997264f, 0.008591f, 0.073426f},
{ 0.551183f, -0.803902f, -0.223471f},
{ 0.585674f, -0.602886f, 0.541770f},
{ -0.547334f, -0.807867f, -0.218578f},
{ -0.580466f, -0.603431f, 0.546745f},
{ 0.679434f, 0.694811f, 0.235811f},
{ -0.623957f, 0.757703f, 0.191218f},
{ 0.467068f, 0.459143f, 0.755669f},
{ -0.377664f, 0.433381f, 0.818261f},
{ 0.619209f, -0.713302f, 0.328298f},
{ 0.937712f, -0.251507f, -0.239666f},
{ -0.939280f, -0.144138f, -0.311413f},
{ -0.714530f, -0.662665f, 0.224327f},
{ 0.619734f, 0.160292f, -0.768269f},
{ -0.663735f, 0.172145f, -0.727888f},
{ -0.872406f, 0.217132f, 0.437905f},
{ 0.883742f, 0.187305f, 0.428856f},
{ 0.821782f, 0.508557f, 0.256990f},
{ 0.813765f, 0.525755f, 0.247729f},
{ 0.712811f, 0.685470f, 0.148430f},
{ 0.696001f, 0.705444f, 0.133913f}};

static int[] FaceArray = new int[]{
4, 5, 7,
7, 5, 6,
11, 12, 10,
10, 12, 13,
8, 15, 11,
11, 15, 12,
14, 96, 9,
9, 97, 98,
13, 14, 10,
10, 14, 9,
99, 1, 100,
101, 1, 5,
1, 2, 5,
5, 2, 6,
102, 103, 104,
105, 106, 107,
108, 109, 2,
2, 110, 6,
13, 12, 111,
112, 12, 3,
13, 113, 14,
14, 114, 115,
14, 116, 117,
118, 119, 120,
12, 15, 3,
3, 15, 0,
36, 31, 37,
37, 31, 35,
27, 28, 32,
32, 28, 33,
25, 24, 21,
21, 24, 22,
37, 34, 36,
36, 34, 30,
21, 121, 17,
17, 122, 42,
31, 36, 123,
124, 36, 30,
42, 125, 20,
20, 126, 29,
43, 19, 127,
128, 19, 16,
129, 16, 130,
131, 16, 29,
29, 16, 28,
28, 16, 33,
26, 25, 17,
17, 25, 21,
44, 47, 45,
45, 47, 46,
132, 133, 134,
135, 136, 41,
137, 35, 41,
41, 35, 40,
138, 38, 31,
31, 38, 39,
31, 39, 35,
35, 39, 40,
39, 38, 45,
45, 38, 139,
140, 141, 142,
143, 144, 41,
40, 39, 46,
46, 39, 45,
35, 145, 37,
37, 146, 34,
22, 18, 147,
148, 18, 43,
149, 41, 46,
46, 41, 40,
16, 19, 33,
33, 19, 32,
27, 20, 28,
28, 20, 29,
25, 49, 24,
24, 49, 50,
24, 23, 22,
22, 23, 18,
48, 23, 50,
50, 23, 24,
51, 49, 26,
26, 49, 25,
150, 151, 152,
153, 154, 155,
52, 54, 53,
54, 55, 53,
156, 157, 56,
158, 57, 56,
58, 60, 59,
60, 61, 59,
54, 52, 62,
52, 63, 62,
60, 159, 160,
161, 162, 163,
53, 164, 52,
165, 63, 52,
166, 167, 168,
169, 64, 170,
171, 172, 173,
174, 65, 175,
176, 177, 65,
178, 64, 65,
64, 56, 65,
56, 57, 65,
179, 180, 58,
181, 60, 58,
66, 68, 67,
68, 69, 67,
182, 183, 184,
185, 71, 186,
187, 71, 55,
71, 72, 55,
188, 53, 70,
53, 73, 70,
53, 55, 73,
55, 72, 73,
73, 68, 70,
68, 189, 70,
190, 191, 192,
193, 71, 194,
72, 69, 73,
69, 68, 73,
55, 54, 195,
54, 62, 196,
61, 197, 198,
199, 200, 201,
202, 69, 71,
69, 72, 71,
65, 57, 203,
57, 204, 205,
206, 56, 207,
56, 64, 208,
58, 59, 74,
59, 75, 74,
59, 61, 209,
61, 210, 211,
212, 75, 213,
75, 59, 214,
215, 216, 74,
217, 58, 74,
218, 219, 220,
221, 222, 223,
80, 83, 81,
83, 82, 81,
87, 86, 88,
86, 89, 88,
84, 87, 91,
87, 88, 91,
90, 85, 224,
85, 225, 226,
89, 86, 90,
86, 85, 90,
227, 228, 77,
229, 81, 77,
77, 81, 78,
81, 82, 78,
230, 231, 232,
233, 234, 235,
236, 78, 237,
78, 82, 238,
89, 239, 88,
240, 79, 88,
89, 90, 241,
90, 242, 243,
90, 244, 245,
246, 247, 248,
88, 79, 91,
79, 76, 91,
92, 93, 94,
94, 93, 95, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 249  Texture Co-ords: 156  Normals: 96  Texture: joannaattack3.mtl Faces: 170 Smooth Groups: 4 sucess: 80 Doubles: 90 Redos needed: 153 Correct: 117