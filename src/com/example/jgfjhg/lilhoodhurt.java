package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class lilhoodhurt {

static String TextureName = "LRRH";

static int Vertices = 311;

static int VertTexts = 199;

static int Normals = 129;

static int Faces = 196;

static int FacesB = 20;

static int SmoothGroups = 9;

static float VertArray[] = new float[]{
 0.814132f, 7.154068f, 0.362735f,
 2.847440f, 7.251595f, 0.068979f,
 0.814132f, 8.221724f, -2.853055f,
 2.441086f, 8.115433f, -2.532905f,
 1.691786f, 3.979671f, -1.358559f,
 0.814036f, 3.974830f, -0.831041f,
 0.814131f, 3.890745f, -2.901139f,
 1.696706f, 3.910190f, -2.613996f,
 1.694302f, 6.641435f, -0.376685f,
 0.814132f, 6.606002f, -0.257934f,
 0.814132f, 7.324381f, -2.423920f,
 1.694302f, 7.269185f, -2.164417f,
 0.864436f, 10.123502f, 1.334256f,
 1.167662f, 9.880554f, 1.324304f,
 1.167167f, 10.541200f, -1.311890f,
 0.864423f, 10.621498f, -1.225042f,
 0.814132f, 5.052458f, -0.807817f,
 0.814132f, 5.404295f, -2.692703f,
 1.582332f, 5.405530f, -2.567729f,
 1.582332f, 5.122488f, -1.001191f,
 2.299363f, 1.767680f, -0.436595f,
 0.837169f, 1.886729f, 0.348366f,
 0.785399f, 1.090118f, -3.338286f,
 2.407822f, 1.014072f, -2.814301f,
 0.814132f, 6.415917f, -3.190866f,
 3.210360f, 6.232286f, -2.138968f,
 0.814132f, 0.358163f, -4.286562f,
 4.954613f, 0.150823f, -2.732230f,
 0.527044f, 9.880554f, 1.324304f,
 0.521277f, 10.541200f, -1.311890f,
 -0.063665f, 3.979960f, -1.359053f,
 0.045933f, 5.122488f, -1.001191f,
 0.045933f, 5.405531f, -2.567729f,
 -0.068458f, 3.909971f, -2.614064f,
 -0.066037f, 6.641260f, -0.376611f,
 -1.219175f, 7.251598f, 0.068980f,
 -0.812822f, 8.115435f, -2.532904f,
 -0.066037f, 7.269186f, -2.164417f,
 -0.680691f, 1.699227f, -0.445206f,
 -0.747437f, 1.224193f, -2.902756f,
 -1.582096f, 6.232286f, -2.138967f,
 -3.326348f, 0.150827f, -2.732224f,
 4.082487f, 3.083627f, -2.541450f,
 0.814132f, 3.176253f, -3.620438f,
 -2.454222f, 3.083630f, -2.541445f,
 2.454825f, 4.987580f, 0.316911f,
 2.309450f, 5.291355f, 0.551809f,
 2.715137f, 5.195523f, 0.171621f,
 2.553507f, 5.533264f, 0.432784f,
 3.075969f, 4.096910f, 1.578512f,
 2.820146f, 4.631475f, 1.991872f,
 3.534051f, 4.462835f, 1.322839f,
 3.249623f, 5.057173f, 1.782418f,
 3.478501f, 3.814638f, 2.192674f,
 3.222678f, 4.349204f, 2.606033f,
 3.936585f, 4.180566f, 1.936998f,
 3.652157f, 4.774905f, 2.396578f,
 1.497440f, 5.647445f, -1.278224f,
 1.497440f, 6.021180f, -2.187526f,
 1.554317f, 6.817399f, -1.889505f,
 1.554317f, 6.379411f, -0.954853f,
 -1.166756f, 4.227057f, -0.861242f,
 -0.877060f, 4.390738f, -0.620670f,
 -1.409385f, 4.485726f, -0.781657f,
 -1.087297f, 4.667709f, -0.514185f,
 -1.427156f, 2.889248f, 0.094378f,
 -0.917366f, 3.177284f, 0.517723f,
 -1.854120f, 3.344438f, 0.234427f,
 -1.287328f, 3.664681f, 0.705108f,
 -1.609430f, 2.376645f, 0.662637f,
 -1.099641f, 2.664682f, 1.085982f,
 -2.036397f, 2.831839f, 0.802687f,
 -1.469604f, 3.152082f, 1.273368f,
 0.100491f, 5.647477f, -1.281178f,
 0.100491f, 6.023960f, -2.188886f,
 0.043614f, 6.819475f, -1.888366f,
 0.043614f, 6.379358f, -0.954852f,
 2.420236f, 0.360014f, 0.328434f,
 1.286887f, 0.360012f, 0.328434f,
 1.286887f, -0.211557f, 0.903345f,
 2.420236f, -0.211556f, 0.903345f,
 1.177323f, 1.634228f, -1.101915f,
 1.863697f, 1.642412f, -1.067837f,
 1.212751f, 1.388707f, -1.756536f,
 1.899126f, 1.396891f, -1.722458f,
 1.365588f, 0.363665f, -0.352982f,
 2.341534f, 0.363666f, -0.352982f,
 1.365588f, -0.224437f, -1.310692f,
 2.341534f, -0.224437f, -1.310692f,
 1.691473f, 3.979669f, -1.358546f,
 0.813724f, 3.974830f, -0.831041f,
 0.813815f, 3.890747f, -2.901139f,
 1.696392f, 3.910189f, -2.613998f,
 -0.792284f, 0.360018f, 0.020499f,
 0.341064f, 0.360017f, 0.020500f,
 0.341064f, -0.211557f, 0.595406f,
 -0.792285f, -0.211556f, 0.595405f,
 0.452966f, 1.645383f, -1.104529f,
 -0.234079f, 1.649338f, -1.087442f,
 0.435118f, 1.517828f, -1.792625f,
 -0.251927f, 1.521783f, -1.775537f,
 0.262364f, 0.363676f, -0.660916f,
 -0.713582f, 0.363677f, -0.660917f,
 0.262366f, -0.224419f, -1.618631f,
 -0.713581f, -0.224419f, -1.618632f,
 -0.063665f, 3.979960f, -1.359053f,
 0.814036f, 3.974830f, -0.831041f,
 0.814131f, 3.890745f, -2.901139f,
 -0.068458f, 3.909971f, -2.614064f,
 4.851494f, 1.357335f, -0.981743f,
 1.207376f, 7.615050f, 4.575950f,
 4.287725f, 1.832055f, -1.041602f,
 1.054034f, 7.384981f, 3.890143f,
 2.901501f, 4.785765f, 2.141117f,
 3.630210f, 4.537158f, 2.898844f,
 3.263709f, 4.163777f, 1.588707f,
 3.992418f, 3.915169f, 2.346435f,
 4.395829f, 1.218220f, -2.004626f,
 3.878912f, 2.099376f, -1.228385f,
 0.323572f, 8.211140f, 4.206027f,
 0.831039f, 7.333209f, 3.419959f,
 2.721647f, 5.691367f, 3.527759f,
 2.208701f, 5.760471f, 2.797002f,
 4.314571f, 2.955981f, 1.098368f,
 3.647715f, 3.289381f, 0.602341f,
 1.694302f, 6.641435f, -0.376685f,
 1.694302f, 7.269185f, -2.164417f,
 2.847440f, 7.251595f, 0.068979f,
 2.847440f, 7.251595f, 0.068979f,
 1.694302f, 7.269185f, -2.164417f,
 2.441086f, 8.115433f, -2.532905f,
 1.167662f, 9.880554f, 1.324304f,
 1.167662f, 9.880554f, 1.324304f,
 0.864436f, 10.123502f, 1.334256f,
 2.441086f, 8.115433f, -2.532905f,
 2.847440f, 7.251595f, 0.068979f,
 2.847440f, 7.251595f, 0.068979f,
 1.167167f, 10.541200f, -1.311890f,
 1.167167f, 10.541200f, -1.311890f,
 0.864423f, 10.621498f, -1.225042f,
 1.694302f, 7.269185f, -2.164417f,
 0.814132f, 7.324381f, -2.423920f,
 0.814132f, 7.324381f, -2.423920f,
 0.814132f, 6.606002f, -0.257934f,
 0.814132f, 6.606002f, -0.257934f,
 1.694302f, 6.641435f, -0.376685f,
 1.691786f, 3.979671f, -1.358559f,
 0.814036f, 3.974830f, -0.831041f,
 0.814036f, 3.974830f, -0.831041f,
 0.814131f, 3.890745f, -2.901139f,
 1.696706f, 3.910190f, -2.613996f,
 1.696706f, 3.910190f, -2.613996f,
 1.691786f, 3.979671f, -1.358559f,
 1.696706f, 3.910190f, -2.613996f,
 1.696706f, 3.910190f, -2.613996f,
 2.407822f, 1.014072f, -2.814301f,
 1.694302f, 7.269185f, -2.164417f,
 1.694302f, 7.269185f, -2.164417f,
 1.694302f, 6.641435f, -0.376685f,
 0.814132f, 7.324381f, -2.423920f,
 1.694302f, 7.269185f, -2.164417f,
 1.694302f, 7.269185f, -2.164417f,
 0.045933f, 5.405531f, -2.567729f,
 0.045933f, 5.405531f, -2.567729f,
 -0.068458f, 3.909971f, -2.614064f,
 -0.066037f, 6.641260f, -0.376611f,
 -1.219175f, 7.251598f, 0.068980f,
 -0.066037f, 7.269186f, -2.164417f,
 -0.066037f, 7.269186f, -2.164417f,
 -1.219175f, 7.251598f, 0.068980f,
 -0.812822f, 8.115435f, -2.532904f,
 0.864436f, 10.123502f, 1.334256f,
 0.527044f, 9.880554f, 1.324304f,
 0.527044f, 9.880554f, 1.324304f,
 -1.219175f, 7.251598f, 0.068980f,
 -1.219175f, 7.251598f, 0.068980f,
 -0.812822f, 8.115435f, -2.532904f,
 0.521277f, 10.541200f, -1.311890f,
 0.521277f, 10.541200f, -1.311890f,
 0.864423f, 10.621498f, -1.225042f,
 0.814132f, 7.324381f, -2.423920f,
 0.814132f, 7.324381f, -2.423920f,
 -0.066037f, 7.269186f, -2.164417f,
 0.814132f, 6.606002f, -0.257934f,
 0.814132f, 6.606002f, -0.257934f,
 -0.066037f, 6.641260f, -0.376611f,
 -0.063665f, 3.979960f, -1.359053f,
 0.814036f, 3.974830f, -0.831041f,
 0.814036f, 3.974830f, -0.831041f,
 0.814131f, 3.890745f, -2.901139f,
 -0.068458f, 3.909971f, -2.614064f,
 -0.068458f, 3.909971f, -2.614064f,
 -0.068458f, 3.909971f, -2.614064f,
 -0.068458f, 3.909971f, -2.614064f,
 -0.063665f, 3.979960f, -1.359053f,
 -0.066037f, 6.641260f, -0.376611f,
 -0.066037f, 7.269186f, -2.164417f,
 -0.066037f, 7.269186f, -2.164417f,
 0.045933f, 5.405531f, -2.567729f,
 0.814132f, 7.324381f, -2.423920f,
 -0.066037f, 7.269186f, -2.164417f,
 -0.066037f, 7.269186f, -2.164417f,
 1.497440f, 6.021180f, -2.187526f,
 1.497440f, 6.021180f, -2.187526f,
 2.454825f, 4.987580f, 0.316911f,
 2.454825f, 4.987580f, 0.316911f,
 2.454825f, 4.987580f, 0.316911f,
 3.075969f, 4.096910f, 1.578512f,
 3.936585f, 4.180566f, 1.936998f,
 3.075969f, 4.096910f, 1.578512f,
 3.075969f, 4.096910f, 1.578512f,
 3.936585f, 4.180566f, 1.936998f,
 3.478501f, 3.814638f, 2.192674f,
 3.936585f, 4.180566f, 1.936998f,
 3.936585f, 4.180566f, 1.936998f,
 3.652157f, 4.774905f, 2.396578f,
 3.652157f, 4.774905f, 2.396578f,
 3.652157f, 4.774905f, 2.396578f,
 -1.166756f, 4.227057f, -0.861242f,
 0.100491f, 6.023960f, -2.188886f,
 0.100491f, 6.023960f, -2.188886f,
 -1.427156f, 2.889248f, 0.094378f,
 -1.166756f, 4.227057f, -0.861242f,
 -1.166756f, 4.227057f, -0.861242f,
 -1.609430f, 2.376645f, 0.662637f,
 -2.036397f, 2.831839f, 0.802687f,
 -1.427156f, 2.889248f, 0.094378f,
 -1.427156f, 2.889248f, 0.094378f,
 -2.036397f, 2.831839f, 0.802687f,
 -2.036397f, 2.831839f, 0.802687f,
 -2.036397f, 2.831839f, 0.802687f,
 -1.469604f, 3.152082f, 1.273368f,
 -1.469604f, 3.152082f, 1.273368f,
 -1.469604f, 3.152082f, 1.273368f,
 0.813815f, 3.890747f, -2.901139f,
 1.212751f, 1.388707f, -1.756536f,
 1.212751f, 1.388707f, -1.756536f,
 1.691473f, 3.979669f, -1.358546f,
 1.691473f, 3.979669f, -1.358546f,
 1.863697f, 1.642412f, -1.067837f,
 1.212751f, 1.388707f, -1.756536f,
 1.365588f, -0.224437f, -1.310692f,
 1.365588f, -0.224437f, -1.310692f,
 2.341534f, -0.224437f, -1.310692f,
 1.863697f, 1.642412f, -1.067837f,
 2.341534f, 0.363666f, -0.352982f,
 2.341534f, 0.363666f, -0.352982f,
 2.341534f, -0.224437f, -1.310692f,
 2.341534f, 0.363666f, -0.352982f,
 1.365588f, 0.363665f, -0.352982f,
 1.365588f, 0.363665f, -0.352982f,};

static float VertArrayB[] = new float[]{
 1.365588f, -0.224437f, -1.310692f,
 1.286887f, -0.211557f, 0.903345f,
 1.365588f, 0.363665f, -0.352982f,
 1.365588f, 0.363665f, -0.352982f,
 1.286887f, -0.211557f, 0.903345f,
 1.286887f, 0.360012f, 0.328434f,
 1.365588f, -0.224437f, -1.310692f,
 2.341534f, -0.224437f, -1.310692f,
 1.286887f, -0.211557f, 0.903345f,
 2.341534f, -0.224437f, -1.310692f,
 2.341534f, 0.363666f, -0.352982f,
 2.420236f, -0.211556f, 0.903345f,
 2.420236f, -0.211556f, 0.903345f,
 2.341534f, 0.363666f, -0.352982f,
 2.420236f, 0.360014f, 0.328434f,
 0.814131f, 3.890745f, -2.901139f,
 0.435118f, 1.517828f, -1.792625f,
 -0.068458f, 3.909971f, -2.614064f,
 -0.068458f, 3.909971f, -2.614064f,
 0.435118f, 1.517828f, -1.792625f,
 -0.251927f, 1.521783f, -1.775537f,
 -0.068458f, 3.909971f, -2.614064f,
 -0.251927f, 1.521783f, -1.775537f,
 -0.063665f, 3.979960f, -1.359053f,
 -0.063665f, 3.979960f, -1.359053f,
 -0.251927f, 1.521783f, -1.775537f,
 -0.234079f, 1.649338f, -1.087442f,
 0.435118f, 1.517828f, -1.792625f,
 0.262366f, -0.224419f, -1.618631f,
 -0.251927f, 1.521783f, -1.775537f,
 -0.251927f, 1.521783f, -1.775537f,
 0.262366f, -0.224419f, -1.618631f,
 -0.713581f, -0.224419f, -1.618632f,
 -0.713581f, -0.224419f, -1.618632f,
 -0.713582f, 0.363677f, -0.660917f,
 -0.251927f, 1.521783f, -1.775537f,
 -0.251927f, 1.521783f, -1.775537f,
 -0.713582f, 0.363677f, -0.660917f,
 -0.234079f, 1.649338f, -1.087442f,
 -0.713582f, 0.363677f, -0.660917f,
 -0.792284f, 0.360018f, 0.020499f,
 0.262364f, 0.363676f, -0.660916f,
 0.262364f, 0.363676f, -0.660916f,
 -0.792284f, 0.360018f, 0.020499f,
 0.341064f, 0.360017f, 0.020500f,
 0.341064f, 0.360017f, 0.020500f,
 0.341064f, -0.211557f, 0.595406f,
 0.262364f, 0.363676f, -0.660916f,
 0.262364f, 0.363676f, -0.660916f,
 0.341064f, -0.211557f, 0.595406f,
 0.262366f, -0.224419f, -1.618631f,
 0.262366f, -0.224419f, -1.618631f,
 0.341064f, -0.211557f, 0.595406f,
 -0.713581f, -0.224419f, -1.618632f,
 -0.713581f, -0.224419f, -1.618632f,
 -0.792285f, -0.211556f, 0.595405f,
 -0.713582f, 0.363677f, -0.660917f,
 -0.713582f, 0.363677f, -0.660917f,
 -0.792285f, -0.211556f, 0.595405f,
 -0.792284f, 0.360018f, 0.020499f,};

static float[] TextArray = new float[]{
 0.630075f, 0.318071f,
 0.777400f, 0.318071f,
 0.265372f, 0.303773f,
 0.147307f, 0.303773f,
 0.488957f, 0.012375f,
 0.423595f, 0.011904f,
 0.711862f, 0.011933f,
 0.646199f, 0.012374f,
 0.693849f, 0.268292f,
 0.630075f, 0.268292f,
 0.265372f, 0.262174f,
 0.214264f, 0.263880f,
 0.805419f, 0.249658f,
 0.805419f, 0.236209f,
 0.975264f, 0.236209f,
 0.975264f, 0.249658f,
 0.422835f, 0.121346f,
 0.712567f, 0.120121f,
 0.647108f, 0.121788f,
 0.488577f, 0.121787f,
 0.592804f, 0.994977f,
 0.689407f, 0.955205f,
 0.934362f, 0.594129f,
 0.934354f, 0.489988f,
 0.486458f, 0.507535f,
 0.582212f, 0.506361f,
 0.486458f, 0.737638f,
 0.651913f, 0.736464f,
 0.805419f, 0.263107f,
 0.975264f, 0.263108f,
 0.358234f, 0.011467f,
 0.357094f, 0.120874f,
 0.773870f, 0.120976f,
 0.782091f, 0.011476f,
 0.566302f, 0.268292f,
 0.482750f, 0.318072f,
 0.383437f, 0.303773f,
 0.316479f, 0.263880f,
 0.786929f, 0.917745f,
 0.935598f, 0.698590f,
 0.390703f, 0.506361f,
 0.321002f, 0.736464f,
 0.617062f, 0.621413f,
 0.486458f, 0.622587f,
 0.355853f, 0.621412f,
 0.036262f, 0.882715f,
 0.063521f, 0.884403f,
 0.125636f, 0.888754f,
 0.093046f, 0.889655f,
 0.028541f, 0.803332f,
 0.061668f, 0.803332f,
 0.126707f, 0.803332f,
 0.089227f, 0.803332f,
 0.028397f, 0.767704f,
 0.063216f, 0.767704f,
 0.028397f, 0.727884f,
 0.063216f, 0.727469f,
 0.062904f, 0.969132f,
 0.022767f, 0.967681f,
 0.132879f, 0.967236f,
 0.091184f, 0.968537f,
 0.036262f, 0.882715f,
 0.063521f, 0.884403f,
 0.125636f, 0.888754f,
 0.093046f, 0.889655f,
 0.028541f, 0.803332f,
 0.061668f, 0.803332f,
 0.126707f, 0.803332f,
 0.089227f, 0.803332f,
 0.028397f, 0.767704f,
 0.063216f, 0.767704f,
 0.028397f, 0.727884f,
 0.063216f, 0.727469f,
 0.062904f, 0.969132f,
 0.022767f, 0.967681f,
 0.132879f, 0.967236f,
 0.091184f, 0.968537f,
 0.862196f, 0.955301f,
 0.918038f, 0.955301f,
 0.918038f, 0.926974f,
 0.862196f, 0.926974f,
 0.256825f, 0.881334f,
 0.292701f, 0.881456f,
 0.218504f, 0.881342f,
 0.235118f, 0.593559f,
 0.254307f, 0.942159f,
 0.294779f, 0.942745f,
 0.212156f, 0.971357f,
 0.866076f, 0.817884f,
 0.323010f, 0.761275f,
 0.284589f, 0.761755f,
 0.184288f, 0.761519f,
 0.213615f, 0.713385f,
 0.862196f, 0.955301f,
 0.918038f, 0.955301f,
 0.918038f, 0.926974f,
 0.862196f, 0.926974f,
 0.256825f, 0.881334f,
 0.292701f, 0.881456f,
 0.218504f, 0.881342f,
 0.254307f, 0.942159f,
 0.294779f, 0.942745f,
 0.212156f, 0.971357f,
 0.866076f, 0.817884f,
 0.323010f, 0.761275f,
 0.284589f, 0.761755f,
 0.184288f, 0.761519f,
 0.079364f, 0.603509f,
 0.079397f, 0.054130f,
 0.111348f, 0.572591f,
 0.111378f, 0.085050f,
 0.074195f, 0.300773f,
 0.009202f, 0.300773f,
 0.074201f, 0.355385f,
 0.009195f, 0.355368f,
 0.135816f, 0.649511f,
 0.139523f, 0.558566f,
 0.135624f, 0.007882f,
 0.139551f, 0.099076f,
 0.035525f, 0.208282f,
 0.088138f, 0.219877f,
 0.035509f, 0.448421f,
 0.088131f, 0.436837f,
 0.830236f, 0.030323f,
 0.950447f, 0.030323f,
 0.797056f, 0.069861f,
 0.797056f, 0.069861f,
 0.950447f, 0.030323f,
 0.994107f, 0.069861f,
 0.656294f, 0.527511f,
 0.656294f, 0.527511f,
 0.630075f, 0.544444f,
 0.994107f, 0.069861f,
 0.797056f, 0.069861f,
 0.797056f, 0.069861f,
 0.252709f, 0.471616f,
 0.252709f, 0.471616f,
 0.265372f, 0.485186f,
 0.646986f, 0.253990f,
 0.713420f, 0.251201f,
 0.713420f, 0.251201f,
 0.421917f, 0.253517f,
 0.421917f, 0.253517f,
 0.488118f, 0.253991f,
 0.570051f, 0.817057f,
 0.626105f, 0.796095f,
 0.626105f, 0.796095f,
 0.763113f, 0.594129f,
 0.763113f, 0.533977f,
 0.763113f, 0.533977f,
 0.570051f, 0.817057f,
 0.430492f, 0.784985f,
 0.430492f, 0.784985f,
 0.333532f, 0.938934f,
 0.646986f, 0.253990f,
 0.646986f, 0.253990f,
 0.488118f, 0.253991f,
 0.486458f, 0.473726f,
 0.521629f, 0.472552f,
 0.521629f, 0.472552f,
 0.202748f, 0.118745f,
 0.202748f, 0.118745f,
 0.196441f, 0.009203f,
 0.830235f, 0.468993f,
 0.797056f, 0.429455f,
 0.950447f, 0.468993f,
 0.950447f, 0.468993f,
 0.797056f, 0.429455f,
 0.994106f, 0.429455f,
 0.630075f, 0.544444f,
 0.603856f, 0.527511f,
 0.603856f, 0.527511f,
 0.797056f, 0.429455f,
 0.797056f, 0.429455f,
 0.994106f, 0.429455f,
 0.278034f, 0.471616f,
 0.278034f, 0.471616f,
 0.265372f, 0.485186f,
 0.713420f, 0.251201f,
 0.713420f, 0.251201f,
 0.783665f, 0.253088f,
 0.421917f, 0.253517f,
 0.421917f, 0.253517f,
 0.355716f, 0.253071f,
 0.681239f, 0.772821f,
 0.626105f, 0.796095f,
 0.626105f, 0.796095f,
 0.763113f, 0.594129f,
 0.761869f, 0.653963f,
 0.761869f, 0.653963f,
 0.761869f, 0.653963f,
 0.761869f, 0.653963f,
 0.681239f, 0.772821f,
 0.355716f, 0.253071f,
 0.193085f, 0.250798f,
 0.193085f, 0.250798f,
 0.202748f, 0.118745f,
 0.486458f, 0.473726f,
 0.451286f, 0.472552f,
 0.451286f, 0.472552f,
 0.167610f, 0.967103f,
 0.167610f, 0.967103f,
 0.147867f, 0.883841f,
 0.147867f, 0.883841f,
 0.147867f, 0.883841f,
 0.154473f, 0.803332f,
 0.127330f, 0.767704f,
 0.154473f, 0.803332f,
 0.154473f, 0.803332f,
 0.127330f, 0.767704f,
 0.154669f, 0.767704f,
 0.127330f, 0.767704f,
 0.127330f, 0.767704f,
 0.090776f, 0.767704f,
 0.090776f, 0.767704f,
 0.090776f, 0.767704f,
 0.147867f, 0.883841f,
 0.167610f, 0.967103f,
 0.167610f, 0.967103f,
 0.154473f, 0.803332f,
 0.147867f, 0.883841f,
 0.147867f, 0.883841f,
 0.154669f, 0.767704f,
 0.127330f, 0.767704f,
 0.154473f, 0.803332f,
 0.154473f, 0.803332f,
 0.127330f, 0.767704f,
 0.127330f, 0.767704f,
 0.127330f, 0.767704f,
 0.090776f, 0.767704f,
 0.090776f, 0.767704f,
 0.090776f, 0.767704f,
 0.176118f, 0.713420f,
 0.194413f, 0.593584f,
 0.194413f, 0.593584f,
 0.310668f, 0.713380f,
 0.310668f, 0.713380f,
 0.276453f, 0.593558f,
 0.194413f, 0.593584f,
 0.203156f, 0.503563f,
 0.203156f, 0.503563f,
 0.243427f, 0.503536f,
 0.276453f, 0.593558f,
 0.282801f, 0.532520f,
 0.282801f, 0.532520f,
 0.243427f, 0.503536f,
 0.866074f, 0.988875f,
 0.914161f, 0.988875f,
 0.914161f, 0.988875f,};

static float[] TextArrayB = new float[]{
 0.212156f, 0.971357f,
 0.321245f, 0.970722f,
 0.254307f, 0.942159f,
 0.254307f, 0.942159f,
 0.321245f, 0.970722f,
 0.292918f, 0.942560f,
 0.914163f, 0.817885f,
 0.866076f, 0.817884f,
 0.918038f, 0.926974f,
 0.243427f, 0.503536f,
 0.282801f, 0.532520f,
 0.344702f, 0.504178f,
 0.344702f, 0.504178f,
 0.282801f, 0.532520f,
 0.316375f, 0.532340f,
 0.176118f, 0.713420f,
 0.194413f, 0.593584f,
 0.213615f, 0.713385f,
 0.213615f, 0.713385f,
 0.194413f, 0.593584f,
 0.235118f, 0.593559f,
 0.213615f, 0.713385f,
 0.235118f, 0.593559f,
 0.310668f, 0.713380f,
 0.310668f, 0.713380f,
 0.235118f, 0.593559f,
 0.276453f, 0.593558f,
 0.194413f, 0.593584f,
 0.203156f, 0.503563f,
 0.235118f, 0.593559f,
 0.235118f, 0.593559f,
 0.203156f, 0.503563f,
 0.243427f, 0.503536f,
 0.243427f, 0.503536f,
 0.282801f, 0.532520f,
 0.235118f, 0.593559f,
 0.235118f, 0.593559f,
 0.282801f, 0.532520f,
 0.276453f, 0.593558f,
 0.866074f, 0.988875f,
 0.862196f, 0.955301f,
 0.914161f, 0.988875f,
 0.914161f, 0.988875f,
 0.862196f, 0.955301f,
 0.918038f, 0.955301f,
 0.292918f, 0.942560f,
 0.321245f, 0.970722f,
 0.254307f, 0.942159f,
 0.254307f, 0.942159f,
 0.321245f, 0.970722f,
 0.212156f, 0.971357f,
 0.914163f, 0.817885f,
 0.918038f, 0.926974f,
 0.866076f, 0.817884f,
 0.243427f, 0.503536f,
 0.344702f, 0.504178f,
 0.282801f, 0.532520f,
 0.282801f, 0.532520f,
 0.344702f, 0.504178f,
 0.316375f, 0.532340f,};

static float[][] NormArray = new float[][]{
{ 0.002332f, 0.674450f, 0.738317f},
{ 0.795462f, 0.359183f, 0.488087f},
{ 0.000670f, 0.965905f, -0.258895f},
{ 0.792336f, 0.599298f, -0.114217f},
{ 0.906306f, 0.249002f, 0.341479f},
{ 0.931297f, -0.106100f, 0.348467f},
{ -0.010997f, 0.352983f, 0.935565f},
{ 0.000006f, -0.208855f, 0.977947f},
{ 0.000000f, 0.137644f, -0.990482f},
{ 0.874562f, 0.059790f, -0.481214f},
{ 0.001298f, 0.130053f, -0.991506f},
{ 0.844521f, 0.204418f, -0.494973f},
{ 0.000081f, -0.520230f, 0.854026f},
{ 0.703439f, -0.657135f, 0.270826f},
{ -0.000875f, -0.421471f, 0.906842f},
{ 0.921829f, 0.060786f, 0.382802f},
{ 0.857440f, 0.312334f, -0.408955f},
{ 0.721472f, -0.431916f, -0.541227f},
{ -0.001190f, 0.337810f, -0.941214f},
{ -0.000000f, -0.431432f, -0.902146f},
{ -0.000000f, 0.181671f, -0.983359f},
{ 0.881494f, 0.360052f, 0.305501f},
{ -0.017632f, 0.491572f, 0.870658f},
{ 0.050160f, 0.158704f, -0.986051f},
{ 0.820180f, 0.237389f, -0.520529f},
{ 0.000000f, 0.645082f, -0.764114f},
{ 0.357411f, 0.544301f, -0.758943f},
{ -0.000000f, 0.217983f, -0.975953f},
{ 0.357863f, 0.204125f, -0.911190f},
{ -0.000000f, 0.208118f, -0.978104f},
{ 0.329488f, 0.191030f, -0.924632f},
{ -0.783324f, 0.376003f, 0.495000f},
{ -0.777969f, 0.618392f, -0.111158f},
{ -0.931285f, -0.106113f, 0.348495f},
{ -0.906235f, 0.246016f, 0.343824f},
{ -0.874539f, 0.059811f, -0.481252f},
{ -0.849240f, 0.213708f, -0.482826f},
{ -0.703449f, -0.657113f, 0.270854f},
{ -0.920335f, 0.078898f, 0.383091f},
{ -0.721465f, -0.431920f, -0.541233f},
{ -0.857023f, 0.325508f, -0.399444f},
{ -0.867158f, 0.365714f, 0.338070f},
{ -0.815002f, 0.261613f, -0.517040f},
{ -0.357411f, 0.544300f, -0.758943f},
{ -0.357863f, 0.204125f, -0.911190f},
{ -0.329489f, 0.191030f, -0.924632f},
{ -0.000000f, 0.202684f, -0.979244f},
{ 0.353863f, 0.165114f, -0.920608f},
{ -0.353865f, 0.165114f, -0.920607f},
{ -0.010023f, -0.956300f, 0.292216f},
{ 0.973936f, -0.191094f, -0.122195f},
{ -0.360915f, -0.171537f, 0.916687f},
{ 0.585353f, 0.615748f, 0.527462f},
{ 0.884684f, -0.012389f, -0.466027f},
{ -0.374056f, -0.889889f, -0.261112f},
{ -0.625692f, -0.779689f, -0.024399f},
{ -0.878466f, 0.066995f, 0.473086f},
{ 0.914370f, 0.240770f, -0.325511f},
{ 0.858613f, -0.093680f, -0.503992f},
{ -0.128128f, 0.767708f, 0.627860f},
{ 0.454189f, 0.877782f, 0.152354f},
{ -0.898619f, 0.053121f, 0.435502f},
{ -0.484131f, -0.838363f, -0.250528f},
{ 0.797399f, -0.073551f, -0.598954f},
{ 0.337092f, 0.926781f, 0.165669f},
{ -0.178255f, 0.336062f, 0.924818f},
{ -0.959973f, -0.087200f, 0.266174f},
{ 0.642356f, -0.570820f, 0.511414f},
{ -0.090922f, -0.986610f, -0.135399f},
{ 0.955979f, -0.269373f, 0.116370f},
{ 0.048545f, -0.592745f, -0.803926f},
{ 0.790384f, -0.592555f, 0.155473f},
{ -0.611900f, -0.043301f, -0.789749f},
{ -0.918857f, 0.272993f, -0.284916f},
{ -0.871555f, 0.442548f, -0.211051f},
{ -0.629601f, 0.583166f, 0.513342f},
{ -0.211389f, 0.586372f, 0.781974f},
{ 0.984406f, -0.172892f, -0.032452f},
{ 0.146377f, -0.655088f, -0.741238f},
{ -0.962571f, 0.223878f, -0.152759f},
{ -0.028519f, 0.767386f, 0.640551f},
{ 0.390736f, 0.832722f, 0.392300f},
{ -0.377878f, 0.844461f, 0.379599f},
{ 0.228182f, -0.916965f, 0.327274f},
{ -0.238315f, -0.909156f, 0.341528f},
{ -0.845835f, -0.189619f, 0.498606f},
{ -0.714494f, 0.038773f, 0.698567f},
{ 0.895017f, 0.053086f, 0.442863f},
{ 0.679148f, 0.333365f, 0.653931f},
{ -0.825229f, -0.338433f, -0.452173f},
{ -0.793545f, -0.300164f, -0.529327f},
{ 0.803568f, -0.175240f, -0.568832f},
{ 0.744193f, -0.081675f, -0.662953f},
{ -0.880702f, 0.358345f, 0.309762f},
{ 0.878867f, 0.443255f, 0.176403f},
{ -0.528278f, -0.744391f, -0.408418f},
{ 0.570450f, -0.681186f, -0.458881f},
{ -0.390737f, 0.832719f, 0.392307f},
{ -0.228183f, -0.916968f, 0.327266f},
{ 0.377877f, 0.844458f, 0.379606f},
{ 0.238315f, -0.909159f, 0.341521f},
{ -0.669614f, 0.272561f, 0.690889f},
{ 0.688645f, -0.006171f, 0.725072f},
{ -0.888903f, 0.048442f, 0.455528f},
{ 0.827708f, -0.191274f, 0.527555f},
{ 0.814065f, -0.264771f, -0.516908f},
{ 0.822733f, -0.343119f, -0.453189f},
{ -0.803139f, -0.181376f, -0.567512f},
{ -0.747486f, -0.024633f, -0.663821f},
{ -0.903538f, 0.395969f, 0.163793f},
{ 0.908396f, 0.276758f, 0.313402f},
{ 0.501759f, -0.722300f, -0.475942f},
{ -0.542290f, -0.665049f, -0.513450f},
{ -0.620963f, -0.690718f, 0.370559f},
{ -0.620962f, -0.690718f, 0.370560f},
{ -0.620963f, -0.690718f, 0.370559f},
{ -0.620962f, -0.690718f, 0.370560f},
{ -0.620963f, -0.690718f, 0.370559f},
{ -0.620963f, -0.690718f, 0.370560f},
{ -0.620963f, -0.690718f, 0.370559f},
{ -0.620962f, -0.690718f, 0.370560f},
{ -0.620963f, -0.690718f, 0.370559f},
{ -0.620962f, -0.690718f, 0.370560f},
{ -0.620962f, -0.690718f, 0.370560f},
{ -0.620962f, -0.690718f, 0.370560f},
{ -0.620963f, -0.690718f, 0.370559f},
{ -0.620962f, -0.690719f, 0.370559f},
{ -0.620962f, -0.690718f, 0.370559f},
{ -0.620962f, -0.690718f, 0.370560f}};

static int[] FaceArray = new int[]{
12, 13, 15,
15, 13, 14,
4, 19, 5,
5, 19, 16,
17, 18, 6,
6, 18, 7,
7, 18, 4,
4, 18, 19,
9, 8, 0,
0, 8, 1,
3, 11, 2,
2, 11, 10,
125, 126, 127,
128, 129, 130,
1, 131, 0,
0, 132, 133,
134, 14, 135,
136, 14, 13,
3, 2, 137,
138, 2, 139,
140, 18, 141,
142, 18, 17,
16, 19, 143,
144, 19, 145,
146, 147, 20,
20, 148, 21,
149, 150, 22,
22, 151, 23,
152, 20, 153,
154, 20, 155,
18, 156, 19,
19, 157, 158,
159, 160, 24,
24, 161, 25,
24, 25, 43,
43, 25, 42,
12, 15, 28,
28, 15, 29,
16, 31, 5,
5, 31, 30,
17, 6, 32,
32, 6, 33,
31, 162, 30,
30, 163, 164,
9, 0, 34,
34, 0, 35,
10, 37, 2,
2, 37, 36,
165, 166, 167,
168, 169, 170,
171, 172, 0,
0, 173, 35,
28, 29, 174,
175, 29, 176,
36, 177, 2,
2, 178, 179,
17, 32, 180,
181, 32, 182,
16, 183, 31,
31, 184, 185,
186, 38, 187,
188, 38, 21,
189, 22, 190,
191, 22, 39,
39, 38, 192,
193, 38, 194,
195, 196, 31,
31, 197, 198,
199, 24, 200,
201, 24, 40,
24, 43, 40,
40, 43, 44,
43, 42, 26,
26, 42, 27,
43, 26, 44,
44, 26, 41,
53, 55, 54,
54, 55, 56,
58, 45, 57,
57, 45, 46,
59, 47, 202,
203, 47, 204,
59, 60, 47,
47, 60, 48,
57, 46, 60,
60, 46, 48,
46, 45, 50,
50, 45, 49,
47, 51, 205,
206, 51, 207,
47, 48, 51,
51, 48, 52,
48, 46, 52,
52, 46, 50,
50, 49, 54,
54, 49, 53,
51, 208, 209,
210, 211, 212,
51, 52, 213,
214, 52, 215,
52, 50, 216,
217, 50, 54,
72, 71, 70,
70, 71, 69,
62, 61, 73,
73, 61, 74,
218, 63, 219,
220, 63, 75,
75, 63, 76,
76, 63, 64,
76, 64, 73,
73, 64, 62,
62, 66, 61,
61, 66, 65,
221, 67, 222,
223, 67, 63,
63, 67, 64,
64, 67, 68,
64, 68, 62,
62, 68, 66,
66, 70, 65,
65, 70, 69,
224, 225, 226,
227, 228, 67,
67, 229, 68,
68, 230, 231,
68, 232, 66,
66, 233, 70,
77, 78, 80,
80, 78, 79,
90, 81, 89,
89, 81, 82,
91, 83, 90,
90, 83, 81,
234, 92, 235,
236, 92, 84,
92, 237, 84,
84, 238, 239,
81, 85, 82,
82, 85, 86,
81, 83, 85,
85, 83, 87,
240, 84, 241,
242, 84, 243,
244, 245, 84,
84, 246, 247,
248, 249, 77,
77, 250, 78,
79, 88, 80,
93, 96, 94,
94, 96, 95,
98, 97, 105,
105, 97, 106,
97, 99, 106,
106, 99, 107,
102, 101, 98,
98, 101, 97,
97, 101, 99,
99, 101, 103,
104, 95, 96,
122, 113, 121,
121, 113, 114,
116, 114, 115,
115, 114, 113,
124, 111, 123,
123, 111, 109,
109, 111, 117,
117, 111, 118,
110, 119, 112,
112, 119, 120,
111, 112, 118,
118, 112, 120,
122, 121, 112,
112, 121, 110,
124, 123, 115,
115, 123, 116, };

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 311  Texture Co-ords: 199  Normals: 129  Texture: LRRH Faces: 196 Smooth Groups: 9 sucess: 100 Doubles: 96 Redos needed: 126 Correct: 102