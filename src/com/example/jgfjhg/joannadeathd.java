package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class joannadeathd {

static String TextureName = "joannadeath4.mtl";

static int Vertices = 249;

static int VertTexts = 156;

static int Normals = 96;

static int Faces = 170;

static int FacesB = 0;

static int SmoothGroups = 4;

static float VertArray[] = new float[]{
 0.341727f, 1.062337f, -1.056374f,
 0.923878f, 1.068481f, -1.142176f,
 0.941478f, 0.446007f, -1.119565f,
 0.357106f, 0.440333f, -1.049326f,
 0.297556f, 1.460971f, -1.355855f,
 0.876843f, 1.461576f, -1.458158f,
 0.694109f, -0.398534f, -2.467494f,
 0.114880f, -0.395977f, -2.363740f,
 0.297568f, 1.414559f, 0.122395f,
 1.065574f, 1.417280f, 0.185684f,
 1.167505f, 1.341867f, 1.049291f,
 0.414260f, 1.335605f, 1.106212f,
 0.633794f, -0.095230f, 0.830474f,
 1.142993f, -0.093366f, 0.772659f,
 1.112007f, 0.235473f, 0.548029f,
 0.599901f, 0.259842f, 0.608669f,
 0.815460f, 6.112626f, 0.014762f,
 0.176923f, 4.605057f, 0.919530f,
 0.136808f, 5.169933f, -0.971336f,
 0.151971f, 6.299939f, -0.302519f,
 0.226987f, 5.193507f, 0.708057f,
 1.061733f, 4.598106f, 0.426377f,
 1.205626f, 4.658583f, -0.473300f,
 0.178943f, 3.295421f, 0.095071f,
 0.858190f, 3.224602f, 0.353032f,
 0.886911f, 3.030435f, 0.921127f,
 0.179046f, 2.840931f, 1.155315f,
 0.296251f, 6.067250f, 1.583296f,
 0.895364f, 6.124936f, 1.108589f,
 0.850200f, 5.527921f, 0.492903f,
 0.658958f, 5.486609f, 0.222742f,
 1.663310f, 4.369610f, 0.325846f,
 0.222625f, 7.074427f, 0.567435f,
 0.856161f, 6.659873f, 0.569184f,
 0.658662f, 5.708376f, -0.288228f,
 1.812400f, 4.428063f, -0.106926f,
 1.662839f, 5.129234f, 0.437478f,
 1.794123f, 5.220004f, -0.045000f,
 1.578704f, 3.260737f, -0.059525f,
 1.962043f, 3.292177f, -0.002579f,
 2.069027f, 3.427108f, -0.396890f,
 1.715255f, 3.413962f, -0.498656f,
 0.184436f, 5.329188f, 0.555571f,
 0.143836f, 6.013562f, -0.498013f,
 2.083447f, 1.352744f, -0.463898f,
 2.578635f, 1.836732f, -0.269684f,
 2.665091f, 2.073338f, -0.720604f,
 2.253517f, 1.817940f, -1.117287f,
 0.149389f, 0.423787f, -0.381303f,
 1.544901f, 1.082377f, 1.161270f,
 1.565317f, 1.027932f, 0.005068f,
 0.201988f, 1.086092f, 1.629981f,
 -1.172796f, 5.005824f, 0.543582f,
 -0.933073f, 4.301692f, 0.461990f,
 -1.419506f, 4.947803f, 0.147491f,
 -1.159810f, 4.240282f, 0.075905f,
 -0.366003f, 6.124978f, 1.200678f,
 -0.405677f, 6.659828f, 0.661276f,
 -0.531829f, 3.030944f, 0.925954f,
 -0.499556f, 3.224934f, 0.352052f,
 -0.591467f, 4.682951f, 0.408610f,
 -0.822329f, 4.630808f, -0.448637f,
 -0.353226f, 5.705169f, -0.258887f,
 -0.306843f, 5.494054f, 0.250395f,
 -0.410829f, 5.528008f, 0.585057f,
 -0.446064f, 6.112673f, 0.106816f,
 -0.317902f, 1.247029f, -0.038539f,
 -0.776357f, 1.519420f, -0.662216f,
 -0.914809f, 1.545801f, 0.233551f,
 -1.174495f, 1.679533f, -0.195127f,
 -0.496803f, 3.246672f, 0.136439f,
 -0.760915f, 3.280942f, -0.268814f,
 -1.068686f, 3.181432f, -0.092176f,
 -0.847865f, 3.147123f, 0.275565f,
 -0.968859f, 1.275913f, 1.478337f,
 -1.293738f, 0.979408f, 0.229577f,
 -0.340785f, 1.044653f, -0.681707f,
 -0.923638f, 1.078691f, -0.651895f,
 -0.965900f, 0.459902f, -0.591834f,
 -0.380401f, 0.423522f, -0.641259f,
 -0.298589f, 1.460667f, -0.909033f,
 -0.876843f, 1.461574f, -1.007062f,
 -0.694109f, -0.398536f, -2.016400f,
 -0.114884f, -0.395979f, -1.912894f,
 -0.070510f, 1.261822f, 0.166040f,
 -0.806050f, 1.341302f, 0.381467f,
 -0.720484f, 1.493541f, 1.236259f,
 0.026773f, 1.439557f, 1.139669f,
 -0.289270f, 0.008429f, 1.274233f,
 -0.798269f, 0.039611f, 1.324887f,
 -0.802841f, 0.290613f, 1.082062f,
 -0.290878f, 0.283706f, 1.017115f,
 2.060755f, 0.928701f, 5.442820f,
 1.636418f, 0.004235f, 5.157913f,
 2.476124f, 2.943195f, -1.616557f,
 2.074233f, 2.016960f, -1.911405f,
 0.599901f, 0.259842f, 0.608669f,
 0.599901f, 0.259842f, 0.608669f,
 0.297568f, 1.414559f, 0.122395f,
 0.341727f, 1.062337f, -1.056374f,
 0.297556f, 1.460971f, -1.355855f,
 0.297556f, 1.460971f, -1.355855f,
 0.341727f, 1.062337f, -1.056374f,
 0.297556f, 1.460971f, -1.355855f,
 0.357106f, 0.440333f, -1.049326f,
 0.357106f, 0.440333f, -1.049326f,
 0.297556f, 1.460971f, -1.355855f,
 0.114880f, -0.395977f, -2.363740f,
 0.357106f, 0.440333f, -1.049326f,
 0.114880f, -0.395977f, -2.363740f,
 0.114880f, -0.395977f, -2.363740f,
 0.941478f, 0.446007f, -1.119565f,
 0.941478f, 0.446007f, -1.119565f,
 0.941478f, 0.446007f, -1.119565f,
 0.941478f, 0.446007f, -1.119565f,
 0.923878f, 1.068481f, -1.142176f,
 0.923878f, 1.068481f, -1.142176f,
 0.599901f, 0.259842f, 0.608669f,
 0.599901f, 0.259842f, 0.608669f,
 0.923878f, 1.068481f, -1.142176f,
 0.341727f, 1.062337f, -1.056374f,
 0.658958f, 5.486609f, 0.222742f,
 0.658958f, 5.486609f, 0.222742f,
 1.061733f, 4.598106f, 0.426377f,
 1.061733f, 4.598106f, 0.426377f,
 0.658958f, 5.486609f, 0.222742f,
 0.658958f, 5.486609f, 0.222742f,
 0.658662f, 5.708376f, -0.288228f,
 0.658662f, 5.708376f, -0.288228f,
 0.658662f, 5.708376f, -0.288228f,
 0.658958f, 5.486609f, 0.222742f,
 0.658958f, 5.486609f, 0.222742f,
 1.061733f, 4.598106f, 0.426377f,
 1.205626f, 4.658583f, -0.473300f,
 1.578704f, 3.260737f, -0.059525f,
 1.578704f, 3.260737f, -0.059525f,
 1.205626f, 4.658583f, -0.473300f,
 1.205626f, 4.658583f, -0.473300f,
 1.061733f, 4.598106f, 0.426377f,
 2.083447f, 1.352744f, -0.463898f,
 2.083447f, 1.352744f, -0.463898f,
 1.578704f, 3.260737f, -0.059525f,
 2.253517f, 1.817940f, -1.117287f,
 2.253517f, 1.817940f, -1.117287f,
 1.578704f, 3.260737f, -0.059525f,
 1.205626f, 4.658583f, -0.473300f,
 1.205626f, 4.658583f, -0.473300f,
 0.658662f, 5.708376f, -0.288228f,
 0.658662f, 5.708376f, -0.288228f,
 2.253517f, 1.817940f, -1.117287f,
 0.149389f, 0.423787f, -0.381303f,
 1.565317f, 1.027932f, 0.005068f,
 0.201988f, 1.086092f, 1.629981f,
 0.201988f, 1.086092f, 1.629981f,
 1.565317f, 1.027932f, 0.005068f,
 1.544901f, 1.082377f, 1.161270f,
 0.296251f, 6.067250f, 1.583296f,
 0.222625f, 7.074427f, 0.567435f,
 0.222625f, 7.074427f, 0.567435f,
 0.176923f, 4.605057f, 0.919530f,
 -0.306843f, 5.494054f, 0.250395f,
 0.176923f, 4.605057f, 0.919530f,
 0.184436f, 5.329188f, 0.555571f,
 -0.306843f, 5.494054f, 0.250395f,
 -0.591467f, 4.682951f, 0.408610f,
 -0.591467f, 4.682951f, 0.408610f,
 0.184436f, 5.329188f, 0.555571f,
 0.226987f, 5.193507f, 0.708057f,
 -0.306843f, 5.494054f, 0.250395f,
 0.226987f, 5.193507f, 0.708057f,
 -0.306843f, 5.494054f, 0.250395f,
 0.143836f, 6.013562f, -0.498013f,
 -0.353226f, 5.705169f, -0.258887f,
 0.151971f, 6.299939f, -0.302519f,
 -0.353226f, 5.705169f, -0.258887f,
 0.151971f, 6.299939f, -0.302519f,
 -0.353226f, 5.705169f, -0.258887f,
 -0.306843f, 5.494054f, 0.250395f,
 -0.306843f, 5.494054f, 0.250395f,
 0.179046f, 2.840931f, 1.155315f,
 0.176923f, 4.605057f, 0.919530f,
 0.176923f, 4.605057f, 0.919530f,
 -0.591467f, 4.682951f, 0.408610f,
 -0.496803f, 3.246672f, 0.136439f,
 -0.822329f, 4.630808f, -0.448637f,
 -0.496803f, 3.246672f, 0.136439f,
 -0.822329f, 4.630808f, -0.448637f,
 -0.822329f, 4.630808f, -0.448637f,
 -0.591467f, 4.682951f, 0.408610f,
 -0.317902f, 1.247029f, -0.038539f,
 -0.317902f, 1.247029f, -0.038539f,
 -0.776357f, 1.519420f, -0.662216f,
 -0.496803f, 3.246672f, 0.136439f,
 -0.776357f, 1.519420f, -0.662216f,
 -0.496803f, 3.246672f, 0.136439f,
 -0.822329f, 4.630808f, -0.448637f,
 -0.822329f, 4.630808f, -0.448637f,
 -0.353226f, 5.705169f, -0.258887f,
 0.136808f, 5.169933f, -0.971336f,
 -0.353226f, 5.705169f, -0.258887f,
 0.143836f, 6.013562f, -0.498013f,
 0.136808f, 5.169933f, -0.971336f,
 -0.776357f, 1.519420f, -0.662216f,
 0.151971f, 6.299939f, -0.302519f,
 0.222625f, 7.074427f, 0.567435f,
 0.151971f, 6.299939f, -0.302519f,
 0.296251f, 6.067250f, 1.583296f,
 0.226987f, 5.193507f, 0.708057f,
 0.226987f, 5.193507f, 0.708057f,
 0.178943f, 3.295421f, 0.095071f,
 0.136808f, 5.169933f, -0.971336f,
 0.178943f, 3.295421f, 0.095071f,
 0.149389f, 0.423787f, -0.381303f,
 0.178943f, 3.295421f, 0.095071f,
 0.178943f, 3.295421f, 0.095071f,
 0.201988f, 1.086092f, 1.629981f,
 0.179046f, 2.840931f, 1.155315f,
 0.179046f, 2.840931f, 1.155315f,
 0.149389f, 0.423787f, -0.381303f,
 0.201988f, 1.086092f, 1.629981f,
 -1.293738f, 0.979408f, 0.229577f,
 0.201988f, 1.086092f, 1.629981f,
 -0.968859f, 1.275913f, 1.478337f,
 -1.293738f, 0.979408f, 0.229577f,
 -0.290878f, 0.283706f, 1.017115f,
 -0.070510f, 1.261822f, 0.166040f,
 -0.290878f, 0.283706f, 1.017115f,
 -0.340785f, 1.044653f, -0.681707f,
 -0.298589f, 1.460667f, -0.909033f,
 -0.298589f, 1.460667f, -0.909033f,
 -0.340785f, 1.044653f, -0.681707f,
 -0.380401f, 0.423522f, -0.641259f,
 -0.298589f, 1.460667f, -0.909033f,
 -0.380401f, 0.423522f, -0.641259f,
 -0.114884f, -0.395979f, -1.912894f,
 -0.298589f, 1.460667f, -0.909033f,
 -0.380401f, 0.423522f, -0.641259f,
 -0.114884f, -0.395979f, -1.912894f,
 -0.114884f, -0.395979f, -1.912894f,
 -0.965900f, 0.459902f, -0.591834f,
 -0.965900f, 0.459902f, -0.591834f,
 -0.965900f, 0.459902f, -0.591834f,
 -0.923638f, 1.078691f, -0.651895f,
 -0.965900f, 0.459902f, -0.591834f,
 -0.290878f, 0.283706f, 1.017115f,
 -0.923638f, 1.078691f, -0.651895f,
 -0.290878f, 0.283706f, 1.017115f,
 -0.340785f, 1.044653f, -0.681707f,
 -0.923638f, 1.078691f, -0.651895f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.453876f, 0.791903f,
 0.201824f, 0.532079f,
 0.590263f, 0.596995f,
 0.556897f, 0.779659f,
 0.235400f, 0.777966f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.566387f, 0.397259f,
 0.470805f, 0.365178f,
 0.365778f, 0.346308f,
 0.249833f, 0.335338f,
 0.289739f, 0.984705f,
 0.362886f, 0.905310f,
 0.354538f, 0.788048f,
 0.662213f, 0.973243f,
 0.649436f, 0.842323f,
 0.523433f, 0.983917f,
 0.451956f, 0.900429f,
 0.700374f, 0.973112f,
 0.714202f, 0.842324f,
 0.662213f, 0.871337f,
 0.700374f, 0.871169f,
 0.611238f, 0.659338f,
 0.649436f, 0.659338f,
 0.714202f, 0.659338f,
 0.749335f, 0.659338f,
 0.262276f, 0.714547f,
 0.539459f, 0.732725f,
 0.635368f, 0.320085f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.727698f, 0.329948f,
 0.754615f, 0.048462f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.147427f, 0.097935f,
 0.662213f, 0.871337f,
 0.649436f, 0.842323f,
 0.700374f, 0.871169f,
 0.714202f, 0.842324f,
 0.362886f, 0.905310f,
 0.451956f, 0.900429f,
 0.365778f, 0.346308f,
 0.470805f, 0.365178f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.700374f, 0.973112f,
 0.662213f, 0.973243f,
 0.354538f, 0.788048f,
 0.453876f, 0.791903f,
 0.635368f, 0.320085f,
 0.727698f, 0.329948f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.611238f, 0.659338f,
 0.749335f, 0.659338f,
 0.714202f, 0.659338f,
 0.649436f, 0.659338f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.829311f, 0.001810f,
 0.999173f, 0.001810f,
 0.829311f, 0.998093f,
 0.999173f, 0.998093f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.132466f, 0.001616f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.326300f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.806916f, 0.873085f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.749335f, 0.410462f,
 0.747690f, 0.223911f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.737676f, 0.256798f,
 0.289739f, 0.984705f,
 0.523433f, 0.983917f,
 0.523433f, 0.983917f,
 0.201824f, 0.532079f,
 0.353637f, 0.718421f,
 0.201824f, 0.532079f,
 0.262276f, 0.714547f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.262276f, 0.714547f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.539459f, 0.732725f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.249833f, 0.335338f,
 0.201824f, 0.532079f,
 0.201824f, 0.532079f,
 0.806916f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.590263f, 0.596995f,
 0.452577f, 0.721572f,
 0.539459f, 0.732725f,
 0.590263f, 0.596995f,
 0.749335f, 0.410462f,
 0.556897f, 0.779659f,
 0.523433f, 0.983917f,
 0.556897f, 0.779659f,
 0.289739f, 0.984705f,
 0.235400f, 0.777966f,
 0.235400f, 0.777966f,
 0.566387f, 0.397259f,
 0.590263f, 0.596995f,
 0.566387f, 0.397259f,
 0.754615f, 0.048462f,
 0.566387f, 0.397259f,
 0.566387f, 0.397259f,
 0.147427f, 0.097935f,
 0.249833f, 0.335338f,
 0.249833f, 0.335338f,
 0.747690f, 0.223911f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.737676f, 0.256798f,
 0.756142f, 0.248493f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.196341f, 0.621715f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.132466f, 0.001616f,
 0.063514f, 0.126699f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.102748f, 0.326300f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.326300f,
 0.148951f, 0.326300f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.695421f, 0.540368f, -0.473701f},
{ 0.512272f, 0.527323f, -0.677870f},
{ -0.762102f, -0.240065f, -0.601306f},
{ 0.520667f, -0.242893f, -0.818480f},
{ -0.607813f, -0.266017f, 0.748197f},
{ -0.269839f, -0.848831f, 0.454612f},
{ 0.709787f, -0.138192f, 0.690728f},
{ 0.378661f, -0.869772f, 0.316406f},
{ -0.651464f, -0.432937f, -0.623025f},
{ -0.974953f, 0.202350f, -0.092309f},
{ 0.924780f, 0.334945f, -0.180540f},
{ 0.620157f, -0.255761f, -0.741615f},
{ -0.548823f, 0.674230f, 0.494174f},
{ 0.650131f, 0.680522f, 0.337964f},
{ 0.864355f, -0.495822f, -0.083969f},
{ -0.824674f, -0.531016f, 0.194766f},
{ 0.401939f, 0.451497f, 0.796615f},
{ 0.470091f, -0.174591f, 0.865178f},
{ 0.672842f, 0.582928f, -0.455499f},
{ 0.881129f, 0.192881f, -0.431750f},
{ 0.073797f, 0.023986f, 0.996985f},
{ 0.795721f, 0.054891f, 0.603171f},
{ -0.002109f, 0.998720f, -0.050534f},
{ 0.776686f, 0.618327f, -0.120125f},
{ 0.648253f, 0.228547f, 0.726315f},
{ 0.816054f, 0.030854f, -0.577151f},
{ 0.420342f, -0.000696f, 0.907365f},
{ 0.264430f, -0.239128f, -0.934288f},
{ 0.583721f, 0.495261f, -0.643418f},
{ 0.566461f, 0.424205f, 0.706521f},
{ -0.005062f, 0.283593f, 0.958931f},
{ 0.039096f, 0.329981f, 0.943178f},
{ 0.036859f, -0.812656f, 0.581576f},
{ 0.861168f, -0.478546f, 0.171417f},
{ -0.028609f, 0.514054f, -0.857281f},
{ -0.055892f, 0.673978f, -0.736634f},
{ 0.835658f, 0.279206f, -0.472990f},
{ 0.058505f, 0.226403f, 0.972275f},
{ -0.788220f, -0.586894f, 0.185109f},
{ -0.539937f, -0.127200f, -0.832038f},
{ 0.443076f, -0.264811f, 0.856480f},
{ 0.871516f, 0.298068f, -0.389379f},
{ -0.888063f, -0.378174f, 0.261399f},
{ -0.520968f, 0.002025f, -0.853574f},
{ 0.842830f, 0.399714f, -0.360370f},
{ 0.541563f, -0.001350f, 0.840659f},
{ -0.015059f, -0.133152f, -0.990981f},
{ 0.815482f, -0.206082f, 0.540851f},
{ 0.731789f, -0.273944f, -0.624051f},
{ -0.029539f, -0.114275f, -0.993010f},
{ -0.054720f, -0.569775f, -0.819977f},
{ 0.103293f, -0.489004f, 0.866144f},
{ -0.432349f, 0.460815f, 0.775064f},
{ -0.865946f, 0.389690f, -0.313496f},
{ -0.231689f, -0.215867f, 0.948537f},
{ -0.957090f, -0.203429f, -0.206387f},
{ -0.699637f, 0.058060f, 0.712135f},
{ -0.785686f, 0.618623f, -0.001791f},
{ -0.662395f, 0.258410f, 0.703176f},
{ -0.353225f, 0.189113f, 0.916225f},
{ -0.838900f, 0.026440f, -0.543643f},
{ -0.424356f, -0.167307f, -0.889905f},
{ -0.677825f, 0.472695f, -0.563128f},
{ -0.656864f, 0.368556f, 0.657797f},
{ -0.825280f, -0.476185f, 0.303580f},
{ -0.896528f, 0.293709f, -0.331620f},
{ 0.971122f, -0.236964f, 0.027760f},
{ -0.139686f, -0.288855f, 0.947128f},
{ 0.376209f, -0.041721f, -0.925595f},
{ -0.976796f, -0.079247f, -0.198969f},
{ 0.996874f, 0.032401f, 0.072063f},
{ 0.324427f, 0.076198f, -0.942837f},
{ -0.982051f, 0.026125f, -0.186798f},
{ -0.329251f, -0.076520f, 0.941137f},
{ -0.740390f, -0.082261f, 0.667126f},
{ -0.821884f, -0.266990f, -0.503213f},
{ 0.683050f, 0.544706f, -0.486557f},
{ 0.756993f, -0.275245f, -0.592623f},
{ -0.570026f, 0.501748f, -0.650630f},
{ -0.561503f, -0.280789f, -0.778378f},
{ 0.749298f, -0.131956f, 0.648954f},
{ -0.550968f, 0.085728f, 0.830111f},
{ 0.261031f, -0.810346f, 0.524598f},
{ -0.264773f, -0.823917f, 0.501054f},
{ 0.481614f, -0.634510f, -0.604520f},
{ 0.964526f, 0.078354f, -0.252092f},
{ -0.937919f, 0.346324f, 0.019183f},
{ -0.764348f, -0.395360f, -0.509374f},
{ 0.630332f, 0.657731f, 0.412398f},
{ -0.561276f, 0.714024f, 0.418496f},
{ -0.895662f, -0.444014f, -0.025322f},
{ 0.798636f, -0.574046f, 0.180698f},
{ 0.914113f, -0.400903f, -0.060618f},
{ 0.914849f, -0.399337f, -0.059847f},
{ 0.921365f, -0.385088f, -0.052858f},
{ 0.922070f, -0.383503f, -0.052083f}};

static int[] FaceArray = new int[]{
4, 5, 7,
7, 5, 6,
11, 12, 10,
10, 12, 13,
8, 15, 11,
11, 15, 12,
14, 96, 9,
9, 97, 98,
13, 14, 10,
10, 14, 9,
99, 1, 100,
101, 1, 5,
1, 2, 5,
5, 2, 6,
102, 103, 104,
105, 106, 107,
108, 109, 2,
2, 110, 6,
13, 12, 111,
112, 12, 3,
13, 113, 14,
14, 114, 115,
14, 116, 117,
118, 119, 120,
12, 15, 3,
3, 15, 0,
36, 31, 37,
37, 31, 35,
27, 28, 32,
32, 28, 33,
25, 24, 21,
21, 24, 22,
37, 34, 36,
36, 34, 30,
21, 121, 17,
17, 122, 42,
31, 36, 123,
124, 36, 30,
42, 125, 20,
20, 126, 29,
43, 19, 127,
128, 19, 16,
129, 16, 130,
131, 16, 29,
29, 16, 28,
28, 16, 33,
26, 25, 17,
17, 25, 21,
44, 47, 45,
45, 47, 46,
132, 133, 134,
135, 136, 41,
137, 35, 41,
41, 35, 40,
138, 38, 31,
31, 38, 39,
31, 39, 35,
35, 39, 40,
39, 38, 45,
45, 38, 139,
140, 141, 142,
143, 144, 41,
40, 39, 46,
46, 39, 45,
35, 145, 37,
37, 146, 34,
22, 18, 147,
148, 18, 43,
149, 41, 46,
46, 41, 40,
16, 19, 33,
33, 19, 32,
27, 20, 28,
28, 20, 29,
25, 49, 24,
24, 49, 50,
24, 23, 22,
22, 23, 18,
48, 23, 50,
50, 23, 24,
51, 49, 26,
26, 49, 25,
150, 151, 152,
153, 154, 155,
52, 54, 53,
54, 55, 53,
156, 157, 56,
158, 57, 56,
58, 60, 59,
60, 61, 59,
54, 52, 62,
52, 63, 62,
60, 159, 160,
161, 162, 163,
53, 164, 52,
165, 63, 52,
166, 167, 168,
169, 64, 170,
171, 172, 173,
174, 65, 175,
176, 177, 65,
178, 64, 65,
64, 56, 65,
56, 57, 65,
179, 180, 58,
181, 60, 58,
66, 68, 67,
68, 69, 67,
182, 183, 184,
185, 71, 186,
187, 71, 55,
71, 72, 55,
188, 53, 70,
53, 73, 70,
53, 55, 73,
55, 72, 73,
73, 68, 70,
68, 189, 70,
190, 191, 192,
193, 71, 194,
72, 69, 73,
69, 68, 73,
55, 54, 195,
54, 62, 196,
61, 197, 198,
199, 200, 201,
202, 69, 71,
69, 72, 71,
65, 57, 203,
57, 204, 205,
206, 56, 207,
56, 64, 208,
58, 59, 74,
59, 75, 74,
59, 61, 209,
61, 210, 211,
212, 75, 213,
75, 59, 214,
215, 216, 74,
217, 58, 74,
218, 219, 220,
221, 222, 223,
80, 83, 81,
83, 82, 81,
87, 86, 88,
86, 89, 88,
84, 87, 91,
87, 88, 91,
90, 85, 224,
85, 225, 226,
89, 86, 90,
86, 85, 90,
227, 228, 77,
229, 81, 77,
77, 81, 78,
81, 82, 78,
230, 231, 232,
233, 234, 235,
236, 78, 237,
78, 82, 238,
89, 239, 88,
240, 79, 88,
89, 90, 241,
90, 242, 243,
90, 244, 245,
246, 247, 248,
88, 79, 91,
79, 76, 91,
92, 93, 94,
94, 93, 95, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 249  Texture Co-ords: 156  Normals: 96  Texture: joannadeath4.mtl Faces: 170 Smooth Groups: 4 sucess: 80 Doubles: 90 Redos needed: 153 Correct: 117