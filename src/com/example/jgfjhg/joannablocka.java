package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class joannablocka {

static String TextureName = "joannablock1.mtl";

static int Vertices = 249;

static int VertTexts = 156;

static int Normals = 96;

static int Faces = 170;

static int FacesB = 0;

static int SmoothGroups = 4;

static float VertArray[] = new float[]{
 0.246792f, 0.662397f, -1.146652f,
 0.742275f, 0.830330f, -1.420311f,
 1.058120f, 0.698094f, -0.899552f,
 0.551606f, 0.543600f, -0.641885f,
 0.283154f, 0.064192f, -1.383250f,
 0.863753f, 0.061373f, -1.495291f,
 1.227995f, 0.061372f, 0.597434f,
 0.647724f, 0.061364f, 0.697605f,
 -0.192355f, 3.473864f, 0.107205f,
 0.525012f, 3.654488f, -0.107108f,
 0.947402f, 3.537146f, 0.648305f,
 0.285246f, 3.339707f, 0.952800f,
 0.707211f, 2.086020f, 0.512277f,
 1.153680f, 2.216219f, 0.282191f,
 0.843090f, 2.409298f, -0.193690f,
 0.378671f, 2.297431f, 0.057422f,
 1.063336f, 8.143909f, 1.825056f,
 0.467433f, 6.316660f, 1.856307f,
 -0.117877f, 7.269608f, 1.492707f,
 0.418582f, 8.071478f, 1.439492f,
 0.427305f, 7.835944f, 2.881675f,
 0.572798f, 6.825837f, 1.080316f,
 -0.062258f, 7.111856f, 0.694774f,
 -0.187694f, 5.513296f, 0.816291f,
 0.455840f, 5.378071f, 0.499353f,
 0.825593f, 5.045722f, 0.838655f,
 0.452440f, 4.800056f, 1.457473f,
 0.400124f, 9.131078f, 2.971571f,
 1.041622f, 8.886250f, 2.631282f,
 1.042627f, 8.029740f, 2.572134f,
 0.804523f, 7.602547f, 1.954171f,
 1.082083f, 6.779355f, 0.662699f,
 0.440869f, 9.201063f, 1.546932f,
 1.062630f, 8.922668f, 1.872334f,
 0.590178f, 7.763202f, 1.551713f,
 0.812671f, 6.740997f, 0.344869f,
 1.018190f, 7.527613f, 0.714274f,
 0.672941f, 7.575279f, 0.393001f,
 0.943399f, 5.797742f, 0.592638f,
 1.220543f, 5.844774f, 0.325750f,
 1.078643f, 5.617758f, 0.092797f,
 0.799175f, 5.543265f, 0.321259f,
 0.603343f, 7.404771f, 2.320534f,
 0.442435f, 7.694395f, 1.457965f,
 2.239276f, 5.931890f, 1.917220f,
 2.400784f, 6.018415f, 1.221786f,
 2.406698f, 5.526934f, 1.061405f,
 2.224741f, 5.192731f, 1.558472f,
 -0.874341f, 2.769314f, 0.008198f,
 1.380751f, 3.394835f, 0.597431f,
 0.734538f, 3.385074f, -0.571046f,
 0.363842f, 3.149842f, 1.668540f,
 0.242051f, 7.648159f, 2.715535f,
 0.770707f, 7.154359f, 2.618115f,
 0.300862f, 7.574233f, 3.165595f,
 0.867604f, 7.100108f, 3.022196f,
 -0.221310f, 8.885761f, 2.597081f,
 -0.200021f, 8.922091f, 1.838977f,
 -0.171142f, 5.042605f, 1.838335f,
 -0.503515f, 5.377711f, 1.460400f,
 0.025226f, 6.634295f, 2.568469f,
 -0.292033f, 6.889537f, 2.930910f,
 -0.068050f, 7.669536f, 2.079695f,
 0.131127f, 7.519064f, 2.399517f,
 -0.220463f, 8.029426f, 2.537110f,
 -0.199127f, 8.143406f, 1.791357f,
 1.722608f, 6.567843f, 0.750375f,
 2.377153f, 6.220326f, 1.106617f,
 2.008648f, 7.043350f, 1.210470f,
 2.423352f, 6.786648f, 1.388541f,
 1.474546f, 6.410809f, 2.589425f,
 1.714211f, 6.254260f, 2.910761f,
 1.919540f, 6.560437f, 2.924675f,
 1.718530f, 6.713062f, 2.638137f,
 -1.213612f, 3.711626f, 2.225086f,
 -1.459325f, 3.131753f, 1.334944f,
 -0.300764f, 0.631495f, 1.719391f,
 -0.879344f, 0.639478f, 1.637130f,
 -0.992988f, 0.717969f, 2.244784f,
 -0.412983f, 0.717935f, 2.344591f,
 -0.284392f, 0.062422f, 1.592629f,
 -0.863752f, 0.061382f, 1.504707f,
 -1.227994f, 0.061379f, 3.597429f,
 -0.647716f, 0.061376f, 3.695951f,
 -0.042358f, 3.303086f, 1.269554f,
 -0.802131f, 3.386809f, 1.287336f,
 -0.928743f, 3.847170f, 2.016754f,
 -0.181040f, 3.829473f, 2.121362f,
 -0.531264f, 2.603678f, 2.772358f,
 -1.039648f, 2.610837f, 2.704526f,
 -0.940554f, 2.497635f, 2.131522f,
 -0.426197f, 2.482087f, 2.119170f,
 1.802681f, 11.750657f, 1.216527f,
 2.049439f, 11.546659f, 2.323847f,
 1.894604f, 4.463123f, 0.576810f,
 2.059762f, 4.375217f, 1.629823f,
 0.378671f, 2.297431f, 0.057422f,
 0.378671f, 2.297431f, 0.057422f,
 -0.192355f, 3.473864f, 0.107205f,
 0.246792f, 0.662397f, -1.146652f,
 0.283154f, 0.064192f, -1.383250f,
 0.283154f, 0.064192f, -1.383250f,
 0.246792f, 0.662397f, -1.146652f,
 0.283154f, 0.064192f, -1.383250f,
 0.551606f, 0.543600f, -0.641885f,
 0.551606f, 0.543600f, -0.641885f,
 0.283154f, 0.064192f, -1.383250f,
 0.647724f, 0.061364f, 0.697605f,
 0.551606f, 0.543600f, -0.641885f,
 0.647724f, 0.061364f, 0.697605f,
 0.647724f, 0.061364f, 0.697605f,
 1.058120f, 0.698094f, -0.899552f,
 1.058120f, 0.698094f, -0.899552f,
 1.058120f, 0.698094f, -0.899552f,
 1.058120f, 0.698094f, -0.899552f,
 0.742275f, 0.830330f, -1.420311f,
 0.742275f, 0.830330f, -1.420311f,
 0.378671f, 2.297431f, 0.057422f,
 0.378671f, 2.297431f, 0.057422f,
 0.742275f, 0.830330f, -1.420311f,
 0.246792f, 0.662397f, -1.146652f,
 0.804523f, 7.602547f, 1.954171f,
 0.804523f, 7.602547f, 1.954171f,
 0.572798f, 6.825837f, 1.080316f,
 0.572798f, 6.825837f, 1.080316f,
 0.804523f, 7.602547f, 1.954171f,
 0.804523f, 7.602547f, 1.954171f,
 0.590178f, 7.763202f, 1.551713f,
 0.590178f, 7.763202f, 1.551713f,
 0.590178f, 7.763202f, 1.551713f,
 0.804523f, 7.602547f, 1.954171f,
 0.804523f, 7.602547f, 1.954171f,
 0.572798f, 6.825837f, 1.080316f,
 -0.062258f, 7.111856f, 0.694774f,
 0.943399f, 5.797742f, 0.592638f,
 0.943399f, 5.797742f, 0.592638f,
 -0.062258f, 7.111856f, 0.694774f,
 -0.062258f, 7.111856f, 0.694774f,
 0.572798f, 6.825837f, 1.080316f,
 2.239276f, 5.931890f, 1.917220f,
 2.239276f, 5.931890f, 1.917220f,
 0.943399f, 5.797742f, 0.592638f,
 2.224741f, 5.192731f, 1.558472f,
 2.224741f, 5.192731f, 1.558472f,
 0.943399f, 5.797742f, 0.592638f,
 -0.062258f, 7.111856f, 0.694774f,
 -0.062258f, 7.111856f, 0.694774f,
 0.590178f, 7.763202f, 1.551713f,
 0.590178f, 7.763202f, 1.551713f,
 2.224741f, 5.192731f, 1.558472f,
 -0.874341f, 2.769314f, 0.008198f,
 0.734538f, 3.385074f, -0.571046f,
 0.363842f, 3.149842f, 1.668540f,
 0.363842f, 3.149842f, 1.668540f,
 0.734538f, 3.385074f, -0.571046f,
 1.380751f, 3.394835f, 0.597431f,
 0.400124f, 9.131078f, 2.971571f,
 0.440869f, 9.201063f, 1.546932f,
 0.440869f, 9.201063f, 1.546932f,
 0.467433f, 6.316660f, 1.856307f,
 0.131127f, 7.519064f, 2.399517f,
 0.467433f, 6.316660f, 1.856307f,
 0.603343f, 7.404771f, 2.320534f,
 0.131127f, 7.519064f, 2.399517f,
 0.025226f, 6.634295f, 2.568469f,
 0.025226f, 6.634295f, 2.568469f,
 0.603343f, 7.404771f, 2.320534f,
 0.427305f, 7.835944f, 2.881675f,
 0.131127f, 7.519064f, 2.399517f,
 0.427305f, 7.835944f, 2.881675f,
 0.131127f, 7.519064f, 2.399517f,
 0.442435f, 7.694395f, 1.457965f,
 -0.068050f, 7.669536f, 2.079695f,
 0.418582f, 8.071478f, 1.439492f,
 -0.068050f, 7.669536f, 2.079695f,
 0.418582f, 8.071478f, 1.439492f,
 -0.068050f, 7.669536f, 2.079695f,
 0.131127f, 7.519064f, 2.399517f,
 0.131127f, 7.519064f, 2.399517f,
 0.452440f, 4.800056f, 1.457473f,
 0.467433f, 6.316660f, 1.856307f,
 0.467433f, 6.316660f, 1.856307f,
 0.025226f, 6.634295f, 2.568469f,
 1.474546f, 6.410809f, 2.589425f,
 -0.292033f, 6.889537f, 2.930910f,
 1.474546f, 6.410809f, 2.589425f,
 -0.292033f, 6.889537f, 2.930910f,
 -0.292033f, 6.889537f, 2.930910f,
 0.025226f, 6.634295f, 2.568469f,
 1.722608f, 6.567843f, 0.750375f,
 1.722608f, 6.567843f, 0.750375f,
 2.377153f, 6.220326f, 1.106617f,
 1.474546f, 6.410809f, 2.589425f,
 2.377153f, 6.220326f, 1.106617f,
 1.474546f, 6.410809f, 2.589425f,
 -0.292033f, 6.889537f, 2.930910f,
 -0.292033f, 6.889537f, 2.930910f,
 -0.068050f, 7.669536f, 2.079695f,
 -0.117877f, 7.269608f, 1.492707f,
 -0.068050f, 7.669536f, 2.079695f,
 0.442435f, 7.694395f, 1.457965f,
 -0.117877f, 7.269608f, 1.492707f,
 2.377153f, 6.220326f, 1.106617f,
 0.418582f, 8.071478f, 1.439492f,
 0.440869f, 9.201063f, 1.546932f,
 0.418582f, 8.071478f, 1.439492f,
 0.400124f, 9.131078f, 2.971571f,
 0.427305f, 7.835944f, 2.881675f,
 0.427305f, 7.835944f, 2.881675f,
 -0.187694f, 5.513296f, 0.816291f,
 -0.117877f, 7.269608f, 1.492707f,
 -0.187694f, 5.513296f, 0.816291f,
 -0.874341f, 2.769314f, 0.008198f,
 -0.187694f, 5.513296f, 0.816291f,
 -0.187694f, 5.513296f, 0.816291f,
 0.363842f, 3.149842f, 1.668540f,
 0.452440f, 4.800056f, 1.457473f,
 0.452440f, 4.800056f, 1.457473f,
 -0.874341f, 2.769314f, 0.008198f,
 0.363842f, 3.149842f, 1.668540f,
 -1.459325f, 3.131753f, 1.334944f,
 0.363842f, 3.149842f, 1.668540f,
 -1.213612f, 3.711626f, 2.225086f,
 -1.459325f, 3.131753f, 1.334944f,
 -0.426197f, 2.482087f, 2.119170f,
 -0.042358f, 3.303086f, 1.269554f,
 -0.426197f, 2.482087f, 2.119170f,
 -0.300764f, 0.631495f, 1.719391f,
 -0.284392f, 0.062422f, 1.592629f,
 -0.284392f, 0.062422f, 1.592629f,
 -0.300764f, 0.631495f, 1.719391f,
 -0.412983f, 0.717935f, 2.344591f,
 -0.284392f, 0.062422f, 1.592629f,
 -0.412983f, 0.717935f, 2.344591f,
 -0.647716f, 0.061376f, 3.695951f,
 -0.284392f, 0.062422f, 1.592629f,
 -0.412983f, 0.717935f, 2.344591f,
 -0.647716f, 0.061376f, 3.695951f,
 -0.647716f, 0.061376f, 3.695951f,
 -0.992988f, 0.717969f, 2.244784f,
 -0.992988f, 0.717969f, 2.244784f,
 -0.992988f, 0.717969f, 2.244784f,
 -0.879344f, 0.639478f, 1.637130f,
 -0.992988f, 0.717969f, 2.244784f,
 -0.426197f, 2.482087f, 2.119170f,
 -0.879344f, 0.639478f, 1.637130f,
 -0.426197f, 2.482087f, 2.119170f,
 -0.300764f, 0.631495f, 1.719391f,
 -0.879344f, 0.639478f, 1.637130f,};

static float VertArrayB[] = new float[]{};

static float[] TextArray = new float[]{
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.453876f, 0.791903f,
 0.201824f, 0.532079f,
 0.590263f, 0.596995f,
 0.556897f, 0.779659f,
 0.235400f, 0.777966f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.566387f, 0.397259f,
 0.470805f, 0.365178f,
 0.365778f, 0.346308f,
 0.249833f, 0.335338f,
 0.289739f, 0.984705f,
 0.362886f, 0.905310f,
 0.354538f, 0.788048f,
 0.662213f, 0.973243f,
 0.649436f, 0.842323f,
 0.523433f, 0.983917f,
 0.451956f, 0.900429f,
 0.700374f, 0.973112f,
 0.714202f, 0.842324f,
 0.662213f, 0.871337f,
 0.700374f, 0.871169f,
 0.611238f, 0.659338f,
 0.649436f, 0.659338f,
 0.714202f, 0.659338f,
 0.749335f, 0.659338f,
 0.262276f, 0.714547f,
 0.539459f, 0.732725f,
 0.635368f, 0.320085f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.727698f, 0.329948f,
 0.754615f, 0.048462f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.147427f, 0.097935f,
 0.662213f, 0.871337f,
 0.649436f, 0.842323f,
 0.700374f, 0.871169f,
 0.714202f, 0.842324f,
 0.362886f, 0.905310f,
 0.451956f, 0.900429f,
 0.365778f, 0.346308f,
 0.470805f, 0.365178f,
 0.367224f, 0.573251f,
 0.453040f, 0.577674f,
 0.700374f, 0.973112f,
 0.662213f, 0.973243f,
 0.354538f, 0.788048f,
 0.453876f, 0.791903f,
 0.635368f, 0.320085f,
 0.727698f, 0.329948f,
 0.647458f, 0.410463f,
 0.714202f, 0.410460f,
 0.611238f, 0.659338f,
 0.749335f, 0.659338f,
 0.714202f, 0.659338f,
 0.649436f, 0.659338f,
 0.320425f, 0.069876f,
 0.504948f, 0.016928f,
 0.006939f, 0.326299f,
 0.090499f, 0.173168f,
 0.105659f, 0.212267f,
 0.055390f, 0.326300f,
 0.015021f, 0.168109f,
 0.054525f, 0.165271f,
 0.064749f, 0.307849f,
 0.025236f, 0.310573f,
 0.006936f, 0.973168f,
 0.148951f, 0.973168f,
 0.102753f, 0.881533f,
 0.055389f, 0.881533f,
 0.055390f, 0.579866f,
 0.102750f, 0.579866f,
 0.148951f, 0.621715f,
 0.006938f, 0.621714f,
 0.829311f, 0.001810f,
 0.999173f, 0.001810f,
 0.829311f, 0.998093f,
 0.999173f, 0.998093f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.132466f, 0.001616f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.326300f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.806916f, 0.873085f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.452577f, 0.721572f,
 0.749335f, 0.410462f,
 0.747690f, 0.223911f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.737676f, 0.256798f,
 0.289739f, 0.984705f,
 0.523433f, 0.983917f,
 0.523433f, 0.983917f,
 0.201824f, 0.532079f,
 0.353637f, 0.718421f,
 0.201824f, 0.532079f,
 0.262276f, 0.714547f,
 0.353637f, 0.718421f,
 0.611238f, 0.872595f,
 0.611238f, 0.872595f,
 0.262276f, 0.714547f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.235400f, 0.777966f,
 0.353637f, 0.718421f,
 0.539459f, 0.732725f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.556897f, 0.779659f,
 0.452577f, 0.721572f,
 0.353637f, 0.718421f,
 0.353637f, 0.718421f,
 0.249833f, 0.335338f,
 0.201824f, 0.532079f,
 0.201824f, 0.532079f,
 0.806916f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.611238f, 0.872595f,
 0.611238f, 0.410462f,
 0.806916f, 0.410462f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.410462f,
 0.806916f, 0.659338f,
 0.749335f, 0.873085f,
 0.749335f, 0.873085f,
 0.452577f, 0.721572f,
 0.590263f, 0.596995f,
 0.452577f, 0.721572f,
 0.539459f, 0.732725f,
 0.590263f, 0.596995f,
 0.749335f, 0.410462f,
 0.556897f, 0.779659f,
 0.523433f, 0.983917f,
 0.556897f, 0.779659f,
 0.289739f, 0.984705f,
 0.235400f, 0.777966f,
 0.235400f, 0.777966f,
 0.566387f, 0.397259f,
 0.590263f, 0.596995f,
 0.566387f, 0.397259f,
 0.754615f, 0.048462f,
 0.566387f, 0.397259f,
 0.566387f, 0.397259f,
 0.147427f, 0.097935f,
 0.249833f, 0.335338f,
 0.249833f, 0.335338f,
 0.747690f, 0.223911f,
 0.724061f, 0.244264f,
 0.756142f, 0.248493f,
 0.724061f, 0.244264f,
 0.737676f, 0.256798f,
 0.756142f, 0.248493f,
 0.196341f, 0.621715f,
 0.196341f, 0.973168f,
 0.196341f, 0.621715f,
 0.099486f, 0.134595f,
 0.063514f, 0.126699f,
 0.063514f, 0.126699f,
 0.099486f, 0.134595f,
 0.129579f, 0.105546f,
 0.063514f, 0.126699f,
 0.129579f, 0.105546f,
 0.132466f, 0.001616f,
 0.063514f, 0.126699f,
 0.142109f, 0.227760f,
 0.101198f, 0.323344f,
 0.101198f, 0.323344f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.102748f, 0.326300f,
 0.148951f, 0.326300f,
 0.102748f, 0.326300f,
 0.196341f, 0.621715f,
 0.148951f, 0.326300f,
 0.196341f, 0.621715f,
 0.196341f, 0.326300f,
 0.148951f, 0.326300f,};

static float[] TextArrayB = new float[]{};

static float[][] NormArray = new float[][]{
{ -0.497468f, -0.840187f, -0.215898f},
{ 0.492010f, -0.780696f, -0.385280f},
{ -0.346291f, -0.680291f, 0.645978f},
{ 0.632505f, -0.592433f, 0.498960f},
{ -0.327524f, -0.409050f, 0.851708f},
{ -0.165055f, -0.488917f, 0.856573f},
{ 0.954984f, 0.075340f, 0.286932f},
{ 0.967271f, -0.093413f, 0.235926f},
{ -0.847068f, -0.396164f, -0.354303f},
{ -0.983644f, -0.118805f, -0.135387f},
{ 0.406279f, 0.417718f, -0.812680f},
{ 0.386245f, 0.116518f, -0.915007f},
{ -0.946268f, 0.202819f, -0.251875f},
{ 0.166582f, 0.504225f, -0.847353f},
{ 0.998182f, 0.050715f, -0.032578f},
{ -0.743005f, 0.088116f, 0.663460f},
{ 0.976558f, 0.214817f, -0.013731f},
{ 0.942599f, 0.044641f, 0.330928f},
{ -0.290059f, 0.687616f, -0.665620f},
{ -0.082715f, 0.095901f, -0.991948f},
{ -0.026011f, 0.664194f, 0.747108f},
{ 0.736255f, 0.474393f, 0.482576f},
{ 0.024527f, 0.714696f, -0.699005f},
{ 0.795517f, 0.413276f, -0.443120f},
{ 0.979911f, 0.182776f, 0.079793f},
{ 0.264643f, 0.354349f, -0.896884f},
{ 0.970420f, -0.206418f, 0.125206f},
{ -0.760642f, 0.303755f, -0.573722f},
{ 0.137238f, 0.898225f, -0.417561f},
{ 0.931280f, -0.349244f, 0.103668f},
{ 0.886993f, -0.164592f, 0.431454f},
{ 0.583152f, -0.416111f, 0.697700f},
{ 0.030596f, -0.356429f, 0.933821f},
{ 0.807591f, -0.337982f, 0.483285f},
{ -0.588419f, 0.168494f, -0.790805f},
{ -0.082931f, -0.021634f, -0.996320f},
{ 0.894487f, -0.114200f, -0.432263f},
{ 0.637066f, 0.001694f, 0.770807f},
{ -0.390023f, 0.333595f, 0.858252f},
{ -0.255997f, -0.843998f, 0.471310f},
{ 0.379658f, 0.910804f, -0.162158f},
{ 0.597148f, -0.507731f, -0.620985f},
{ -0.480606f, -0.119186f, 0.868799f},
{ -0.618909f, -0.740787f, -0.261125f},
{ 0.046621f, -0.565877f, -0.823171f},
{ 0.590290f, 0.673044f, -0.445612f},
{ -0.959002f, 0.247002f, -0.138942f},
{ 0.953404f, -0.301158f, -0.018037f},
{ 0.170763f, -0.148764f, -0.974017f},
{ -0.740252f, 0.291673f, -0.605768f},
{ -0.570280f, -0.391511f, -0.722150f},
{ 0.449656f, -0.621216f, 0.641795f},
{ 0.489336f, 0.628984f, -0.604094f},
{ -0.347230f, 0.433065f, 0.831797f},
{ 0.204572f, 0.394648f, -0.895770f},
{ 0.146919f, 0.108417f, 0.983189f},
{ -0.760080f, 0.467004f, 0.451869f},
{ -0.772671f, 0.422432f, -0.473846f},
{ 0.082009f, -0.035003f, 0.996017f},
{ 0.486421f, -0.676155f, 0.553362f},
{ -0.928547f, 0.370152f, -0.028063f},
{ -0.927206f, -0.015197f, 0.374243f},
{ -0.947479f, 0.312986f, -0.065754f},
{ 0.330842f, -0.653103f, 0.681176f},
{ -0.866579f, -0.246120f, 0.434127f},
{ -0.834262f, -0.191779f, -0.516941f},
{ -0.768947f, -0.399603f, -0.499037f},
{ -0.349333f, 0.918478f, -0.185375f},
{ 0.276623f, -0.947307f, -0.161524f},
{ 0.941492f, 0.272257f, 0.198670f},
{ -0.566932f, -0.676126f, -0.470576f},
{ 0.172058f, -0.834086f, 0.524115f},
{ 0.773707f, 0.053995f, 0.631239f},
{ 0.037158f, 0.998335f, -0.044129f},
{ -0.528521f, -0.050028f, 0.847445f},
{ -0.943644f, -0.319914f, -0.084803f},
{ 0.569626f, -0.809907f, -0.139919f},
{ 0.459832f, -0.623909f, 0.631896f},
{ -0.486855f, -0.812672f, -0.320213f},
{ -0.643965f, -0.624351f, 0.442147f},
{ 0.639282f, 0.190377f, 0.745033f},
{ -0.779990f, 0.355705f, 0.514869f},
{ 0.535126f, 0.040596f, 0.843796f},
{ -0.760401f, 0.062811f, 0.646410f},
{ 0.751596f, -0.610325f, -0.250212f},
{ 0.914079f, -0.175959f, -0.365373f},
{ -0.819757f, -0.045722f, -0.570883f},
{ -0.700745f, -0.440209f, -0.561403f},
{ 0.782411f, 0.173487f, -0.598110f},
{ -0.539112f, 0.173942f, -0.824077f},
{ -0.956836f, 0.161404f, 0.241688f},
{ 0.819908f, 0.159488f, 0.549831f},
{ 0.976786f, 0.030928f, -0.211972f},
{ 0.977846f, 0.029730f, -0.207206f},
{ 0.986959f, 0.017882f, -0.159975f},
{ 0.987999f, 0.016287f, -0.153602f}};

static int[] FaceArray = new int[]{
4, 5, 7,
7, 5, 6,
11, 12, 10,
10, 12, 13,
8, 15, 11,
11, 15, 12,
14, 96, 9,
9, 97, 98,
13, 14, 10,
10, 14, 9,
99, 1, 100,
101, 1, 5,
1, 2, 5,
5, 2, 6,
102, 103, 104,
105, 106, 107,
108, 109, 2,
2, 110, 6,
13, 12, 111,
112, 12, 3,
13, 113, 14,
14, 114, 115,
14, 116, 117,
118, 119, 120,
12, 15, 3,
3, 15, 0,
36, 31, 37,
37, 31, 35,
27, 28, 32,
32, 28, 33,
25, 24, 21,
21, 24, 22,
37, 34, 36,
36, 34, 30,
21, 121, 17,
17, 122, 42,
31, 36, 123,
124, 36, 30,
42, 125, 20,
20, 126, 29,
43, 19, 127,
128, 19, 16,
129, 16, 130,
131, 16, 29,
29, 16, 28,
28, 16, 33,
26, 25, 17,
17, 25, 21,
44, 47, 45,
45, 47, 46,
132, 133, 134,
135, 136, 41,
137, 35, 41,
41, 35, 40,
138, 38, 31,
31, 38, 39,
31, 39, 35,
35, 39, 40,
39, 38, 45,
45, 38, 139,
140, 141, 142,
143, 144, 41,
40, 39, 46,
46, 39, 45,
35, 145, 37,
37, 146, 34,
22, 18, 147,
148, 18, 43,
149, 41, 46,
46, 41, 40,
16, 19, 33,
33, 19, 32,
27, 20, 28,
28, 20, 29,
25, 49, 24,
24, 49, 50,
24, 23, 22,
22, 23, 18,
48, 23, 50,
50, 23, 24,
51, 49, 26,
26, 49, 25,
150, 151, 152,
153, 154, 155,
52, 54, 53,
54, 55, 53,
156, 157, 56,
158, 57, 56,
58, 60, 59,
60, 61, 59,
54, 52, 62,
52, 63, 62,
60, 159, 160,
161, 162, 163,
53, 164, 52,
165, 63, 52,
166, 167, 168,
169, 64, 170,
171, 172, 173,
174, 65, 175,
176, 177, 65,
178, 64, 65,
64, 56, 65,
56, 57, 65,
179, 180, 58,
181, 60, 58,
66, 68, 67,
68, 69, 67,
182, 183, 184,
185, 71, 186,
187, 71, 55,
71, 72, 55,
188, 53, 70,
53, 73, 70,
53, 55, 73,
55, 72, 73,
73, 68, 70,
68, 189, 70,
190, 191, 192,
193, 71, 194,
72, 69, 73,
69, 68, 73,
55, 54, 195,
54, 62, 196,
61, 197, 198,
199, 200, 201,
202, 69, 71,
69, 72, 71,
65, 57, 203,
57, 204, 205,
206, 56, 207,
56, 64, 208,
58, 59, 74,
59, 75, 74,
59, 61, 209,
61, 210, 211,
212, 75, 213,
75, 59, 214,
215, 216, 74,
217, 58, 74,
218, 219, 220,
221, 222, 223,
80, 83, 81,
83, 82, 81,
87, 86, 88,
86, 89, 88,
84, 87, 91,
87, 88, 91,
90, 85, 224,
85, 225, 226,
89, 86, 90,
86, 85, 90,
227, 228, 77,
229, 81, 77,
77, 81, 78,
81, 82, 78,
230, 231, 232,
233, 234, 235,
236, 78, 237,
78, 82, 238,
89, 239, 88,
240, 79, 88,
89, 90, 241,
90, 242, 243,
90, 244, 245,
246, 247, 248,
88, 79, 91,
79, 76, 91,
92, 93, 94,
94, 93, 95, };

static int[] FaceArrayB = new int[]{};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 249  Texture Co-ords: 156  Normals: 96  Texture: joannablock1.mtl Faces: 170 Smooth Groups: 4 sucess: 80 Doubles: 90 Redos needed: 153 Correct: 117