package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phawalke {

static String TextureName = "walk";

static int Vertices = 344;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 31;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.253206f, 7.494883f, 1.381043f,
 0.868666f, 9.137631f, 1.745701f,
 0.764446f, 8.853018f, 0.352252f,
 0.820442f, 7.965414f, 0.001979f,
 0.491709f, 9.204021f, 1.786660f,
 0.408353f, 9.256907f, 0.330062f,
 0.380701f, 7.809922f, -0.126109f,
 0.422931f, 7.474579f, 1.363631f,
 0.009626f, 7.402744f, 1.628182f,
 -0.042195f, 9.344235f, 1.869652f,
 -0.006456f, 9.408814f, 0.356473f,
 0.045245f, 7.821289f, -0.219764f,
 -0.030501f, 9.617232f, 1.132881f,
 0.479363f, 9.529806f, 1.122908f,
 0.872474f, 9.182529f, 1.547992f,
 0.921707f, 7.543962f, 1.120974f,
 0.416466f, 7.546628f, 1.043891f,
 0.021075f, 7.537286f, 1.034154f,
 0.428931f, 7.196508f, 1.500113f,
 0.765435f, 7.198012f, 1.536935f,
 0.425774f, 6.863656f, 1.434578f,
 0.774203f, 6.857285f, 1.507801f,
 1.217694f, 7.435491f, -0.045489f,
 0.771669f, 7.261428f, 0.986142f,
 0.029473f, 7.281669f, 0.938404f,
 0.053380f, 7.430895f, -0.175550f,
 0.700363f, 4.362339f, 0.108029f,
 0.684600f, 4.362339f, 0.804733f,
 0.033961f, 4.362347f, 0.976895f,
 0.033961f, 4.362347f, -0.297162f,
 0.972507f, 6.380497f, 1.131151f,
 0.996786f, 6.401768f, -0.021791f,
 0.033081f, 6.573406f, -0.172517f,
 0.035139f, 6.470579f, 1.371735f,
 1.392765f, 0.101646f, -1.401522f,
 2.121247f, 0.071178f, 0.776403f,
 0.664275f, -0.010137f, 1.763804f,
 -0.495943f, 0.078218f, -1.436058f,
 1.443438f, 6.816777f, 0.110672f,
 1.420933f, 6.725353f, 0.819342f,
 0.930971f, 6.376606f, 0.872879f,
 0.953626f, 6.485823f, 0.054729f,
 1.743457f, 4.969937f, 0.025244f,
 1.769310f, 5.097392f, 0.361934f,
 1.475208f, 5.140981f, 0.429227f,
 1.445154f, 4.996101f, 0.039484f,
 1.599588f, 3.033525f, 0.472244f,
 1.653595f, 3.294020f, 1.172719f,
 1.079087f, 3.437530f, 1.264607f,
 1.018356f, 3.148551f, 0.477714f,
 0.329221f, 2.210176f, 1.782985f,
 1.414541f, 2.244358f, 1.435298f,
 1.117842f, 2.233494f, -0.031194f,
 -0.097377f, 2.202805f, -0.129489f,
 -0.931279f, 9.139910f, 1.503571f,
 -0.882047f, 7.501343f, 1.076553f,
 -0.745860f, 7.928405f, -0.036594f,
 -0.749123f, 8.817254f, 0.314978f,
 -0.411830f, 9.237527f, 0.309864f,
 -0.534560f, 9.505849f, 1.097938f,
 -0.293501f, 7.793992f, -0.142713f,
 -0.374315f, 7.527944f, 1.024417f,
 -0.393093f, 7.455297f, 1.343536f,
 -1.223252f, 7.436368f, 1.320056f,
 -0.935087f, 9.095012f, 1.701280f,
 -0.564156f, 9.179072f, 1.760658f,
 -0.730272f, 7.162672f, 1.500100f,
 -0.392669f, 7.177095f, 1.479880f,
 -0.370584f, 6.844840f, 1.414967f,
 -0.721504f, 6.821943f, 1.470967f,
 -0.712388f, 7.226362f, 0.949595f,
 -1.114839f, 7.380377f, -0.102932f,
 -1.929510f, 3.170420f, 1.414147f,
 -2.422595f, 3.558445f, 1.823714f,
 -2.046971f, 3.790195f, 2.229048f,
 -1.492866f, 3.357855f, 1.768127f,
 -0.902728f, 6.379244f, 1.133546f,
 -0.930008f, 6.400481f, -0.019331f,
 -0.616678f, 4.362339f, 0.804733f,
 -0.632440f, 4.362339f, 0.108029f,
 -0.806332f, 2.173198f, 1.874940f,
 -1.146444f, 2.152895f, 0.492285f,
 -1.526286f, 6.926213f, 0.552817f,
 -1.032236f, 6.690326f, 0.093089f,
 -1.316802f, 6.697821f, 1.070994f,
 -0.743233f, 6.429143f, 0.541237f,
 -1.903802f, 5.129740f, 0.735231f,
 -1.666963f, 4.941039f, 0.538832f,
 -1.726051f, 5.223484f, 0.964448f,
 -1.451693f, 5.007646f, 0.736556f,
 -1.100807f, -0.055740f, 1.922666f,
 -1.909994f, -0.025203f, -0.190399f,
 1.227346f, 3.975501f, 0.946798f,
 1.644837f, 3.913624f, 0.851273f,
 1.608137f, 3.732695f, 0.373326f,
 1.184683f, 3.769837f, 0.393539f,
 -1.927324f, 4.228920f, 1.775615f,
 -1.537861f, 3.922529f, 1.452110f,
 -1.843446f, 3.827977f, 1.171433f,
 -2.179650f, 4.095847f, 1.450230f,
 0.470290f, 1.442540f, -3.358298f,
 0.560618f, 0.776433f, -2.971220f,
 2.565403f, 7.237835f, 4.799879f,
 2.405500f, 5.386426f, 5.934092f,
 2.075211f, 5.679106f, 3.557711f,
 2.165539f, 5.012998f, 3.944789f,
 0.764446f, 8.853018f, 0.352252f,
 0.764446f, 8.853018f, 0.352252f,
 0.872474f, 9.182529f, 1.547992f,
 0.820442f, 7.965414f, 0.001979f,
 0.380701f, 7.809922f, -0.126109f,
 0.764446f, 8.853018f, 0.352252f,
 0.764446f, 8.853018f, 0.352252f,
 0.380701f, 7.809922f, -0.126109f,
 0.380701f, 7.809922f, -0.126109f,
 -0.042195f, 9.344235f, 1.869652f,
 -0.042195f, 9.344235f, 1.869652f,
 0.491709f, 9.204021f, 1.786660f,
 0.491709f, 9.204021f, 1.786660f,
 0.872474f, 9.182529f, 1.547992f,
 0.872474f, 9.182529f, 1.547992f,
 0.491709f, 9.204021f, 1.786660f,
 0.868666f, 9.137631f, 1.745701f,
 1.253206f, 7.494883f, 1.381043f,
 0.868666f, 9.137631f, 1.745701f,
 0.868666f, 9.137631f, 1.745701f,
 0.416466f, 7.546628f, 1.043891f,
 0.422931f, 7.474579f, 1.363631f,
 0.422931f, 7.474579f, 1.363631f,
 0.009626f, 7.402744f, 1.628182f,
 0.422931f, 7.474579f, 1.363631f,
 0.428931f, 7.196508f, 1.500113f,
 0.428931f, 7.196508f, 1.500113f,
 0.425774f, 6.863656f, 1.434578f,
 0.425774f, 6.863656f, 1.434578f,
 0.425774f, 6.863656f, 1.434578f,
 0.774203f, 6.857285f, 1.507801f,
 1.253206f, 7.494883f, 1.381043f,
 0.765435f, 7.198012f, 1.536935f,
 0.765435f, 7.198012f, 1.536935f,
 0.774203f, 6.857285f, 1.507801f,
 0.416466f, 7.546628f, 1.043891f,
 0.771669f, 7.261428f, 0.986142f,
 0.380701f, 7.809922f, -0.126109f,
 0.380701f, 7.809922f, -0.126109f,
 0.771669f, 7.261428f, 0.986142f,
 1.217694f, 7.435491f, -0.045489f,
 0.029473f, 7.281669f, 0.938404f,
 0.416466f, 7.546628f, 1.043891f,
 0.416466f, 7.546628f, 1.043891f,
 0.029473f, 7.281669f, 0.938404f,
 0.771669f, 7.261428f, 0.986142f,
 0.045245f, 7.821289f, -0.219764f,
 0.380701f, 7.809922f, -0.126109f,
 0.053380f, 7.430895f, -0.175550f,
 0.053380f, 7.430895f, -0.175550f,
 0.380701f, 7.809922f, -0.126109f,
 1.217694f, 7.435491f, -0.045489f,
 0.972507f, 6.380497f, 1.131151f,
 0.684600f, 4.362339f, 0.804733f,
 0.700363f, 4.362339f, 0.108029f,
 0.684600f, 4.362339f, 0.804733f,
 0.684600f, 4.362339f, 0.804733f,
 1.414541f, 2.244358f, 1.435298f,
 0.033961f, 4.362347f, 0.976895f,
 0.684600f, 4.362339f, 0.804733f,
 0.684600f, 4.362339f, 0.804733f,
 0.033961f, 4.362347f, -0.297162f,
 0.700363f, 4.362339f, 0.108029f,
 0.700363f, 4.362339f, 0.108029f,
 0.771669f, 7.261428f, 0.986142f,
 1.217694f, 7.435491f, -0.045489f,
 1.217694f, 7.435491f, -0.045489f,
 0.972507f, 6.380497f, 1.131151f,
 0.771669f, 7.261428f, 0.986142f,
 0.771669f, 7.261428f, 0.986142f,
 0.972507f, 6.380497f, 1.131151f,
 0.996786f, 6.401768f, -0.021791f,
 0.930971f, 6.376606f, 0.872879f,
 0.930971f, 6.376606f, 0.872879f,
 0.996786f, 6.401768f, -0.021791f,
 1.217694f, 7.435491f, -0.045489f,
 0.996786f, 6.401768f, -0.021791f,
 0.996786f, 6.401768f, -0.021791f,
 0.930971f, 6.376606f, 0.872879f,
 1.475208f, 5.140981f, 0.429227f,
 1.475208f, 5.140981f, 0.429227f,
 1.475208f, 5.140981f, 0.429227f,
 1.227346f, 3.975501f, 0.946798f,
 1.227346f, 3.975501f, 0.946798f,
 1.414541f, 2.244358f, 1.435298f,
 2.121247f, 0.071178f, 0.776403f,
 2.121247f, 0.071178f, 0.776403f,
 -0.931279f, 9.139910f, 1.503571f,
 -0.749123f, 8.817254f, 0.314978f,
 -0.749123f, 8.817254f, 0.314978f,
 -0.745860f, 7.928405f, -0.036594f,
 -0.749123f, 8.817254f, 0.314978f,
 -0.293501f, 7.793992f, -0.142713f,
 -0.293501f, 7.793992f, -0.142713f,
 -0.749123f, 8.817254f, 0.314978f,
 -0.293501f, 7.793992f, -0.142713f,
 -0.564156f, 9.179072f, 1.760658f,
 -0.042195f, 9.344235f, 1.869652f,
 -0.042195f, 9.344235f, 1.869652f,
 -0.935087f, 9.095012f, 1.701280f,
 -0.564156f, 9.179072f, 1.760658f,
 -0.931279f, 9.139910f, 1.503571f,
 -0.931279f, 9.139910f, 1.503571f,
 -0.564156f, 9.179072f, 1.760658f,
 -0.935087f, 9.095012f, 1.701280f,
 -0.935087f, 9.095012f, 1.701280f,
 -1.223252f, 7.436368f, 1.320056f,
 0.009626f, 7.402744f, 1.628182f,
 -0.393093f, 7.455297f, 1.343536f,
 -0.393093f, 7.455297f, 1.343536f,
 -0.374315f, 7.527944f, 1.024417f,
 -0.393093f, 7.455297f, 1.343536f,
 -0.392669f, 7.177095f, 1.479880f,
 -0.392669f, 7.177095f, 1.479880f,
 -0.370584f, 6.844840f, 1.414967f,
 -0.370584f, 6.844840f, 1.414967f,
 -0.370584f, 6.844840f, 1.414967f,
 -0.721504f, 6.821943f, 1.470967f,
 -0.721504f, 6.821943f, 1.470967f,
 -0.730272f, 7.162672f, 1.500100f,
 -0.730272f, 7.162672f, 1.500100f,
 -1.223252f, 7.436368f, 1.320056f,
 -1.114839f, 7.380377f, -0.102932f,
 -0.712388f, 7.226362f, 0.949595f,
 -0.293501f, 7.793992f, -0.142713f,
 -0.293501f, 7.793992f, -0.142713f,
 -0.712388f, 7.226362f, 0.949595f,
 -0.374315f, 7.527944f, 1.024417f,
 -0.712388f, 7.226362f, 0.949595f,
 0.029473f, 7.281669f, 0.938404f,
 -0.374315f, 7.527944f, 1.024417f,
 -0.374315f, 7.527944f, 1.024417f,
 0.029473f, 7.281669f, 0.938404f,
 0.045245f, 7.821289f, -0.219764f,
 0.053380f, 7.430895f, -0.175550f,
 -0.293501f, 7.793992f, -0.142713f,
 -0.293501f, 7.793992f, -0.142713f,
 0.053380f, 7.430895f, -0.175550f,
 -1.114839f, 7.380377f, -0.102932f,
 -0.902728f, 6.379244f, 1.133546f,
 -0.616678f, 4.362339f, 0.804733f,
 -0.632440f, 4.362339f, 0.108029f,
 -0.616678f, 4.362339f, 0.804733f,
 -0.616678f, 4.362339f, 0.804733f,
 -0.806332f, 2.173198f, 1.874940f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.362339f, 0.804733f,
 -0.806332f, 2.173198f, 1.874940f,
 0.033961f, 4.362347f, 0.976895f,
 0.033961f, 4.362347f, 0.976895f,
 -0.806332f, 2.173198f, 1.874940f,
 0.329221f, 2.210176f, 1.782985f,
 0.033961f, 4.362347f, -0.297162f,
 -0.097377f, 2.202805f, -0.129489f,
 -0.632440f, 4.362339f, 0.108029f,
 -0.632440f, 4.362339f, 0.108029f,
 -0.097377f, 2.202805f, -0.129489f,
 -1.146444f, 2.152895f, 0.492285f,
 -0.712388f, 7.226362f, 0.949595f,
 -1.114839f, 7.380377f, -0.102932f,
 -1.526286f, 6.926213f, 0.552817f,
 -1.114839f, 7.380377f, -0.102932f,
 -1.032236f, 6.690326f, 0.093089f,
 -1.526286f, 6.926213f, 0.552817f,
 -1.526286f, 6.926213f, 0.552817f,
 -1.316802f, 6.697821f, 1.070994f,
 -0.712388f, 7.226362f, 0.949595f,
 -0.712388f, 7.226362f, 0.949595f,
 -1.316802f, 6.697821f, 1.070994f,
 -0.902728f, 6.379244f, 1.133546f,
 -1.316802f, 6.697821f, 1.070994f,
 -0.743233f, 6.429143f, 0.541237f,
 -0.902728f, 6.379244f, 1.133546f,
 -0.902728f, 6.379244f, 1.133546f,
 -0.743233f, 6.429143f, 0.541237f,
 -0.930008f, 6.400481f, -0.019331f,
 -0.743233f, 6.429143f, 0.541237f,
 -1.032236f, 6.690326f, 0.093089f,
 -0.930008f, 6.400481f, -0.019331f,
 -0.930008f, 6.400481f, -0.019331f,
 -1.032236f, 6.690326f, 0.093089f,
 -1.114839f, 7.380377f, -0.102932f,
 -1.526286f, 6.926213f, 0.552817f,
 -1.903802f, 5.129740f, 0.735231f,
 -1.316802f, 6.697821f, 1.070994f,
 -1.316802f, 6.697821f, 1.070994f,
 -1.903802f, 5.129740f, 0.735231f,
 -1.726051f, 5.223484f, 0.964448f,
 -1.927324f, 4.228920f, 1.775615f,
 -1.726051f, 5.223484f, 0.964448f,
 -2.179650f, 4.095847f, 1.450230f,
 -2.179650f, 4.095847f, 1.450230f,
 -1.726051f, 5.223484f, 0.964448f,
 -1.903802f, 5.129740f, 0.735231f,
 -1.909994f, -0.025203f, -0.190399f,
 -1.100807f, -0.055740f, 1.922666f,
 -1.146444f, 2.152895f, 0.492285f,
 -1.146444f, 2.152895f, 0.492285f,
 -1.100807f, -0.055740f, 1.922666f,
 -0.806332f, 2.173198f, 1.874940f,
 1.608137f, 3.732695f, 0.373326f,
 1.653595f, 3.294020f, 1.172719f,
 1.599588f, 3.033525f, 0.472244f,
 1.184683f, 3.769837f, 0.393539f,
 1.608137f, 3.732695f, 0.373326f,
 1.018356f, 3.148551f, 0.477714f,
 1.018356f, 3.148551f, 0.477714f,
 1.608137f, 3.732695f, 0.373326f,
 1.599588f, 3.033525f, 0.472244f,
 1.227346f, 3.975501f, 0.946798f,
 1.184683f, 3.769837f, 0.393539f,
 1.079087f, 3.437530f, 1.264607f,
 1.079087f, 3.437530f, 1.264607f,
 1.184683f, 3.769837f, 0.393539f,
 1.018356f, 3.148551f, 0.477714f,
 -1.537861f, 3.922529f, 1.452110f,
 -2.046971f, 3.790195f, 2.229048f,
 -1.492866f, 3.357855f, 1.768127f,
 -1.537861f, 3.922529f, 1.452110f,
 -1.492866f, 3.357855f, 1.768127f,
 -1.843446f, 3.827977f, 1.171433f,
 -1.843446f, 3.827977f, 1.171433f,
 -1.492866f, 3.357855f, 1.768127f,
 -1.929510f, 3.170420f, 1.414147f,
 -2.179650f, 4.095847f, 1.450230f,
 -1.843446f, 3.827977f, 1.171433f,
 -2.422595f, 3.558445f, 1.823714f,
 -2.422595f, 3.558445f, 1.823714f,
 -1.843446f, 3.827977f, 1.171433f,
 -1.929510f, 3.170420f, 1.414147f,
 -2.179650f, 4.095847f, 1.450230f,
 -2.422595f, 3.558445f, 1.823714f,
 -1.927324f, 4.228920f, 1.775615f,
 0.470290f, 1.442540f, -3.358298f,
 0.560618f, 0.776433f, -2.971220f,
 2.075211f, 5.679106f, 3.557711f,
 2.075211f, 5.679106f, 3.557711f,
 0.560618f, 0.776433f, -2.971220f,
 2.165539f, 5.012998f, 3.944789f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.008494f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.403165f,
 0.049042f, 0.357626f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.230576f, 0.348630f,
 0.340575f, 0.584800f,
 0.340575f, 0.584800f,
 0.230576f, 0.348630f,
 0.340574f, 0.348630f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.176724f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.953532f, 0.296841f, -0.051605f},
{ 0.844121f, -0.204273f, -0.495714f},
{ 0.908636f, 0.225143f, -0.351697f},
{ 0.873743f, -0.190747f, -0.447424f},
{ 0.369051f, 0.560982f, -0.741013f},
{ 0.531414f, 0.844633f, -0.064765f},
{ 0.498319f, 0.325024f, -0.803765f},
{ 0.546101f, -0.790258f, -0.277968f},
{ 0.500784f, -0.173191f, 0.848069f},
{ 0.394999f, -0.119301f, 0.910903f},
{ 0.172130f, -0.298383f, 0.938797f},
{ 0.211909f, 0.123271f, 0.969484f},
{ -0.029563f, 0.239769f, 0.970380f},
{ -0.012179f, -0.426956f, 0.904190f},
{ 0.002312f, 0.673012f, -0.739628f},
{ -0.024799f, 0.998491f, 0.048998f},
{ 0.018690f, 0.224487f, -0.974298f},
{ 0.427706f, 0.160600f, 0.889536f},
{ -0.778730f, 0.086732f, 0.621335f},
{ 0.414286f, -0.753873f, -0.509944f},
{ -0.183220f, -0.721578f, -0.667650f},
{ 0.016942f, -0.969956f, 0.242691f},
{ 0.440907f, 0.600256f, 0.667303f},
{ 0.576643f, 0.642998f, -0.504021f},
{ -0.031186f, 0.339083f, 0.940239f},
{ 0.034348f, -0.012951f, -0.999326f},
{ 0.559364f, -0.740823f, -0.371877f},
{ 0.587631f, -0.511926f, 0.626595f},
{ -0.796841f, -0.536034f, -0.278768f},
{ -0.624051f, -0.240285f, 0.743521f},
{ -0.001419f, -0.033028f, 0.999453f},
{ 0.756698f, -0.116980f, 0.643213f},
{ 0.651165f, -0.072068f, -0.755507f},
{ 0.004946f, 0.026030f, -0.999649f},
{ 0.852319f, 0.133259f, 0.505761f},
{ 0.807909f, -0.032098f, -0.588432f},
{ 0.009540f, -0.075208f, -0.997122f},
{ 0.014484f, 0.133654f, 0.990922f},
{ 0.707433f, 0.389161f, -0.589993f},
{ 0.828537f, 0.280521f, 0.484597f},
{ 0.178088f, 0.190436f, 0.965411f},
{ -0.248476f, 0.341260f, -0.906532f},
{ 0.783060f, 0.213002f, 0.584336f},
{ 0.845797f, 0.184919f, -0.500431f},
{ -0.296298f, -0.354998f, 0.886670f},
{ -0.525793f, -0.225128f, -0.820280f},
{ 0.930021f, 0.089273f, 0.356500f},
{ 0.722626f, -0.055902f, -0.688975f},
{ -0.798707f, -0.127676f, 0.588018f},
{ -0.784631f, -0.098824f, -0.612036f},
{ 0.849344f, 0.172931f, 0.498709f},
{ 0.741934f, -0.189560f, -0.643118f},
{ -0.658596f, 0.458111f, 0.596981f},
{ -0.846286f, 0.078491f, -0.526916f},
{ 0.322203f, -0.020831f, 0.946441f},
{ 0.960832f, 0.217400f, 0.171873f},
{ 0.517047f, 0.500205f, -0.694591f},
{ -0.308107f, 0.539632f, -0.783497f},
{ -0.962785f, 0.251562f, -0.098798f},
{ -0.899847f, 0.182412f, -0.396235f},
{ -0.808128f, -0.243313f, -0.536404f},
{ -0.840695f, -0.231257f, -0.489645f},
{ -0.566859f, 0.818683f, -0.091813f},
{ -0.358217f, 0.543798f, -0.758923f},
{ -0.472958f, 0.302073f, -0.827685f},
{ -0.493854f, -0.814829f, -0.303581f},
{ -0.264929f, 0.112003f, 0.957741f},
{ -0.433262f, -0.138871f, 0.890505f},
{ -0.203831f, -0.307267f, 0.929538f},
{ -0.533164f, -0.197622f, 0.822607f},
{ -0.478053f, 0.139199f, 0.867231f},
{ -0.352650f, -0.771994f, -0.528831f},
{ 0.742257f, 0.122669f, 0.658792f},
{ 0.249699f, -0.711349f, -0.656988f},
{ -0.571395f, 0.649734f, -0.501352f},
{ -0.392211f, 0.665256f, 0.635299f},
{ -0.202504f, -0.866441f, -0.456370f},
{ 0.760791f, -0.474539f, 0.442730f},
{ -0.874358f, -0.445338f, 0.192801f},
{ -0.032563f, -0.002275f, 0.999467f},
{ -0.720506f, -0.155382f, 0.675817f},
{ -0.687804f, -0.093625f, -0.719833f},
{ -0.825595f, -0.030541f, -0.563436f},
{ -0.849391f, 0.120224f, 0.513888f},
{ -0.947408f, 0.254551f, -0.193962f},
{ -0.575550f, 0.201724f, 0.792496f},
{ -0.899297f, 0.408389f, -0.156469f},
{ -0.479115f, -0.231160f, -0.846767f},
{ -0.300682f, 0.127648f, 0.945144f},
{ 0.915661f, -0.397227f, 0.061450f},
{ -0.147716f, -0.330348f, -0.932229f},
{ -0.918329f, 0.111441f, -0.379805f},
{ 0.119761f, 0.190034f, 0.974446f},
{ 0.961088f, -0.210310f, 0.179105f},
{ -0.959530f, 0.159926f, -0.231791f},
{ -0.138826f, -0.409774f, -0.901561f},
{ 0.117239f, 0.650405f, 0.750486f},
{ 0.985626f, 0.078027f, 0.149844f},
{ -0.602715f, 0.138783f, 0.785795f},
{ -0.888987f, 0.416546f, -0.190242f},
{ -0.969435f, 0.010970f, 0.245104f},
{ -0.979118f, 0.042397f, 0.198821f},
{ -0.984372f, 0.132209f, 0.116329f},
{ -0.985602f, 0.141667f, 0.092295f},
{ -0.974042f, -0.000543f, 0.226368f},
{ -0.974042f, -0.000543f, 0.226367f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 177, 178,
179, 180, 41,
181, 38, 182,
183, 38, 41,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
184, 41, 185,
186, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
187, 45, 188,
189, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
190, 191, 52,
52, 192, 34,
52, 34, 53,
53, 34, 37,
54, 57, 55,
55, 57, 56,
193, 59, 194,
195, 59, 58,
196, 197, 198,
199, 200, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 201,
202, 203, 59,
59, 204, 12,
205, 206, 207,
208, 209, 59,
54, 55, 210,
211, 55, 212,
66, 69, 67,
67, 69, 68,
213, 214, 17,
17, 215, 216,
63, 66, 62,
62, 66, 67,
217, 218, 61,
61, 219, 220,
61, 221, 55,
55, 222, 223,
224, 225, 55,
55, 226, 227,
228, 229, 230,
231, 232, 233,
234, 235, 236,
237, 238, 17,
239, 240, 241,
242, 243, 244,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
25, 32, 71,
71, 32, 77,
79, 78, 77,
77, 78, 245,
32, 29, 77,
77, 29, 79,
246, 28, 76,
76, 28, 33,
247, 81, 248,
249, 81, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
37, 91, 53,
53, 91, 81,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 344  Texture Co-ords: 191  Normals: 106  Texture: walk Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 83