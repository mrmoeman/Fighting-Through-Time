package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class luchblocke {

static String TextureName = "block";

static int Vertices = 350;

static int VertTexts = 202;

static int Normals = 304;

static int Faces = 196;

static int FacesB = 33;

static int SmoothGroups = 94;

static float VertArray[] = new float[]{
 0.421210f, 8.668141f, 2.024452f,
 2.141047f, 8.710088f, 1.399351f,
 -0.270322f, 10.524100f, 1.804464f,
 2.233420f, 10.456258f, 2.031444f,
 0.123705f, 11.393829f, -1.624633f,
 2.747147f, 10.846558f, -1.379057f,
 -0.273217f, 9.155926f, -2.056521f,
 2.242118f, 9.076324f, -2.149087f,
 -0.265905f, 6.329001f, -2.020241f,
 1.326598f, 6.360595f, -2.033368f,
 1.018373f, 6.073498f, 0.455797f,
 0.154433f, 6.061129f, 0.450045f,
 0.100477f, 10.936386f, 1.199633f,
 1.110222f, 10.986775f, 0.928382f,
 1.137401f, 11.561728f, -0.722420f,
 0.138107f, 11.732420f, -1.085937f,
 0.146918f, 12.002365f, 1.858386f,
 1.567112f, 12.131649f, 1.309506f,
 1.593295f, 12.685531f, -0.280796f,
 0.192457f, 12.965691f, -0.907513f,
 0.222466f, 13.718767f, 2.194721f,
 1.168468f, 13.547783f, 1.903424f,
 1.198058f, 14.173736f, 0.106189f,
 0.260104f, 14.514972f, -0.091341f,
 0.903203f, 3.530662f, -1.301242f,
 1.929065f, 3.494939f, -1.243601f,
 1.848483f, 3.092690f, -0.058745f,
 0.822621f, 3.128414f, -0.116386f,
 0.733040f, -0.025459f, -3.838224f,
 2.545638f, -0.025459f, -3.838224f,
 2.545638f, 1.291012f, -1.690292f,
 0.733078f, 1.291012f, -1.690292f,
 0.778096f, -0.015118f, 0.693824f,
 2.416366f, -0.015118f, 0.693824f,
 2.244411f, 1.218862f, -0.648314f,
 0.998903f, 1.218862f, -0.648314f,
 3.623006f, 8.771378f, 1.997810f,
 2.496895f, 8.742189f, 1.465965f,
 3.774411f, 10.128880f, 1.458156f,
 2.512616f, 10.158405f, 1.434439f,
 2.196373f, 8.739099f, 3.499901f,
 2.431652f, 9.183633f, 3.070120f,
 2.378310f, 9.168679f, 4.043824f,
 2.551175f, 9.495288f, 3.728053f,
 0.090143f, 9.136724f, 3.510208f,
 0.601250f, 10.102400f, 2.576576f,
 0.371246f, 9.800456f, 4.350608f,
 0.793560f, 10.598369f, 3.579173f,
 -1.138928f, 9.746567f, 3.468141f,
 -0.627822f, 10.712244f, 2.534509f,
 -0.857824f, 10.410297f, 4.308540f,
 -0.435510f, 11.208210f, 3.537105f,
 0.074254f, -0.012360f, -4.896948f,
 0.078843f, 7.464554f, -3.184513f,
 4.612802f, 7.344452f, -2.756007f,
 6.565892f, 0.265169f, -3.598424f,
 -2.126441f, 8.723095f, 1.926985f,
 -2.500471f, 10.623912f, 1.228818f,
 -0.669297f, 13.629054f, 1.901472f,
 -0.639742f, 14.255010f, 0.104237f,
 -2.216761f, 10.508948f, -1.678791f,
 -2.677609f, 9.074341f, -1.312173f,
 -0.620411f, -0.015118f, 5.053026f,
 -2.258681f, -0.015118f, 5.053026f,
 -2.086726f, 1.218862f, 3.710888f,
 -0.841217f, 1.218862f, 3.710888f,
 -1.317397f, 5.455652f, -1.551384f,
 -1.208415f, 6.934706f, 0.378570f,
 -0.900302f, 11.075687f, 0.926248f,
 -0.873122f, 11.650640f, -0.724555f,
 -1.255152f, 12.256459f, 1.306510f,
 -1.228969f, 12.810341f, -0.283792f,
 -2.026015f, 4.239952f, 0.977174f,
 -1.004610f, 4.293810f, 1.081209f,
 -2.164729f, 4.529176f, 2.189316f,
 -1.143324f, 4.583034f, 2.293352f,
 -2.387953f, -0.025459f, 0.520978f,
 -0.575354f, -0.025459f, 0.520978f,
 -2.387953f, 1.291012f, 2.668910f,
 -0.575393f, 1.291012f, 2.668911f,
 -3.666185f, 8.931790f, -0.712824f,
 -1.895867f, 8.687007f, 0.346944f,
 -3.686053f, 10.355017f, -0.350902f,
 -2.118553f, 10.138278f, 0.587454f,
 -3.349910f, 7.652983f, 1.078535f,
 -3.184057f, 8.242525f, 0.828316f,
 -3.757852f, 7.976671f, 1.570777f,
 -3.635996f, 8.409821f, 1.386934f,
 -1.689696f, 7.176361f, 2.347764f,
 -1.329407f, 8.457047f, 1.804198f,
 -2.319995f, 7.676482f, 3.108313f,
 -2.022297f, 8.734679f, 2.659179f,
 -0.267041f, 8.525974f, 2.670757f,
 -0.627331f, 7.245287f, 3.214323f,
 -1.257630f, 7.745408f, 3.974871f,
 -0.959932f, 8.803605f, 3.525737f,
 -4.295158f, 7.059286f, -3.219515f,
 -6.074132f, 0.249999f, -2.614724f,
 5.602639f, 3.291321f, -3.940664f,
 0.066234f, 4.538416f, -3.446765f,
 -5.267658f, 3.251162f, -3.121145f,
 3.602179f, 8.595522f, -2.314810f,
 0.078843f, 9.586023f, -2.586524f,
 -3.508228f, 8.315418f, -2.917646f,
 2.141047f, 8.710088f, 1.399351f,
 1.018373f, 6.073498f, 0.455797f,
 1.018373f, 6.073498f, 0.455797f,
 0.154433f, 6.061129f, 0.450045f,
 2.747147f, 10.846558f, -1.379057f,
 2.747147f, 10.846558f, -1.379057f,
 1.137401f, 11.561728f, -0.722420f,
 2.747147f, 10.846558f, -1.379057f,
 0.123705f, 11.393829f, -1.624633f,
 1.137401f, 11.561728f, -0.722420f,
 1.137401f, 11.561728f, -0.722420f,
 0.123705f, 11.393829f, -1.624633f,
 0.138107f, 11.732420f, -1.085937f,
 0.100477f, 10.936386f, 1.199633f,
 1.110222f, 10.986775f, 0.928382f,
 1.110222f, 10.986775f, 0.928382f,
 1.137401f, 11.561728f, -0.722420f,
 1.593295f, 12.685531f, -0.280796f,
 1.110222f, 10.986775f, 0.928382f,
 1.110222f, 10.986775f, 0.928382f,
 1.593295f, 12.685531f, -0.280796f,
 1.567112f, 12.131649f, 1.309506f,
 1.593295f, 12.685531f, -0.280796f,
 1.567112f, 12.131649f, 1.309506f,
 1.567112f, 12.131649f, 1.309506f,
 -0.265905f, 6.329001f, -2.020241f,
 1.326598f, 6.360595f, -2.033368f,
 1.326598f, 6.360595f, -2.033368f,
 1.326598f, 6.360595f, -2.033368f,
 1.018373f, 6.073498f, 0.455797f,
 1.929065f, 3.494939f, -1.243601f,
 1.929065f, 3.494939f, -1.243601f,
 1.018373f, 6.073498f, 0.455797f,
 0.154433f, 6.061129f, 0.450045f,
 0.822621f, 3.128414f, -0.116386f,
 1.018373f, 6.073498f, 0.455797f,
 1.018373f, 6.073498f, 0.455797f,
 0.822621f, 3.128414f, -0.116386f,
 -0.265905f, 6.329001f, -2.020241f,
 1.929065f, 3.494939f, -1.243601f,
 1.929065f, 3.494939f, -1.243601f,
 2.545638f, -0.025459f, -3.838224f,
 0.822621f, 3.128414f, -0.116386f,
 0.733078f, 1.291012f, -1.690292f,
 0.733078f, 1.291012f, -1.690292f,
 2.545638f, -0.025459f, -3.838224f,
 0.733040f, -0.025459f, -3.838224f,
 0.733040f, -0.025459f, -3.838224f,
 2.545638f, -0.025459f, -3.838224f,
 2.416366f, -0.015118f, 0.693824f,
 2.416366f, -0.015118f, 0.693824f,
 2.244411f, 1.218862f, -0.648314f,
 2.545638f, 1.291012f, -1.690292f,
 0.733078f, 1.291012f, -1.690292f,
 0.733078f, 1.291012f, -1.690292f,
 0.778096f, -0.015118f, 0.693824f,
 0.733078f, 1.291012f, -1.690292f,
 0.733078f, 1.291012f, -1.690292f,
 0.778096f, -0.015118f, 0.693824f,
 0.998903f, 1.218862f, -0.648314f,
 2.141047f, 8.710088f, 1.399351f,
 2.242118f, 9.076324f, -2.149087f,
 2.496895f, 8.742189f, 1.465965f,
 2.242118f, 9.076324f, -2.149087f,
 3.623006f, 8.771378f, 1.997810f,
 2.496895f, 8.742189f, 1.465965f,
 2.242118f, 9.076324f, -2.149087f,
 2.747147f, 10.846558f, -1.379057f,
 3.623006f, 8.771378f, 1.997810f,
 3.623006f, 8.771378f, 1.997810f,
 2.747147f, 10.846558f, -1.379057f,
 3.774411f, 10.128880f, 1.458156f,
 2.512616f, 10.158405f, 1.434439f,
 2.747147f, 10.846558f, -1.379057f,
 2.747147f, 10.846558f, -1.379057f,
 2.512616f, 10.158405f, 1.434439f,
 3.774411f, 10.128880f, 1.458156f,
 2.141047f, 8.710088f, 1.399351f,
 2.512616f, 10.158405f, 1.434439f,
 2.512616f, 10.158405f, 1.434439f,
 2.141047f, 8.710088f, 1.399351f,
 2.496895f, 8.742189f, 1.465965f,
 3.623006f, 8.771378f, 1.997810f,
 3.623006f, 8.771378f, 1.997810f,
 2.196373f, 8.739099f, 3.499901f,
 2.196373f, 8.739099f, 3.499901f,
 2.196373f, 8.739099f, 3.499901f,
 0.090143f, 9.136724f, 3.510208f,
 0.601250f, 10.102400f, 2.576576f,
 0.090143f, 9.136724f, 3.510208f,
 0.090143f, 9.136724f, 3.510208f,
 0.371246f, 9.800456f, 4.350608f,
 0.090143f, 9.136724f, 3.510208f,
 0.090143f, 9.136724f, 3.510208f,
 0.793560f, 10.598369f, 3.579173f,
 0.371246f, 9.800456f, 4.350608f,
 0.371246f, 9.800456f, 4.350608f,
 0.793560f, 10.598369f, 3.579173f,
 0.601250f, 10.102400f, 2.576576f,
 0.601250f, 10.102400f, 2.576576f,
 0.123705f, 11.393829f, -1.624633f,
 2.747147f, 10.846558f, -1.379057f,
 2.747147f, 10.846558f, -1.379057f,
 -2.126441f, 8.723095f, 1.926985f,
 -1.208415f, 6.934706f, 0.378570f,
 -1.208415f, 6.934706f, 0.378570f,
 0.154433f, 6.061129f, 0.450045f,
 -2.216761f, 10.508948f, -1.678791f,
 -2.216761f, 10.508948f, -1.678791f,
 0.123705f, 11.393829f, -1.624633f,
 0.123705f, 11.393829f, -1.624633f,
 0.138107f, 11.732420f, -1.085937f,
 0.100477f, 10.936386f, 1.199633f,
 -0.900302f, 11.075687f, 0.926248f,
 -0.900302f, 11.075687f, 0.926248f,
 -1.255152f, 12.256459f, 1.306510f,
 -1.228969f, 12.810341f, -0.283792f,
 -0.900302f, 11.075687f, 0.926248f,
 -0.900302f, 11.075687f, 0.926248f,
 -1.228969f, 12.810341f, -0.283792f,
 -0.873122f, 11.650640f, -0.724555f,
 -0.873122f, 11.650640f, -0.724555f,
 -0.873122f, 11.650640f, -0.724555f,
 -1.255152f, 12.256459f, 1.306510f,
 -1.255152f, 12.256459f, 1.306510f,
 -1.228969f, 12.810341f, -0.283792f,
 -0.265905f, 6.329001f, -2.020241f,
 -1.317397f, 5.455652f, -1.551384f,
 -1.317397f, 5.455652f, -1.551384f,
 -1.317397f, 5.455652f, -1.551384f,
 -2.026015f, 4.239952f, 0.977174f,
 -1.208415f, 6.934706f, 0.378570f,
 -1.208415f, 6.934706f, 0.378570f,
 -2.026015f, 4.239952f, 0.977174f,
 -1.208415f, 6.934706f, 0.378570f,
 -1.208415f, 6.934706f, 0.378570f,
 0.154433f, 6.061129f, 0.450045f,
 -1.143324f, 4.583034f, 2.293352f,
 0.154433f, 6.061129f, 0.450045f,
 0.154433f, 6.061129f, 0.450045f,
 -0.265905f, 6.329001f, -2.020241f,
 -2.387953f, -0.025459f, 0.520978f,
 -2.026015f, 4.239952f, 0.977174f,
 -2.026015f, 4.239952f, 0.977174f,
 -1.143324f, 4.583034f, 2.293352f,
 -0.575393f, 1.291012f, 2.668911f,
 -0.575393f, 1.291012f, 2.668911f,};

static float VertArrayB[] = new float[]{
 -0.620411f, -0.015118f, 5.053026f,
 -2.258681f, -0.015118f, 5.053026f,
 -0.575354f, -0.025459f, 0.520978f,
 -0.575354f, -0.025459f, 0.520978f,
 -2.258681f, -0.015118f, 5.053026f,
 -2.387953f, -0.025459f, 0.520978f,
 -2.387953f, -0.025459f, 0.520978f,
 -2.258681f, -0.015118f, 5.053026f,
 -2.387953f, 1.291012f, 2.668910f,
 -2.387953f, 1.291012f, 2.668910f,
 -2.258681f, -0.015118f, 5.053026f,
 -2.086726f, 1.218862f, 3.710888f,
 -2.387953f, 1.291012f, 2.668910f,
 -2.086726f, 1.218862f, 3.710888f,
 -0.575393f, 1.291012f, 2.668911f,
 -0.575393f, 1.291012f, 2.668911f,
 -2.086726f, 1.218862f, 3.710888f,
 -0.841217f, 1.218862f, 3.710888f,
 -0.841217f, 1.218862f, 3.710888f,
 -0.620411f, -0.015118f, 5.053026f,
 -0.575393f, 1.291012f, 2.668911f,
 -0.575393f, 1.291012f, 2.668911f,
 -0.620411f, -0.015118f, 5.053026f,
 -0.575354f, -0.025459f, 0.520978f,
 -2.677609f, 9.074341f, -1.312173f,
 -2.126441f, 8.723095f, 1.926985f,
 -3.666185f, 8.931790f, -0.712824f,
 -2.126441f, 8.723095f, 1.926985f,
 -1.895867f, 8.687007f, 0.346944f,
 -3.666185f, 8.931790f, -0.712824f,
 -3.666185f, 8.931790f, -0.712824f,
 -3.686053f, 10.355017f, -0.350902f,
 -2.677609f, 9.074341f, -1.312173f,
 -2.677609f, 9.074341f, -1.312173f,
 -3.686053f, 10.355017f, -0.350902f,
 -2.216761f, 10.508948f, -1.678791f,
 -2.216761f, 10.508948f, -1.678791f,
 -3.686053f, 10.355017f, -0.350902f,
 -2.500471f, 10.623912f, 1.228818f,
 -2.500471f, 10.623912f, 1.228818f,
 -2.118553f, 10.138278f, 0.587454f,
 -2.126441f, 8.723095f, 1.926985f,
 -2.126441f, 8.723095f, 1.926985f,
 -2.118553f, 10.138278f, 0.587454f,
 -1.895867f, 8.687007f, 0.346944f,
 -3.349910f, 7.652983f, 1.078535f,
 -3.757852f, 7.976671f, 1.570777f,
 -3.666185f, 8.931790f, -0.712824f,
 -3.666185f, 8.931790f, -0.712824f,
 -3.757852f, 7.976671f, 1.570777f,
 -3.686053f, 10.355017f, -0.350902f,
 -3.757852f, 7.976671f, 1.570777f,
 -3.635996f, 8.409821f, 1.386934f,
 -3.686053f, 10.355017f, -0.350902f,
 -3.686053f, 10.355017f, -0.350902f,
 -3.635996f, 8.409821f, 1.386934f,
 -2.118553f, 10.138278f, 0.587454f,
 -3.635996f, 8.409821f, 1.386934f,
 -3.184057f, 8.242525f, 0.828316f,
 -2.118553f, 10.138278f, 0.587454f,
 -2.118553f, 10.138278f, 0.587454f,
 -3.184057f, 8.242525f, 0.828316f,
 -1.895867f, 8.687007f, 0.346944f,
 -1.689696f, 7.176361f, 2.347764f,
 -2.319995f, 7.676482f, 3.108313f,
 -3.349910f, 7.652983f, 1.078535f,
 -3.349910f, 7.652983f, 1.078535f,
 -2.319995f, 7.676482f, 3.108313f,
 -3.757852f, 7.976671f, 1.570777f,
 -0.627331f, 7.245287f, 3.214323f,
 -0.267041f, 8.525974f, 2.670757f,
 -1.689696f, 7.176361f, 2.347764f,
 -1.689696f, 7.176361f, 2.347764f,
 -0.267041f, 8.525974f, 2.670757f,
 -1.329407f, 8.457047f, 1.804198f,
 -1.257630f, 7.745408f, 3.974871f,
 -0.627331f, 7.245287f, 3.214323f,
 -2.319995f, 7.676482f, 3.108313f,
 -2.319995f, 7.676482f, 3.108313f,
 -0.627331f, 7.245287f, 3.214323f,
 -1.689696f, 7.176361f, 2.347764f,
 -2.022297f, 8.734679f, 2.659179f,
 -0.959932f, 8.803605f, 3.525737f,
 -2.319995f, 7.676482f, 3.108313f,
 -2.319995f, 7.676482f, 3.108313f,
 -0.959932f, 8.803605f, 3.525737f,
 -1.257630f, 7.745408f, 3.974871f,
 -1.329407f, 8.457047f, 1.804198f,
 -0.267041f, 8.525974f, 2.670757f,
 -2.022297f, 8.734679f, 2.659179f,
 -2.022297f, 8.734679f, 2.659179f,
 -0.267041f, 8.525974f, 2.670757f,
 -0.959932f, 8.803605f, 3.525737f,
 0.123705f, 11.393829f, -1.624633f,
 0.078843f, 9.586023f, -2.586524f,
 -2.216761f, 10.508948f, -1.678791f,
 -2.216761f, 10.508948f, -1.678791f,
 0.078843f, 9.586023f, -2.586524f,
 -3.508228f, 8.315418f, -2.917646f,};

static float[] TextArray = new float[]{
 0.765412f, 0.681378f,
 0.765412f, 0.570335f,
 0.825201f, 0.681378f,
 0.822879f, 0.570299f,
 0.542473f, 0.970289f,
 0.447291f, 0.970289f,
 0.542473f, 0.916457f,
 0.449024f, 0.913521f,
 0.542473f, 0.838197f,
 0.493899f, 0.841133f,
 0.410299f, 0.793373f,
 0.397838f, 0.222717f,
 0.847778f, 0.681378f,
 0.850454f, 0.639527f,
 0.661488f, 0.501265f,
 0.661486f, 0.569087f,
 0.322042f, 0.569516f,
 0.320395f, 0.473878f,
 0.600243f, 0.473879f,
 0.599213f, 0.569510f,
 0.408358f, 0.569764f,
 0.396173f, 0.513666f,
 0.524463f, 0.513667f,
 0.513269f, 0.569764f,
 0.324047f, 0.138784f,
 0.268283f, 0.138970f,
 0.281315f, 0.363513f,
 0.388431f, 0.138763f,
 0.300356f, 0.022362f,
 0.244979f, 0.022659f,
 0.298407f, 0.283420f,
 0.228262f, 0.289756f,
 0.700544f, 0.421993f,
 0.700544f, 0.369959f,
 0.743172f, 0.375421f,
 0.743172f, 0.414980f,
 0.711360f, 0.038998f,
 0.662490f, 0.038998f,
 0.545151f, 0.038998f,
 0.605984f, 0.038998f,
 0.711360f, 0.146332f,
 0.662490f, 0.146332f,
 0.545151f, 0.146332f,
 0.605984f, 0.146332f,
 0.711360f, 0.247785f,
 0.662490f, 0.247785f,
 0.545151f, 0.247785f,
 0.605984f, 0.247785f,
 0.123410f, 0.926820f,
 0.064457f, 0.926366f,
 0.124920f, 0.870927f,
 0.064167f, 0.871384f,
 0.985361f, 0.221742f,
 0.840209f, 0.221742f,
 0.840209f, 0.075484f,
 0.985361f, 0.013481f,
 0.765412f, 0.792421f,
 0.822878f, 0.792457f,
 0.396173f, 0.624501f,
 0.524462f, 0.624500f,
 0.637654f, 0.970289f,
 0.635921f, 0.913521f,
 0.602870f, 0.274197f,
 0.602871f, 0.326231f,
 0.645499f, 0.320769f,
 0.645499f, 0.281210f,
 0.591046f, 0.841133f,
 0.674644f, 0.793372f,
 0.850454f, 0.723230f,
 0.925844f, 0.723230f,
 0.320395f, 0.664289f,
 0.600238f, 0.664291f,
 0.208399f, 0.140511f,
 0.152635f, 0.140325f,
 0.124023f, 0.367959f,
 0.161585f, 0.372104f,
 0.231702f, 0.024200f,
 0.176325f, 0.023903f,
 0.106931f, 0.287866f,
 0.177076f, 0.294203f,
 0.015226f, 0.586251f,
 0.069400f, 0.586251f,
 0.920318f, 0.814883f,
 0.836659f, 0.814916f,
 0.015226f, 0.680055f,
 0.069400f, 0.680055f,
 0.186740f, 0.680055f,
 0.130233f, 0.680055f,
 0.015226f, 0.795038f,
 0.069400f, 0.795038f,
 0.186740f, 0.795038f,
 0.130233f, 0.795038f,
 0.249217f, 0.874910f,
 0.249424f, 0.933539f,
 0.301860f, 0.930908f,
 0.302065f, 0.877358f,
 0.840209f, 0.368000f,
 0.985361f, 0.419507f,
 0.912785f, 0.044483f,
 0.912785f, 0.221742f,
 0.912785f, 0.393753f,
 0.789643f, 0.108579f,
 0.789643f, 0.221742f,
 0.789643f, 0.334905f,
 0.330550f, 0.836015f,
 0.674193f, 0.626883f,
 0.674193f, 0.626883f,
 0.674193f, 0.681378f,
 0.962340f, 0.570236f,
 0.962340f, 0.570236f,
 0.925844f, 0.639527f,
 0.962340f, 0.570236f,
 0.963051f, 0.681379f,
 0.925844f, 0.639527f,
 0.925844f, 0.639527f,
 0.963051f, 0.681379f,
 0.925844f, 0.681379f,
 0.259150f, 0.569083f,
 0.259150f, 0.501261f,
 0.259150f, 0.501261f,
 0.519240f, 0.376645f,
 0.540277f, 0.437890f,
 0.401404f, 0.376641f,
 0.401404f, 0.376641f,
 0.540277f, 0.437890f,
 0.380364f, 0.437885f,
 0.540277f, 0.437890f,
 0.380364f, 0.437885f,
 0.380364f, 0.437885f,
 0.320813f, 0.222669f,
 0.293252f, 0.222819f,
 0.293252f, 0.222819f,
 0.366655f, 0.447487f,
 0.268827f, 0.448535f,
 0.327717f, 0.363533f,
 0.327717f, 0.363533f,
 0.268827f, 0.448535f,
 0.220727f, 0.454545f,
 0.243753f, 0.367658f,
 0.268827f, 0.448535f,
 0.268827f, 0.448535f,
 0.243753f, 0.367658f,
 0.320813f, 0.222669f,
 0.327717f, 0.363533f,
 0.327717f, 0.363533f,
 0.381748f, 0.247125f,
 0.243753f, 0.367658f,
 0.368537f, 0.059658f,
 0.368537f, 0.059658f,
 0.556600f, 0.365850f,
 0.556599f, 0.423421f,
 0.556599f, 0.423421f,
 0.381748f, 0.247125f,
 0.208711f, 0.247418f,
 0.208711f, 0.247418f,
 0.259954f, 0.282383f,
 0.776267f, 0.365854f,
 0.776267f, 0.423423f,
 0.776267f, 0.423423f,
 0.459565f, 0.022649f,
 0.368537f, 0.059658f,
 0.368537f, 0.059658f,
 0.459565f, 0.022649f,
 0.408321f, 0.057613f,
 0.788493f, 0.530101f,
 0.819577f, 0.371917f,
 0.809816f, 0.508397f,
 0.819577f, 0.371917f,
 0.832137f, 0.414748f,
 0.809816f, 0.508397f,
 0.964229f, 0.507208f,
 0.962340f, 0.570236f,
 0.925476f, 0.499804f,
 0.925476f, 0.499804f,
 0.962340f, 0.570236f,
 0.920320f, 0.547872f,
 0.836660f, 0.547841f,
 0.962340f, 0.570236f,
 0.962340f, 0.570236f,
 0.836660f, 0.547841f,
 0.920320f, 0.547872f,
 0.788493f, 0.530101f,
 0.836660f, 0.547841f,
 0.836660f, 0.547841f,
 0.788493f, 0.530101f,
 0.809816f, 0.508397f,
 0.490977f, 0.038998f,
 0.490977f, 0.038998f,
 0.490977f, 0.146332f,
 0.490977f, 0.146332f,
 0.490977f, 0.146332f,
 0.490977f, 0.247785f,
 0.064893f, 0.975472f,
 0.123410f, 0.975472f,
 0.123410f, 0.975472f,
 0.171616f, 0.872795f,
 0.171617f, 0.919755f,
 0.171617f, 0.919755f,
 0.063685f, 0.822293f,
 0.127460f, 0.821833f,
 0.127460f, 0.821833f,
 0.011377f, 0.873096f,
 0.009284f, 0.925250f,
 0.009284f, 0.925250f,
 0.739076f, 0.221742f,
 0.739076f, 0.141674f,
 0.739076f, 0.141674f,
 0.754394f, 0.836011f,
 0.674193f, 0.735873f,
 0.674193f, 0.735873f,
 0.674193f, 0.681378f,
 0.962341f, 0.792524f,
 0.962341f, 0.792524f,
 0.963051f, 0.681379f,
 0.963051f, 0.681379f,
 0.925844f, 0.681379f,
 0.259150f, 0.569083f,
 0.259150f, 0.636906f,
 0.259150f, 0.636906f,
 0.380361f, 0.700279f,
 0.540274f, 0.700278f,
 0.401400f, 0.761524f,
 0.401400f, 0.761524f,
 0.540274f, 0.700278f,
 0.519237f, 0.761523f,
 0.661484f, 0.636909f,
 0.661484f, 0.636909f,
 0.380361f, 0.700279f,
 0.380361f, 0.700279f,
 0.540274f, 0.700278f,
 0.155870f, 0.224211f,
 0.183430f, 0.224360f,
 0.183430f, 0.224360f,
 0.038682f, 0.451933f,
 0.077621f, 0.367980f,
 0.136511f, 0.452982f,
 0.136511f, 0.452982f,
 0.077621f, 0.367980f,
 0.136511f, 0.452982f,
 0.136511f, 0.452982f,
 0.184610f, 0.458992f,
 0.088251f, 0.140305f,
 0.078844f, 0.224258f,
 0.078844f, 0.224258f,
 0.155870f, 0.224211f,
 0.023590f, 0.251572f,
 0.077621f, 0.367980f,
 0.077621f, 0.367980f,
 0.088251f, 0.140305f,
 0.108145f, 0.061199f,
 0.108145f, 0.061199f,};

static float[] TextArrayB = new float[]{
 0.602870f, 0.274197f,
 0.602871f, 0.326231f,
 0.458925f, 0.272771f,
 0.458925f, 0.272771f,
 0.602871f, 0.326231f,
 0.458927f, 0.330342f,
 0.023590f, 0.251572f,
 0.196627f, 0.251865f,
 0.106931f, 0.287866f,
 0.106931f, 0.287866f,
 0.196627f, 0.251865f,
 0.145383f, 0.286830f,
 0.678594f, 0.330337f,
 0.645499f, 0.320769f,
 0.678594f, 0.272767f,
 0.678594f, 0.272767f,
 0.645499f, 0.320769f,
 0.645499f, 0.281210f,
 0.068361f, 0.059155f,
 0.017117f, 0.024190f,
 0.108145f, 0.061199f,
 0.108145f, 0.061199f,
 0.017117f, 0.024190f,
 0.176325f, 0.023903f,
 0.819562f, 0.990842f,
 0.788493f, 0.832655f,
 0.832127f, 0.948011f,
 0.788493f, 0.832655f,
 0.809815f, 0.854360f,
 0.832127f, 0.948011f,
 0.925462f, 0.862950f,
 0.920318f, 0.814883f,
 0.964216f, 0.855555f,
 0.964216f, 0.855555f,
 0.920318f, 0.814883f,
 0.962341f, 0.792524f,
 0.962341f, 0.792524f,
 0.920318f, 0.814883f,
 0.822878f, 0.792457f,
 0.822878f, 0.792457f,
 0.836659f, 0.814916f,
 0.788493f, 0.832655f,
 0.788493f, 0.832655f,
 0.836659f, 0.814916f,
 0.809815f, 0.854360f,
 0.235609f, 0.680055f,
 0.186740f, 0.680055f,
 0.235609f, 0.586251f,
 0.235609f, 0.586251f,
 0.186740f, 0.680055f,
 0.186739f, 0.586251f,
 0.186740f, 0.680055f,
 0.130233f, 0.680055f,
 0.186739f, 0.586251f,
 0.186739f, 0.586251f,
 0.130233f, 0.680055f,
 0.130233f, 0.586251f,
 0.130233f, 0.680055f,
 0.069400f, 0.680055f,
 0.130233f, 0.586251f,
 0.130233f, 0.586251f,
 0.069400f, 0.680055f,
 0.069400f, 0.586251f,
 0.235609f, 0.795038f,
 0.186740f, 0.795038f,
 0.235609f, 0.680055f,
 0.235609f, 0.680055f,
 0.186740f, 0.795038f,
 0.186740f, 0.680055f,
 0.249424f, 0.933539f,
 0.249217f, 0.874910f,
 0.200327f, 0.935933f,
 0.200327f, 0.935933f,
 0.249217f, 0.874910f,
 0.201459f, 0.877993f,
 0.301860f, 0.930908f,
 0.249424f, 0.933539f,
 0.302124f, 0.983361f,
 0.302124f, 0.983361f,
 0.249424f, 0.933539f,
 0.249642f, 0.985999f,
 0.353274f, 0.877965f,
 0.302065f, 0.877358f,
 0.352586f, 0.930336f,
 0.352586f, 0.930336f,
 0.302065f, 0.877358f,
 0.301860f, 0.930908f,
 0.250990f, 0.823806f,
 0.249217f, 0.874910f,
 0.302280f, 0.822266f,
 0.302280f, 0.822266f,
 0.249217f, 0.874910f,
 0.302065f, 0.877358f,
 0.739076f, 0.221742f,
 0.789643f, 0.221742f,
 0.739076f, 0.301810f,
 0.739076f, 0.301810f,
 0.789643f, 0.221742f,
 0.789643f, 0.334905f,};

static float[][] NormArray = new float[][]{
{ 0.322468f, -0.393791f, 0.860780f},
{ 0.110728f, 0.140269f, 0.983902f},
{ 0.142434f, -0.224291f, 0.964057f},
{ -0.066402f, 0.369483f, 0.926862f},
{ 0.263314f, 0.909680f, 0.321165f},
{ 0.263314f, 0.909681f, 0.321165f},
{ 0.263314f, 0.909681f, 0.321165f},
{ 0.263314f, 0.909681f, 0.321165f},
{ 0.160259f, 0.354928f, -0.921055f},
{ 0.033969f, 0.155348f, -0.987276f},
{ 0.034086f, 0.250130f, -0.967612f},
{ -0.029127f, 0.078101f, -0.996520f},
{ 0.000000f, -0.946364f, 0.323104f},
{ 0.000000f, -0.960351f, 0.278793f},
{ 0.000000f, 0.736146f, 0.676823f},
{ 0.000000f, 0.736147f, 0.676822f},
{ -0.027059f, -0.023764f, -0.999351f},
{ -0.007988f, -0.012853f, -0.999885f},
{ 0.921741f, -0.387563f, -0.013746f},
{ 0.983005f, -0.173836f, 0.059009f},
{ 0.933463f, -0.357717f, 0.026165f},
{ 0.989410f, -0.092513f, 0.111845f},
{ 0.094595f, -0.367334f, 0.925266f},
{ -0.000887f, -0.370044f, 0.929014f},
{ -0.010036f, 0.890660f, 0.454560f},
{ 0.124800f, 0.782556f, 0.609943f},
{ 0.389672f, 0.906515f, 0.162439f},
{ 0.310951f, 0.922310f, 0.229466f},
{ 0.337517f, 0.923294f, 0.183332f},
{ 0.485785f, 0.822931f, 0.294614f},
{ 0.222863f, 0.882295f, -0.414594f},
{ 0.249193f, 0.862480f, -0.440490f},
{ 0.228706f, 0.878056f, -0.420370f},
{ 0.321785f, 0.797718f, -0.510000f},
{ 0.246011f, -0.517274f, 0.819698f},
{ 0.327184f, -0.450380f, 0.830727f},
{ 0.322790f, -0.336808f, 0.884515f},
{ 0.365732f, -0.341079f, 0.865971f},
{ 0.935160f, -0.339017f, -0.102679f},
{ 0.935160f, -0.339017f, -0.102679f},
{ 0.935160f, -0.339017f, -0.102679f},
{ 0.935160f, -0.339017f, -0.102679f},
{ 0.357240f, 0.118297f, -0.926491f},
{ 0.402088f, 0.269478f, -0.875047f},
{ 0.411115f, 0.158351f, -0.897724f},
{ 0.437638f, 0.268910f, -0.857998f},
{ 0.324178f, -0.240947f, 0.914797f},
{ 0.255886f, -0.196728f, 0.946478f},
{ 0.967918f, 0.231912f, 0.096708f},
{ 0.967918f, 0.231912f, 0.096708f},
{ 0.967918f, 0.231912f, 0.096708f},
{ 0.967918f, 0.231912f, 0.096708f},
{ 0.397348f, 0.372853f, -0.838508f},
{ 0.332708f, 0.428121f, -0.840248f},
{ -0.003021f, -0.250037f, -0.968232f},
{ 0.005489f, -0.251228f, -0.967912f},
{ 0.024940f, -0.253880f, -0.966914f},
{ 0.045314f, -0.256553f, -0.965467f},
{ 0.962449f, 0.249875f, 0.106092f},
{ 0.959374f, 0.240814f, 0.147001f},
{ -0.059231f, -0.393976f, 0.917210f},
{ -0.041917f, -0.499225f, 0.865458f},
{ -0.926659f, -0.356567f, 0.119013f},
{ -0.986766f, -0.162131f, 0.002372f},
{ -0.942557f, -0.326798f, 0.069203f},
{ -0.988315f, -0.110687f, -0.104793f},
{ 0.065832f, 0.577418f, -0.813790f},
{ 0.039079f, 0.584204f, -0.810665f},
{ 0.007099f, 0.591716f, -0.806115f},
{ 0.000000f, 0.593295f, -0.804985f},
{ 0.992506f, 0.115640f, -0.039476f},
{ 0.993533f, 0.096804f, -0.059332f},
{ -0.012249f, -0.667015f, 0.744944f},
{ 0.000000f, -0.671242f, 0.741238f},
{ -0.999220f, 0.037838f, -0.011341f},
{ -0.999619f, 0.023545f, -0.014413f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.997819f, 0.017446f, 0.063662f},
{ 0.862197f, 0.423114f, 0.278551f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069078f},
{ 0.000000f, 0.997611f, 0.069077f},
{ 0.000000f, 0.997611f, 0.069079f},
{ -0.998095f, 0.044185f, 0.043053f},
{ -0.867985f, 0.428427f, 0.251102f},
{ 0.107775f, -0.989231f, -0.099029f},
{ 0.075559f, -0.992407f, -0.097052f},
{ 0.045741f, -0.998456f, -0.031511f},
{ -0.024583f, -0.999338f, 0.026822f},
{ 0.938163f, -0.127674f, -0.321791f},
{ 0.935442f, -0.136068f, -0.326243f},
{ 0.915864f, -0.189459f, -0.353976f},
{ 0.887723f, -0.252138f, -0.385195f},
{ 0.270309f, 0.925785f, 0.264302f},
{ 0.021819f, 0.966016f, 0.257562f},
{ 0.834182f, -0.226197f, 0.502968f},
{ 0.340932f, -0.110085f, 0.933620f},
{ 0.790141f, -0.216604f, 0.573377f},
{ -0.186031f, 0.023931f, 0.982252f},
{ -0.403155f, -0.724101f, -0.559592f},
{ -0.213120f, -0.618463f, -0.756362f},
{ 0.858536f, 0.103858f, 0.502125f},
{ 0.343756f, -0.650281f, 0.677471f},
{ 0.858015f, 0.062934f, 0.509754f},
{ 0.160328f, -0.799994f, 0.578191f},
{ 0.624916f, 0.596767f, 0.503338f},
{ 0.881428f, -0.009970f, 0.472213f},
{ -0.999006f, 0.010123f, -0.043417f},
{ -0.601361f, 0.732437f, -0.319219f},
{ -0.999070f, 0.028131f, -0.032688f},
{ 0.232051f, 0.862084f, -0.450514f},
{ -0.127088f, -0.653855f, -0.745870f},
{ -0.127088f, -0.653855f, -0.745870f},
{ -0.139193f, -0.753951f, 0.642015f},
{ -0.139192f, -0.753951f, 0.642015f},
{ 0.297927f, 0.577316f, 0.760228f},
{ 0.297928f, 0.577315f, 0.760228f},
{ 0.297927f, 0.577316f, 0.760228f},
{ 0.297928f, 0.577315f, 0.760228f},
{ 0.495657f, 0.738428f, -0.457219f},
{ 0.494289f, 0.737761f, -0.459769f},
{ 0.268019f, 0.592564f, 0.759627f},
{ 0.268020f, 0.592564f, 0.759627f},
{ 0.268020f, 0.592564f, 0.759627f},
{ 0.268020f, 0.592564f, 0.759627f},
{ 0.355636f, 0.671934f, -0.649637f},
{ 0.355636f, 0.671934f, -0.649637f},
{ 0.355636f, 0.671934f, -0.649637f},
{ 0.355637f, 0.671934f, -0.649637f},
{ -0.268019f, -0.592564f, -0.759627f},
{ -0.268019f, -0.592564f, -0.759627f},
{ -0.268019f, -0.592564f, -0.759627f},
{ -0.268019f, -0.592564f, -0.759627f},
{ -0.405889f, -0.785839f, 0.466596f},
{ -0.405889f, -0.785839f, 0.466596f},
{ -0.405889f, -0.785839f, 0.466596f},
{ -0.405889f, -0.785839f, 0.466596f},
{ 0.899478f, -0.434885f, 0.042598f},
{ 0.899478f, -0.434885f, 0.042598f},
{ 0.899478f, -0.434885f, 0.042598f},
{ 0.899478f, -0.434885f, 0.042598f},
{ 0.177222f, 0.458858f, -0.870656f},
{ 0.188061f, 0.442046f, -0.877057f},
{ 0.166765f, 0.359131f, -0.918267f},
{ 0.136762f, 0.393888f, -0.908927f},
{ 0.112824f, 0.160873f, -0.980505f},
{ 0.007492f, 0.264661f, -0.964312f},
{ 0.007758f, 0.249396f, -0.968370f},
{ 0.077265f, 0.141942f, -0.986855f},
{ -0.109610f, -0.352558f, 0.929348f},
{ -0.101247f, 0.311316f, 0.944898f},
{ -0.120420f, -0.199600f, 0.972450f},
{ -0.214680f, 0.383568f, 0.898214f},
{ -0.198273f, 0.926623f, 0.319466f},
{ -0.198267f, 0.926623f, 0.319469f},
{ -0.198271f, 0.926623f, 0.319467f},
{ -0.198263f, 0.926623f, 0.319471f},
{ -0.052272f, 0.198163f, -0.978774f},
{ -0.226006f, 0.024660f, -0.973814f},
{ -0.196235f, -0.008143f, -0.980523f},
{ -0.292561f, -0.075268f, -0.953280f},
{ 0.000000f, -0.946364f, 0.323103f},
{ 0.000000f, 0.736147f, 0.676822f},
{ 0.000000f, -0.960351f, 0.278792f},
{ 0.000000f, 0.736147f, 0.676822f},
{ -0.398324f, -0.012801f, -0.917155f},
{ -0.316331f, -0.040122f, -0.947800f},
{ -0.985215f, -0.104529f, 0.135742f},
{ -0.970800f, -0.222337f, 0.090074f},
{ -0.875593f, -0.434578f, 0.210901f},
{ -0.852583f, -0.514916f, 0.089237f},
{ -0.030197f, -0.206058f, 0.978074f},
{ -0.014784f, 0.058606f, 0.998172f},
{ -0.033640f, 0.835301f, 0.548763f},
{ -0.104258f, 0.806816f, 0.581530f},
{ -0.201100f, 0.926093f, 0.319235f},
{ -0.539733f, 0.841806f, -0.007181f},
{ -0.527202f, 0.839243f, 0.133151f},
{ -0.467230f, 0.880472f, -0.080403f},
{ -0.286126f, 0.789978f, -0.542279f},
{ -0.283957f, 0.792008f, -0.540456f},
{ -0.278812f, 0.796770f, -0.536117f},
{ -0.249030f, 0.822962f, -0.510606f},
{ -0.292450f, -0.493462f, 0.819127f},
{ -0.358859f, -0.299455f, 0.884052f},
{ -0.367590f, -0.419489f, 0.830004f},
{ -0.396105f, -0.303426f, 0.866622f},
{ -0.961216f, -0.255153f, -0.104692f},
{ -0.961216f, -0.255153f, -0.104692f},
{ -0.961216f, -0.255153f, -0.104692f},
{ -0.961216f, -0.255153f, -0.104692f},
{ -0.410131f, 0.312378f, -0.856862f},
{ -0.380261f, 0.310247f, -0.871291f},
{ -0.393929f, 0.194209f, -0.898389f},
{ -0.343438f, 0.149284f, -0.927235f},
{ -0.292143f, -0.171508f, 0.940871f},
{ -0.352684f, -0.201170f, 0.913862f},
{ -0.930344f, 0.350769f, 0.106869f},
{ -0.930348f, 0.350762f, 0.106857f},
{ -0.930347f, 0.350765f, 0.106861f},
{ -0.930351f, 0.350757f, 0.106847f},
{ -0.369204f, 0.414440f, -0.831822f},
{ -0.312418f, 0.453399f, -0.834760f},
{ 0.472130f, -0.784393f, -0.402271f},
{ 0.186061f, -0.890535f, -0.415126f},
{ 0.426757f, -0.807556f, -0.407103f},
{ 0.089702f, -0.907197f, -0.411031f},
{ -0.978293f, 0.167846f, -0.121531f},
{ -0.982732f, 0.119776f, -0.141040f},
{ -0.113287f, 0.358614f, 0.926586f},
{ -0.000694f, 0.385327f, 0.922780f},
{ 0.993737f, 0.010245f, 0.111276f},
{ 0.985770f, -0.167842f, 0.009337f},
{ 0.801439f, -0.579048f, -0.149661f},
{ 0.785989f, -0.585921f, -0.197278f},
{ 0.093211f, 0.137172f, -0.986152f},
{ 0.012133f, 0.110417f, -0.993811f},
{ 0.052547f, 0.123851f, -0.990908f},
{ 0.000000f, 0.106346f, -0.994329f},
{ -0.997572f, 0.059384f, -0.036396f},
{ -0.999588f, 0.026204f, -0.011739f},
{ -0.017371f, 0.119810f, 0.992645f},
{ 0.000000f, 0.113346f, 0.993555f},
{ 0.998229f, 0.058031f, -0.013099f},
{ 0.995728f, 0.078734f, -0.048238f},
{ 0.000000f, -0.999997f, 0.002282f},
{ 0.000000f, -0.999997f, 0.002282f},
{ -0.997819f, 0.017446f, 0.063662f},
{ -0.862197f, 0.423113f, 0.278551f},
{ 0.000000f, 0.997611f, 0.069077f},
{ -0.000000f, 0.997611f, 0.069077f},
{ -0.000000f, 0.997611f, 0.069078f},
{ -0.000000f, 0.997611f, 0.069079f},
{ 0.867985f, 0.428427f, 0.251102f},
{ 0.998095f, 0.044185f, 0.043053f},
{ 0.070432f, -0.990348f, -0.119375f},
{ 0.426561f, 0.886628f, -0.178710f},
{ 0.168525f, -0.951043f, -0.259068f},
{ 0.279784f, 0.925994f, -0.253488f},
{ -0.528882f, 0.202222f, -0.824251f},
{ -0.616633f, 0.100516f, -0.780807f},
{ -0.641910f, 0.067827f, -0.763774f},
{ -0.671802f, 0.026634f, -0.740252f},
{ -0.290991f, 0.897210f, 0.332174f},
{ -0.481981f, 0.203671f, 0.852181f},
{ -0.902510f, -0.293389f, -0.315274f},
{ -0.954278f, -0.202664f, -0.219730f},
{ -0.961202f, -0.186780f, -0.202990f},
{ -0.981868f, -0.127396f, -0.140374f},
{ 0.433228f, -0.691541f, -0.578001f},
{ 0.523029f, -0.453447f, -0.721683f},
{ -0.641997f, -0.766188f, -0.028221f},
{ -0.779435f, -0.626031f, 0.023806f},
{ -0.997350f, -0.043569f, -0.058258f},
{ -0.999132f, -0.003388f, -0.041524f},
{ -0.757785f, 0.423771f, 0.496165f},
{ -0.463737f, 0.583604f, 0.666599f},
{ 0.476515f, 0.870250f, 0.124892f},
{ 0.658746f, 0.462264f, 0.593604f},
{ 0.451166f, -0.141626f, 0.881131f},
{ 0.377011f, -0.094839f, 0.921341f},
{ 0.455560f, -0.453331f, -0.766131f},
{ 0.455560f, -0.453332f, -0.766130f},
{ -0.424082f, -0.877142f, 0.225336f},
{ -0.424082f, -0.877142f, 0.225336f},
{ -0.607195f, 0.449036f, 0.655501f},
{ -0.607195f, 0.449036f, 0.655501f},
{ -0.607195f, 0.449036f, 0.655501f},
{ -0.607195f, 0.449036f, 0.655500f},
{ 0.034569f, 0.959424f, -0.279838f},
{ 0.037105f, 0.958900f, -0.281306f},
{ -0.581542f, 0.450975f, 0.677075f},
{ -0.581542f, 0.450975f, 0.677075f},
{ -0.581542f, 0.450975f, 0.677075f},
{ -0.581541f, 0.450975f, 0.677075f},
{ 0.250695f, 0.891123f, -0.378222f},
{ 0.250695f, 0.891123f, -0.378222f},
{ 0.250695f, 0.891123f, -0.378222f},
{ 0.250695f, 0.891123f, -0.378222f},
{ 0.581541f, -0.450976f, -0.677075f},
{ 0.581541f, -0.450975f, -0.677075f},
{ 0.581541f, -0.450976f, -0.677075f},
{ 0.581541f, -0.450975f, -0.677075f},
{ -0.116609f, -0.968507f, 0.219994f},
{ -0.116610f, -0.968507f, 0.219994f},
{ -0.116609f, -0.968507f, 0.219994f},
{ -0.116610f, -0.968507f, 0.219994f},
{ -0.782984f, -0.043107f, -0.620546f},
{ -0.782984f, -0.043108f, -0.620547f},
{ -0.782984f, -0.043108f, -0.620547f},
{ -0.782984f, -0.043108f, -0.620547f},
{ -0.156410f, 0.466965f, -0.870333f},
{ -0.073955f, 0.393633f, -0.916288f},
{ -0.122489f, 0.524199f, -0.842740f},
{ -0.041258f, 0.333409f, -0.941879f},
{ -0.003348f, 0.159664f, -0.987166f},
{ -0.087507f, 0.197469f, -0.976396f},
{ -0.044486f, 0.033422f, -0.998451f},
{ -0.213886f, 0.040924f, -0.976001f},
{ 0.028061f, 0.234327f, -0.971753f},
{ 0.197883f, -0.047738f, -0.979062f},
{ -0.180279f, 0.225833f, -0.957339f},
{ -0.349672f, -0.063758f, -0.934700f}};

static int[] FaceArray = new int[]{
1, 3, 0,
0, 3, 2,
20, 21, 23,
23, 21, 22,
5, 7, 4,
4, 7, 6,
32, 33, 35,
35, 33, 34,
7, 9, 6,
6, 9, 8,
104, 10, 7,
7, 10, 9,
1, 0, 105,
106, 0, 107,
3, 13, 2,
2, 13, 12,
3, 108, 13,
13, 109, 110,
111, 112, 113,
114, 115, 116,
117, 118, 16,
16, 119, 17,
120, 121, 122,
123, 124, 125,
15, 19, 14,
14, 19, 18,
17, 21, 16,
16, 21, 20,
126, 22, 127,
128, 22, 21,
18, 19, 22,
22, 19, 23,
129, 130, 24,
24, 131, 25,
132, 133, 134,
135, 136, 26,
137, 138, 139,
140, 141, 26,
142, 24, 11,
11, 24, 27,
24, 25, 28,
28, 25, 29,
26, 30, 143,
144, 30, 145,
146, 31, 26,
26, 31, 30,
27, 24, 147,
148, 24, 28,
149, 33, 150,
151, 33, 32,
152, 30, 153,
154, 30, 155,
156, 157, 34,
34, 158, 35,
28, 159, 160,
161, 162, 163,
164, 165, 166,
167, 168, 169,
170, 171, 172,
173, 174, 175,
3, 176, 177,
178, 179, 180,
3, 181, 182,
183, 184, 185,
37, 36, 41,
41, 36, 40,
38, 42, 186,
187, 42, 188,
39, 43, 38,
38, 43, 42,
37, 41, 39,
39, 41, 43,
41, 40, 45,
45, 40, 44,
42, 46, 189,
190, 46, 191,
43, 47, 42,
42, 47, 46,
43, 41, 47,
47, 41, 45,
192, 49, 193,
194, 49, 48,
195, 196, 50,
50, 197, 48,
198, 199, 51,
51, 200, 50,
201, 51, 202,
203, 51, 49,
49, 51, 48,
48, 51, 50,
204, 205, 102,
102, 206, 101,
53, 54, 99,
99, 54, 98,
0, 2, 56,
56, 2, 57,
20, 23, 58,
58, 23, 59,
4, 6, 60,
60, 6, 61,
62, 65, 63,
63, 65, 64,
8, 66, 6,
6, 66, 61,
66, 67, 61,
61, 67, 207,
56, 208, 0,
0, 209, 210,
12, 68, 2,
2, 68, 57,
68, 69, 57,
57, 69, 211,
212, 69, 213,
214, 69, 215,
216, 16, 217,
218, 16, 70,
219, 220, 221,
222, 223, 224,
71, 19, 225,
226, 19, 15,
20, 58, 16,
16, 58, 70,
58, 59, 227,
228, 59, 229,
71, 59, 19,
19, 59, 23,
230, 73, 231,
232, 73, 72,
233, 234, 235,
236, 237, 74,
74, 75, 238,
239, 75, 240,
241, 73, 242,
243, 73, 244,
73, 77, 72,
72, 77, 76,
245, 78, 246,
247, 78, 74,
74, 78, 75,
75, 78, 79,
248, 249, 73,
73, 250, 77,
82, 83, 57,
81, 85, 80,
80, 85, 84,
85, 89, 84,
84, 89, 88,
90, 91, 86,
86, 91, 87,
87, 91, 85,
85, 91, 89,
94, 95, 93,
93, 95, 92,
53, 99, 96,
96, 99, 100,
99, 98, 52,
52, 98, 55,
99, 52, 100,
100, 52, 97,
102, 101, 53,
53, 101, 54,
102, 53, 103,
103, 53, 96, };

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,
90, 91, 92,
93, 94, 95,
96, 97, 98,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 350  Texture Co-ords: 202  Normals: 304  Texture: block Faces: 196 Smooth Groups: 94 sucess: 82 Doubles: 114 Redos needed: 147 Correct: 96