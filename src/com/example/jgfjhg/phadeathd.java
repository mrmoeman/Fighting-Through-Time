package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phadeathd {

static String TextureName = "defeat";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 5.749367f, -7.929628f,
 0.936363f, 5.979488f, -9.606903f,
 0.791186f, 4.618489f, -9.206689f,
 0.817567f, 4.344932f, -8.291190f,
 0.562201f, 6.023035f, -9.686203f,
 0.444292f, 4.569550f, -9.616190f,
 0.371258f, 4.240659f, -8.136622f,
 0.442211f, 5.752450f, -7.929205f,
 0.033961f, 6.031439f, -7.890928f,
 0.033961f, 6.105606f, -9.846659f,
 0.033961f, 4.592078f, -9.780389f,
 0.033961f, 4.153942f, -8.148520f,
 0.033961f, 5.347953f, -10.055123f,
 0.541219f, 5.334095f, -9.954118f,
 0.936363f, 5.778607f, -9.634581f,
 0.936363f, 5.493555f, -7.964726f,
 0.429582f, 5.427912f, -7.973732f,
 0.033961f, 5.427912f, -7.973732f,
 0.445001f, 5.912244f, -7.663792f,
 0.782250f, 5.941222f, -7.659816f,
 0.432372f, 5.875759f, -7.326739f,
 0.782250f, 5.941404f, -7.317733f,
 1.200907f, 4.334440f, -7.749136f,
 0.776421f, 5.387011f, -7.675617f,
 0.033961f, 5.354409f, -7.710718f,
 0.033961f, 4.231479f, -7.763272f,
 0.700363f, 2.607309f, -5.543962f,
 0.684600f, 3.244136f, -5.261387f,
 0.033961f, 3.401504f, -5.191568f,
 0.033961f, 2.236944f, -5.708310f,
 0.971581f, 4.735250f, -6.817153f,
 0.997360f, 3.681067f, -7.284918f,
 0.033961f, 3.608006f, -7.502752f,
 0.033961f, 4.991116f, -6.807686f,
 1.812318f, 1.982173f, -0.699938f,
 1.775085f, 4.148535f, -0.283341f,
 0.043735f, 4.623858f, -0.196133f,
 0.026285f, 1.364100f, -0.850128f,
 1.443090f, 4.433717f, -7.645175f,
 1.194151f, 5.092278f, -7.769289f,
 1.097921f, 5.284976f, -7.205231f,
 1.380818f, 4.522679f, -7.061408f,
 2.868098f, 5.296051f, -6.826956f,
 2.691929f, 5.589752f, -6.940874f,
 2.493693f, 5.629503f, -6.712737f,
 2.695342f, 5.288836f, -6.582058f,
 4.302064f, 6.216286f, -5.793947f,
 3.939553f, 6.828530f, -6.028858f,
 3.513358f, 6.853047f, -5.608317f,
 3.917515f, 6.164332f, -5.346159f,
 0.042591f, 3.730043f, -3.149781f,
 1.174826f, 3.588433f, -3.127969f,
 1.195743f, 2.260107f, -2.899173f,
 0.024993f, 1.881953f, -2.860558f,
 -0.868441f, 5.778607f, -9.634581f,
 -0.868441f, 5.493555f, -7.964726f,
 -0.749646f, 4.344932f, -8.291190f,
 -0.723264f, 4.618489f, -9.206689f,
 -0.376369f, 4.569550f, -9.616190f,
 -0.473295f, 5.334095f, -9.954118f,
 -0.303336f, 4.240659f, -8.136622f,
 -0.361660f, 5.427912f, -7.973732f,
 -0.374288f, 5.752450f, -7.929205f,
 -1.204989f, 5.749367f, -7.929628f,
 -0.868441f, 5.979488f, -9.606903f,
 -0.494279f, 6.023035f, -9.686203f,
 -0.714328f, 5.941222f, -7.659816f,
 -0.377078f, 5.912244f, -7.663792f,
 -0.364450f, 5.875759f, -7.326739f,
 -0.714328f, 5.941404f, -7.317733f,
 -0.708500f, 5.387011f, -7.675617f,
 -1.132985f, 4.334440f, -7.749136f,
 -4.322673f, 6.111256f, -5.555247f,
 -3.932400f, 6.738559f, -5.680219f,
 -3.504433f, 6.667393f, -5.266847f,
 -3.939828f, 5.961948f, -5.128365f,
 -0.903658f, 4.735250f, -6.817153f,
 -0.929437f, 3.681067f, -7.284918f,
 -0.616678f, 3.244135f, -5.261387f,
 -0.632440f, 2.607309f, -5.543962f,
 -1.092180f, 3.627884f, -3.115793f,
 -1.139041f, 2.272899f, -2.900109f,
 -1.162223f, 5.080553f, -7.580888f,
 -1.457111f, 4.431159f, -7.531816f,
 -1.102627f, 5.222117f, -6.996969f,
 -1.438749f, 4.470092f, -6.939597f,
 -2.746748f, 5.628553f, -6.813810f,
 -2.936229f, 5.327511f, -6.752626f,
 -2.546272f, 5.617446f, -6.584443f,
 -2.763367f, 5.268403f, -6.514935f,
 -1.692797f, 4.164277f, -0.281899f,
 -1.753487f, 1.998304f, -0.702507f,
 3.216036f, 6.415620f, -5.972534f,
 3.497440f, 6.359191f, -6.296385f,
 3.747521f, 5.942269f, -6.134673f,
 3.502286f, 5.932027f, -5.787029f,
 -3.228944f, 6.289588f, -5.707036f,
 -3.537122f, 5.794104f, -5.608368f,
 -3.782508f, 5.878012f, -5.945781f,
 -3.513530f, 6.305356f, -6.032634f,
 2.667583f, 5.028206f, 0.295143f,
 2.282885f, 5.617734f, -0.030666f,
 3.452000f, -0.175026f, -8.470806f,
 2.032300f, 1.277995f, -9.253686f,
 2.898753f, 1.146682f, -7.001142f,
 2.514056f, 1.736210f, -7.326952f,
 0.791186f, 4.618489f, -9.206689f,
 0.791186f, 4.618489f, -9.206689f,
 0.936363f, 5.778607f, -9.634581f,
 0.817567f, 4.344932f, -8.291190f,
 0.371258f, 4.240659f, -8.136622f,
 0.791186f, 4.618489f, -9.206689f,
 0.791186f, 4.618489f, -9.206689f,
 0.371258f, 4.240659f, -8.136622f,
 0.371258f, 4.240659f, -8.136622f,
 0.033961f, 6.105606f, -9.846659f,
 0.033961f, 6.105606f, -9.846659f,
 0.562201f, 6.023035f, -9.686203f,
 0.562201f, 6.023035f, -9.686203f,
 0.936363f, 5.778607f, -9.634581f,
 0.936363f, 5.778607f, -9.634581f,
 0.562201f, 6.023035f, -9.686203f,
 0.936363f, 5.979488f, -9.606903f,
 1.272911f, 5.749367f, -7.929628f,
 0.936363f, 5.979488f, -9.606903f,
 0.936363f, 5.979488f, -9.606903f,
 0.429582f, 5.427912f, -7.973732f,
 0.442211f, 5.752450f, -7.929205f,
 0.442211f, 5.752450f, -7.929205f,
 0.033961f, 6.031439f, -7.890928f,
 0.442211f, 5.752450f, -7.929205f,
 0.445001f, 5.912244f, -7.663792f,
 0.445001f, 5.912244f, -7.663792f,
 0.432372f, 5.875759f, -7.326739f,
 0.432372f, 5.875759f, -7.326739f,
 0.432372f, 5.875759f, -7.326739f,
 0.782250f, 5.941404f, -7.317733f,
 1.272911f, 5.749367f, -7.929628f,
 0.782250f, 5.941222f, -7.659816f,
 0.782250f, 5.941222f, -7.659816f,
 0.782250f, 5.941404f, -7.317733f,
 0.429582f, 5.427912f, -7.973732f,
 0.776421f, 5.387011f, -7.675617f,
 0.371258f, 4.240659f, -8.136622f,
 0.371258f, 4.240659f, -8.136622f,
 0.776421f, 5.387011f, -7.675617f,
 1.200907f, 4.334440f, -7.749136f,
 0.033961f, 5.354409f, -7.710718f,
 0.429582f, 5.427912f, -7.973732f,
 0.429582f, 5.427912f, -7.973732f,
 0.033961f, 5.354409f, -7.710718f,
 0.776421f, 5.387011f, -7.675617f,
 0.033961f, 4.153942f, -8.148520f,
 0.371258f, 4.240659f, -8.136622f,
 0.033961f, 4.231479f, -7.763272f,
 0.033961f, 4.231479f, -7.763272f,
 0.371258f, 4.240659f, -8.136622f,
 1.200907f, 4.334440f, -7.749136f,
 0.971581f, 4.735250f, -6.817153f,
 0.684600f, 3.244136f, -5.261387f,
 0.700363f, 2.607309f, -5.543962f,
 0.684600f, 3.244136f, -5.261387f,
 0.684600f, 3.244136f, -5.261387f,
 1.174826f, 3.588433f, -3.127969f,
 0.033961f, 3.401504f, -5.191568f,
 0.684600f, 3.244136f, -5.261387f,
 0.684600f, 3.244136f, -5.261387f,
 0.033961f, 2.236944f, -5.708310f,
 0.700363f, 2.607309f, -5.543962f,
 0.700363f, 2.607309f, -5.543962f,
 0.776421f, 5.387011f, -7.675617f,
 1.200907f, 4.334440f, -7.749136f,
 1.200907f, 4.334440f, -7.749136f,
 0.971581f, 4.735250f, -6.817153f,
 0.776421f, 5.387011f, -7.675617f,
 0.776421f, 5.387011f, -7.675617f,
 0.997360f, 3.681067f, -7.284918f,
 0.971581f, 4.735250f, -6.817153f,
 0.971581f, 4.735250f, -6.817153f,
 1.097921f, 5.284976f, -7.205231f,
 0.997360f, 3.681067f, -7.284918f,
 1.200907f, 4.334440f, -7.749136f,
 1.200907f, 4.334440f, -7.749136f,
 1.097921f, 5.284976f, -7.205231f,
 2.493693f, 5.629503f, -6.712737f,
 2.493693f, 5.629503f, -6.712737f,
 2.493693f, 5.629503f, -6.712737f,
 3.216036f, 6.415620f, -5.972534f,
 3.216036f, 6.415620f, -5.972534f,
 1.174826f, 3.588433f, -3.127969f,
 1.174826f, 3.588433f, -3.127969f,
 1.775085f, 4.148535f, -0.283341f,
 -0.868441f, 5.778607f, -9.634581f,
 -0.723264f, 4.618489f, -9.206689f,
 -0.723264f, 4.618489f, -9.206689f,
 -0.749646f, 4.344932f, -8.291190f,
 -0.723264f, 4.618489f, -9.206689f,
 -0.303336f, 4.240659f, -8.136622f,
 -0.303336f, 4.240659f, -8.136622f,
 -0.723264f, 4.618489f, -9.206689f,
 -0.303336f, 4.240659f, -8.136622f,
 -0.494279f, 6.023035f, -9.686203f,
 0.033961f, 6.105606f, -9.846659f,
 0.033961f, 6.105606f, -9.846659f,
 -0.868441f, 5.979488f, -9.606903f,
 -0.494279f, 6.023035f, -9.686203f,
 -0.868441f, 5.778607f, -9.634581f,
 -0.868441f, 5.778607f, -9.634581f,
 -0.494279f, 6.023035f, -9.686203f,
 -0.868441f, 5.979488f, -9.606903f,
 -0.868441f, 5.979488f, -9.606903f,
 -1.204989f, 5.749367f, -7.929628f,
 0.033961f, 6.031439f, -7.890928f,
 -0.374288f, 5.752450f, -7.929205f,
 -0.374288f, 5.752450f, -7.929205f,
 -0.361660f, 5.427912f, -7.973732f,
 -0.374288f, 5.752450f, -7.929205f,
 -0.377078f, 5.912244f, -7.663792f,
 -0.377078f, 5.912244f, -7.663792f,
 -0.364450f, 5.875759f, -7.326739f,
 -0.364450f, 5.875759f, -7.326739f,
 -0.364450f, 5.875759f, -7.326739f,
 -0.714328f, 5.941404f, -7.317733f,
 -0.714328f, 5.941404f, -7.317733f,
 -0.714328f, 5.941222f, -7.659816f,
 -0.714328f, 5.941222f, -7.659816f,
 -1.204989f, 5.749367f, -7.929628f,
 -1.132985f, 4.334440f, -7.749136f,
 -0.708500f, 5.387011f, -7.675617f,
 -0.303336f, 4.240659f, -8.136622f,
 -0.303336f, 4.240659f, -8.136622f,
 -0.708500f, 5.387011f, -7.675617f,
 -0.361660f, 5.427912f, -7.973732f,
 -0.708500f, 5.387011f, -7.675617f,
 0.033961f, 5.354409f, -7.710718f,
 -0.361660f, 5.427912f, -7.973732f,
 -0.361660f, 5.427912f, -7.973732f,
 0.033961f, 5.354409f, -7.710718f,
 0.033961f, 4.153942f, -8.148520f,
 0.033961f, 4.231479f, -7.763272f,
 -0.303336f, 4.240659f, -8.136622f,
 -0.303336f, 4.240659f, -8.136622f,
 0.033961f, 4.231479f, -7.763272f,
 -1.132985f, 4.334440f, -7.749136f,
 -0.903658f, 4.735250f, -6.817153f,
 -0.616678f, 3.244135f, -5.261387f,
 -0.632440f, 2.607309f, -5.543962f,
 -0.616678f, 3.244135f, -5.261387f,
 -0.616678f, 3.244135f, -5.261387f,
 -1.092180f, 3.627884f, -3.115793f,
 -0.616678f, 3.244135f, -5.261387f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 3.244135f, -5.261387f,
 0.042591f, 3.730043f, -3.149781f,
 0.033961f, 3.401504f, -5.191568f,
 0.033961f, 2.236944f, -5.708310f,
 0.024993f, 1.881953f, -2.860558f,
 -0.632440f, 2.607309f, -5.543962f,
 -0.632440f, 2.607309f, -5.543962f,
 0.024993f, 1.881953f, -2.860558f,
 -1.139041f, 2.272899f, -2.900109f,
 -1.457111f, 4.431159f, -7.531816f,
 -1.162223f, 5.080553f, -7.580888f,
 -1.132985f, 4.334440f, -7.749136f,
 -1.132985f, 4.334440f, -7.749136f,
 -1.162223f, 5.080553f, -7.580888f,
 -0.708500f, 5.387011f, -7.675617f,
 -0.903658f, 4.735250f, -6.817153f,
 -0.708500f, 5.387011f, -7.675617f,
 -1.102627f, 5.222117f, -6.996969f,
 -0.708500f, 5.387011f, -7.675617f,
 -1.162223f, 5.080553f, -7.580888f,
 -1.102627f, 5.222117f, -6.996969f,
 -1.102627f, 5.222117f, -6.996969f,
 -1.438749f, 4.470092f, -6.939597f,
 -0.903658f, 4.735250f, -6.817153f,
 -0.903658f, 4.735250f, -6.817153f,
 -1.438749f, 4.470092f, -6.939597f,
 -0.929437f, 3.681067f, -7.284918f,
 -0.929437f, 3.681067f, -7.284918f,
 -1.438749f, 4.470092f, -6.939597f,
 -1.132985f, 4.334440f, -7.749136f,
 -1.132985f, 4.334440f, -7.749136f,
 -1.438749f, 4.470092f, -6.939597f,
 -1.457111f, 4.431159f, -7.531816f,
 -1.162223f, 5.080553f, -7.580888f,
 -2.746748f, 5.628553f, -6.813810f,
 -1.102627f, 5.222117f, -6.996969f,
 -1.102627f, 5.222117f, -6.996969f,
 -2.746748f, 5.628553f, -6.813810f,
 -2.546272f, 5.617446f, -6.584443f,
 -3.228944f, 6.289588f, -5.707036f,
 -2.546272f, 5.617446f, -6.584443f,
 -3.513530f, 6.305356f, -6.032634f,
 -3.513530f, 6.305356f, -6.032634f,
 -2.546272f, 5.617446f, -6.584443f,
 -2.746748f, 5.628553f, -6.813810f,
 -1.139041f, 2.272899f, -2.900109f,
 -1.753487f, 1.998304f, -0.702507f,
 -1.092180f, 3.627884f, -3.115793f,
 -1.092180f, 3.627884f, -3.115793f,
 -1.753487f, 1.998304f, -0.702507f,
 -1.692797f, 4.164277f, -0.281899f,
 3.747521f, 5.942269f, -6.134673f,
 3.939553f, 6.828530f, -6.028858f,
 4.302064f, 6.216286f, -5.793947f,
 3.502286f, 5.932027f, -5.787029f,
 3.747521f, 5.942269f, -6.134673f,
 3.917515f, 6.164332f, -5.346159f,
 3.917515f, 6.164332f, -5.346159f,
 3.747521f, 5.942269f, -6.134673f,
 4.302064f, 6.216286f, -5.793947f,
 3.216036f, 6.415620f, -5.972534f,
 3.502286f, 5.932027f, -5.787029f,
 3.513358f, 6.853047f, -5.608317f,
 3.513358f, 6.853047f, -5.608317f,
 3.502286f, 5.932027f, -5.787029f,
 3.917515f, 6.164332f, -5.346159f,
 -3.537122f, 5.794104f, -5.608368f,
 -3.504433f, 6.667393f, -5.266847f,
 -3.939828f, 5.961948f, -5.128365f,
 -3.537122f, 5.794104f, -5.608368f,
 -3.939828f, 5.961948f, -5.128365f,
 -3.782508f, 5.878012f, -5.945781f,
 -3.782508f, 5.878012f, -5.945781f,
 -3.939828f, 5.961948f, -5.128365f,
 -4.322673f, 6.111256f, -5.555247f,
 -3.513530f, 6.305356f, -6.032634f,
 -3.782508f, 5.878012f, -5.945781f,
 -3.932400f, 6.738559f, -5.680219f,
 -3.932400f, 6.738559f, -5.680219f,
 -3.782508f, 5.878012f, -5.945781f,
 -4.322673f, 6.111256f, -5.555247f,
 -3.513530f, 6.305356f, -6.032634f,
 -3.932400f, 6.738559f, -5.680219f,
 -3.228944f, 6.289588f, -5.707036f,
 2.667583f, 5.028206f, 0.295143f,
 2.282885f, 5.617734f, -0.030666f,
 2.898753f, 1.146682f, -7.001142f,
 2.898753f, 1.146682f, -7.001142f,
 2.282885f, 5.617734f, -0.030666f,
 2.514056f, 1.736210f, -7.326952f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.049042f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.995122f,
 0.137216f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.817124f, 0.248044f,
 0.853660f, 0.094340f,
 0.900004f, 0.283013f,
 0.900004f, 0.283013f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, -0.098456f, -0.266776f},
{ 0.826605f, -0.495100f, 0.267581f},
{ 0.904768f, -0.390157f, -0.170800f},
{ 0.857718f, -0.448835f, 0.250732f},
{ 0.363846f, -0.794761f, -0.485768f},
{ 0.549456f, -0.149332f, -0.822069f},
{ 0.485921f, -0.839813f, -0.242062f},
{ 0.520279f, -0.220962f, 0.824916f},
{ 0.517276f, 0.848371f, 0.112663f},
{ 0.414373f, 0.908683f, 0.050890f},
{ 0.188090f, 0.956930f, 0.221150f},
{ 0.238557f, 0.950222f, -0.200423f},
{ -0.000000f, 0.946493f, -0.322724f},
{ -0.000000f, 0.937700f, 0.347447f},
{ 0.000000f, -0.794800f, -0.606872f},
{ -0.000000f, -0.036788f, -0.999323f},
{ 0.000000f, -0.990206f, -0.139614f},
{ 0.453143f, 0.862519f, -0.225218f},
{ -0.760935f, 0.628892f, -0.159601f},
{ 0.383690f, -0.452191f, 0.805174f},
{ -0.216586f, -0.598615f, 0.771201f},
{ -0.000000f, 0.325029f, 0.945704f},
{ 0.383130f, 0.891953f, -0.240067f},
{ 0.462049f, -0.318420f, -0.827719f},
{ 0.000000f, 0.937509f, 0.347962f},
{ 0.000000f, -0.719405f, -0.694591f},
{ 0.985563f, -0.142724f, -0.091084f},
{ 0.563519f, 0.764098f, -0.314007f},
{ 0.121598f, -0.170097f, 0.977896f},
{ -0.290610f, 0.749525f, 0.594775f},
{ 0.000000f, 0.767014f, 0.641630f},
{ 0.615135f, 0.481607f, 0.624231f},
{ 0.737103f, -0.593211f, -0.323697f},
{ -0.000000f, -0.754270f, -0.656564f},
{ 0.886153f, 0.456607f, 0.079008f},
{ 0.751854f, -0.617272f, -0.231714f},
{ 0.000636f, -0.936338f, -0.351099f},
{ -0.000275f, 0.938528f, 0.345203f},
{ 0.736786f, -0.619476f, -0.270916f},
{ 0.754487f, 0.582791f, -0.301835f},
{ 0.014956f, 0.968066f, -0.250247f},
{ -0.005337f, -0.977021f, -0.213075f},
{ 0.237897f, 0.415427f, -0.877967f},
{ 0.610636f, -0.497230f, -0.616349f},
{ -0.327784f, 0.781913f, 0.530254f},
{ 0.336710f, -0.536666f, 0.773703f},
{ 0.300767f, 0.437598f, -0.847377f},
{ 0.687623f, -0.538014f, -0.487561f},
{ -0.597384f, 0.542757f, 0.590379f},
{ -0.159231f, -0.540718f, 0.825996f},
{ 0.153155f, 0.477883f, -0.864969f},
{ 0.682681f, -0.536949f, -0.495613f},
{ -0.854113f, 0.427666f, 0.295959f},
{ -0.354385f, -0.569310f, 0.741820f},
{ 0.006247f, 0.968441f, -0.249167f},
{ 0.728813f, 0.626147f, -0.277078f},
{ 0.879529f, -0.394609f, -0.265917f},
{ -0.003967f, -0.973313f, -0.229446f},
{ -0.958716f, -0.098456f, -0.266777f},
{ -0.904768f, -0.390157f, -0.170800f},
{ -0.826605f, -0.495100f, 0.267582f},
{ -0.857718f, -0.448836f, 0.250732f},
{ -0.549456f, -0.149333f, -0.822070f},
{ -0.363846f, -0.794761f, -0.485768f},
{ -0.485922f, -0.839813f, -0.242061f},
{ -0.520280f, -0.220963f, 0.824915f},
{ -0.238557f, 0.950221f, -0.200423f},
{ -0.414372f, 0.908684f, 0.050890f},
{ -0.188090f, 0.956930f, 0.221150f},
{ -0.517274f, 0.848372f, 0.112662f},
{ -0.453141f, 0.862520f, -0.225218f},
{ -0.383689f, -0.452190f, 0.805175f},
{ 0.760936f, 0.628891f, -0.159599f},
{ 0.216586f, -0.598614f, 0.771201f},
{ -0.481189f, -0.289750f, -0.827346f},
{ -0.411131f, 0.879571f, -0.239428f},
{ -0.991415f, -0.078729f, -0.104396f},
{ -0.126916f, -0.337719f, 0.932651f},
{ -0.527800f, 0.833136f, -0.165265f},
{ 0.327058f, 0.616029f, 0.716618f},
{ -0.555690f, 0.471811f, 0.684546f},
{ -0.730766f, -0.605301f, -0.315580f},
{ -0.752189f, -0.616324f, -0.233145f},
{ -0.885881f, 0.457707f, 0.075620f},
{ -0.752092f, -0.601218f, -0.269991f},
{ -0.742597f, 0.597496f, -0.302569f},
{ -0.589864f, -0.422575f, -0.688107f},
{ -0.307306f, 0.523668f, -0.794566f},
{ 0.364205f, 0.704666f, 0.608934f},
{ -0.285395f, -0.621260f, 0.729785f},
{ -0.683718f, -0.402962f, -0.608401f},
{ -0.231740f, 0.544754f, -0.805940f},
{ 0.581124f, 0.453653f, 0.675643f},
{ 0.085290f, -0.658157f, 0.748034f},
{ -0.132775f, 0.632374f, -0.763200f},
{ -0.708448f, -0.407077f, -0.576532f},
{ 0.874035f, 0.327818f, 0.358606f},
{ 0.329164f, -0.709234f, 0.623409f},
{ -0.725935f, 0.631125f, -0.273313f},
{ -0.883074f, -0.385353f, -0.267738f},
{ -0.867056f, -0.459851f, 0.191705f},
{ -0.841422f, -0.486796f, 0.234604f},
{ -0.771317f, -0.559779f, 0.302851f},
{ -0.758017f, -0.565991f, 0.324137f},
{ -0.867904f, -0.449416f, 0.211585f},
{ -0.867904f, -0.449416f, 0.211585f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
31, 26, 32,
32, 26, 29,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 181, 41,
41, 182, 38,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
52, 189, 34,
34, 190, 191,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
29, 79, 32,
32, 79, 77,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: defeat Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86