package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phaattackc {

static String TextureName = "attack";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 4.843361f, 3.057993f,
 0.936363f, 5.730179f, 4.500131f,
 0.791186f, 6.527822f, 3.326992f,
 0.817567f, 6.158100f, 2.445926f,
 0.562201f, 5.746865f, 4.589048f,
 0.444292f, 6.825566f, 3.612358f,
 0.371258f, 6.140563f, 2.260301f,
 0.442211f, 4.840711f, 3.059623f,
 0.033961f, 4.600833f, 3.207132f,
 0.033961f, 5.784908f, 4.765448f,
 0.033961f, 6.912382f, 3.753538f,
 0.033961f, 6.215124f, 2.214451f,
 0.033961f, 6.502686f, 4.445619f,
 0.541219f, 6.449282f, 4.358773f,
 0.936363f, 5.902973f, 4.394010f,
 0.936363f, 5.063312f, 2.922739f,
 0.429582f, 5.119751f, 2.888032f,
 0.033961f, 5.119751f, 2.888032f,
 0.445001f, 4.548765f, 2.955960f,
 0.782250f, 4.523849f, 2.971281f,
 0.432372f, 4.363016f, 2.672353f,
 0.782250f, 4.306574f, 2.707061f,
 1.200907f, 5.822143f, 2.020408f,
 0.776421f, 4.962131f, 2.631710f,
 0.033961f, 5.009603f, 2.638139f,
 0.033961f, 5.910676f, 1.965977f,
 0.700363f, 4.173441f, -0.357031f,
 0.684600f, 3.577030f, 0.003095f,
 0.033961f, 3.429657f, 0.092092f,
 0.033961f, 4.520308f, -0.566468f,
 0.971581f, 4.337465f, 1.911597f,
 0.997360f, 5.324746f, 1.315455f,
 0.033961f, 5.545150f, 1.380350f,
 0.033961f, 4.183138f, 2.115901f,
 1.814173f, -0.240405f, -0.866466f,
 1.773673f, -0.018481f, 1.493748f,
 0.041278f, 0.003935f, 1.964771f,
 0.028797f, -0.263654f, -1.585448f,
 1.391403f, 5.146868f, 1.618687f,
 1.517847f, 5.208069f, 2.319647f,
 1.083900f, 4.853382f, 2.544236f,
 0.934323f, 4.786129f, 1.734967f,
 1.845542f, 3.338615f, 1.836336f,
 1.930427f, 3.549901f, 2.116382f,
 1.654130f, 3.602857f, 2.233768f,
 1.555536f, 3.360842f, 1.908960f,
 1.950110f, 1.582681f, 2.772264f,
 2.127294f, 2.017753f, 3.356010f,
 1.574784f, 2.167228f, 3.533457f,
 1.375394f, 1.682008f, 2.876797f,
 0.043191f, 2.537239f, 0.878907f,
 1.175881f, 2.484054f, 0.758365f,
 1.201072f, 1.968896f, -0.508156f,
 0.031451f, 1.854233f, -0.855740f,
 -0.868441f, 5.902973f, 4.394010f,
 -0.868441f, 5.063312f, 2.922739f,
 -0.749646f, 6.158100f, 2.445926f,
 -0.723264f, 6.527822f, 3.326992f,
 -0.376369f, 6.825566f, 3.612358f,
 -0.473295f, 6.449282f, 4.358773f,
 -0.303336f, 6.140563f, 2.260301f,
 -0.361660f, 5.119751f, 2.888032f,
 -0.374288f, 4.840711f, 3.059623f,
 -1.204989f, 4.843361f, 3.057993f,
 -0.868441f, 5.730179f, 4.500131f,
 -0.494279f, 5.746865f, 4.589048f,
 -0.714328f, 4.523849f, 2.971281f,
 -0.377078f, 4.548765f, 2.955960f,
 -0.364450f, 4.363016f, 2.672353f,
 -0.714328f, 4.306574f, 2.707061f,
 -0.708500f, 4.962131f, 2.631710f,
 -1.132985f, 5.822144f, 2.020408f,
 -1.729542f, 3.919271f, -1.640298f,
 -2.394677f, 3.832249f, -1.306437f,
 -2.259800f, 3.373281f, -0.945531f,
 -1.512536f, 3.472480f, -1.317221f,
 -0.903658f, 4.337465f, 1.911597f,
 -0.929437f, 5.324746f, 1.315455f,
 -0.616678f, 3.577030f, 0.003095f,
 -0.632440f, 4.173441f, -0.357031f,
 -1.091188f, 2.485376f, 0.774852f,
 -1.133735f, 1.971441f, -0.495041f,
 -1.500880f, 5.274039f, 1.969865f,
 -0.830559f, 5.446954f, 1.791403f,
 -1.502761f, 4.683581f, 1.843734f,
 -0.726958f, 4.881691f, 1.642005f,
 -1.665196f, 4.944126f, 0.161383f,
 -1.345563f, 4.985126f, -0.001178f,
 -1.615274f, 4.690045f, 0.322238f,
 -1.245191f, 4.738483f, 0.136535f,
 -1.694281f, -0.021222f, 1.498938f,
 -1.751716f, -0.236375f, -0.862659f,
 1.611250f, 2.607082f, 3.066987f,
 2.003467f, 2.531908f, 2.900352f,
 1.882969f, 2.231977f, 2.502813f,
 1.471292f, 2.263530f, 2.605905f,
 -2.015098f, 3.827168f, -0.562773f,
 -1.489748f, 3.895929f, -0.826387f,
 -1.632229f, 4.246049f, -1.021877f,
 -2.085965f, 4.187848f, -0.791113f,
 1.977896f, 1.824378f, -0.560502f,
 2.006104f, 1.076691f, -0.355912f,
 1.542894f, 5.138230f, 9.101794f,
 1.209963f, 3.049062f, 9.615854f,
 1.485441f, 3.985301f, 7.404631f,
 1.513649f, 3.237614f, 7.609221f,
 0.791186f, 6.527822f, 3.326992f,
 0.791186f, 6.527822f, 3.326992f,
 0.936363f, 5.902973f, 4.394010f,
 0.817567f, 6.158100f, 2.445926f,
 0.371258f, 6.140563f, 2.260301f,
 0.791186f, 6.527822f, 3.326992f,
 0.791186f, 6.527822f, 3.326992f,
 0.371258f, 6.140563f, 2.260301f,
 0.371258f, 6.140563f, 2.260301f,
 0.033961f, 5.784908f, 4.765448f,
 0.033961f, 5.784908f, 4.765448f,
 0.562201f, 5.746865f, 4.589048f,
 0.562201f, 5.746865f, 4.589048f,
 0.936363f, 5.902973f, 4.394010f,
 0.936363f, 5.902973f, 4.394010f,
 0.562201f, 5.746865f, 4.589048f,
 0.936363f, 5.730179f, 4.500131f,
 1.272911f, 4.843361f, 3.057993f,
 0.936363f, 5.730179f, 4.500131f,
 0.936363f, 5.730179f, 4.500131f,
 0.429582f, 5.119751f, 2.888032f,
 0.442211f, 4.840711f, 3.059623f,
 0.442211f, 4.840711f, 3.059623f,
 0.033961f, 4.600833f, 3.207132f,
 0.442211f, 4.840711f, 3.059623f,
 0.445001f, 4.548765f, 2.955960f,
 0.445001f, 4.548765f, 2.955960f,
 0.432372f, 4.363016f, 2.672353f,
 0.432372f, 4.363016f, 2.672353f,
 0.432372f, 4.363016f, 2.672353f,
 0.782250f, 4.306574f, 2.707061f,
 1.272911f, 4.843361f, 3.057993f,
 0.782250f, 4.523849f, 2.971281f,
 0.782250f, 4.523849f, 2.971281f,
 0.782250f, 4.306574f, 2.707061f,
 0.429582f, 5.119751f, 2.888032f,
 0.776421f, 4.962131f, 2.631710f,
 0.371258f, 6.140563f, 2.260301f,
 0.371258f, 6.140563f, 2.260301f,
 0.776421f, 4.962131f, 2.631710f,
 1.200907f, 5.822143f, 2.020408f,
 0.033961f, 5.009603f, 2.638139f,
 0.429582f, 5.119751f, 2.888032f,
 0.429582f, 5.119751f, 2.888032f,
 0.033961f, 5.009603f, 2.638139f,
 0.776421f, 4.962131f, 2.631710f,
 0.033961f, 6.215124f, 2.214451f,
 0.371258f, 6.140563f, 2.260301f,
 0.033961f, 5.910676f, 1.965977f,
 0.033961f, 5.910676f, 1.965977f,
 0.371258f, 6.140563f, 2.260301f,
 1.200907f, 5.822143f, 2.020408f,
 0.971581f, 4.337465f, 1.911597f,
 0.684600f, 3.577030f, 0.003095f,
 0.700363f, 4.173441f, -0.357031f,
 0.684600f, 3.577030f, 0.003095f,
 0.684600f, 3.577030f, 0.003095f,
 1.175881f, 2.484054f, 0.758365f,
 0.033961f, 3.429657f, 0.092092f,
 0.684600f, 3.577030f, 0.003095f,
 0.684600f, 3.577030f, 0.003095f,
 0.033961f, 4.520308f, -0.566468f,
 0.700363f, 4.173441f, -0.357031f,
 0.700363f, 4.173441f, -0.357031f,
 0.776421f, 4.962131f, 2.631710f,
 1.200907f, 5.822143f, 2.020408f,
 1.200907f, 5.822143f, 2.020408f,
 0.971581f, 4.337465f, 1.911597f,
 0.776421f, 4.962131f, 2.631710f,
 0.776421f, 4.962131f, 2.631710f,
 0.997360f, 5.324746f, 1.315455f,
 0.971581f, 4.337465f, 1.911597f,
 0.971581f, 4.337465f, 1.911597f,
 1.083900f, 4.853382f, 2.544236f,
 1.200907f, 5.822143f, 2.020408f,
 0.997360f, 5.324746f, 1.315455f,
 0.997360f, 5.324746f, 1.315455f,
 1.083900f, 4.853382f, 2.544236f,
 1.654130f, 3.602857f, 2.233768f,
 1.654130f, 3.602857f, 2.233768f,
 1.654130f, 3.602857f, 2.233768f,
 1.611250f, 2.607082f, 3.066987f,
 1.611250f, 2.607082f, 3.066987f,
 1.175881f, 2.484054f, 0.758365f,
 1.773673f, -0.018481f, 1.493748f,
 1.773673f, -0.018481f, 1.493748f,
 -0.868441f, 5.902973f, 4.394010f,
 -0.723264f, 6.527822f, 3.326992f,
 -0.723264f, 6.527822f, 3.326992f,
 -0.749646f, 6.158100f, 2.445926f,
 -0.723264f, 6.527822f, 3.326992f,
 -0.303336f, 6.140563f, 2.260301f,
 -0.303336f, 6.140563f, 2.260301f,
 -0.723264f, 6.527822f, 3.326992f,
 -0.303336f, 6.140563f, 2.260301f,
 -0.494279f, 5.746865f, 4.589048f,
 0.033961f, 5.784908f, 4.765448f,
 0.033961f, 5.784908f, 4.765448f,
 -0.868441f, 5.730179f, 4.500131f,
 -0.494279f, 5.746865f, 4.589048f,
 -0.868441f, 5.902973f, 4.394010f,
 -0.868441f, 5.902973f, 4.394010f,
 -0.494279f, 5.746865f, 4.589048f,
 -0.868441f, 5.730179f, 4.500131f,
 -0.868441f, 5.730179f, 4.500131f,
 -1.204989f, 4.843361f, 3.057993f,
 0.033961f, 4.600833f, 3.207132f,
 -0.374288f, 4.840711f, 3.059623f,
 -0.374288f, 4.840711f, 3.059623f,
 -0.361660f, 5.119751f, 2.888032f,
 -0.374288f, 4.840711f, 3.059623f,
 -0.377078f, 4.548765f, 2.955960f,
 -0.377078f, 4.548765f, 2.955960f,
 -0.364450f, 4.363016f, 2.672353f,
 -0.364450f, 4.363016f, 2.672353f,
 -0.364450f, 4.363016f, 2.672353f,
 -0.714328f, 4.306574f, 2.707061f,
 -0.714328f, 4.306574f, 2.707061f,
 -0.714328f, 4.523849f, 2.971281f,
 -0.714328f, 4.523849f, 2.971281f,
 -1.204989f, 4.843361f, 3.057993f,
 -1.132985f, 5.822144f, 2.020408f,
 -0.708500f, 4.962131f, 2.631710f,
 -0.303336f, 6.140563f, 2.260301f,
 -0.303336f, 6.140563f, 2.260301f,
 -0.708500f, 4.962131f, 2.631710f,
 -0.361660f, 5.119751f, 2.888032f,
 -0.708500f, 4.962131f, 2.631710f,
 0.033961f, 5.009603f, 2.638139f,
 -0.361660f, 5.119751f, 2.888032f,
 -0.361660f, 5.119751f, 2.888032f,
 0.033961f, 5.009603f, 2.638139f,
 0.033961f, 6.215124f, 2.214451f,
 0.033961f, 5.910676f, 1.965977f,
 -0.303336f, 6.140563f, 2.260301f,
 -0.303336f, 6.140563f, 2.260301f,
 0.033961f, 5.910676f, 1.965977f,
 -1.132985f, 5.822144f, 2.020408f,
 -0.903658f, 4.337465f, 1.911597f,
 -0.616678f, 3.577030f, 0.003095f,
 -0.632440f, 4.173441f, -0.357031f,
 -0.616678f, 3.577030f, 0.003095f,
 -0.616678f, 3.577030f, 0.003095f,
 -1.091188f, 2.485376f, 0.774852f,
 -0.616678f, 3.577030f, 0.003095f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 3.577030f, 0.003095f,
 0.043191f, 2.537239f, 0.878907f,
 0.033961f, 3.429657f, 0.092092f,
 0.033961f, 4.520308f, -0.566468f,
 0.031451f, 1.854233f, -0.855740f,
 -0.632440f, 4.173441f, -0.357031f,
 -0.632440f, 4.173441f, -0.357031f,
 0.031451f, 1.854233f, -0.855740f,
 -1.133735f, 1.971441f, -0.495041f,
 -1.132985f, 5.822144f, 2.020408f,
 -0.830559f, 5.446954f, 1.791403f,
 -0.708500f, 4.962131f, 2.631710f,
 -0.830559f, 5.446954f, 1.791403f,
 -1.500880f, 5.274039f, 1.969865f,
 -0.708500f, 4.962131f, 2.631710f,
 -0.708500f, 4.962131f, 2.631710f,
 -1.500880f, 5.274039f, 1.969865f,
 -0.903658f, 4.337465f, 1.911597f,
 -0.903658f, 4.337465f, 1.911597f,
 -1.500880f, 5.274039f, 1.969865f,
 -1.502761f, 4.683581f, 1.843734f,
 -0.903658f, 4.337465f, 1.911597f,
 -1.502761f, 4.683581f, 1.843734f,
 -0.929437f, 5.324746f, 1.315455f,
 -1.502761f, 4.683581f, 1.843734f,
 -0.726958f, 4.881691f, 1.642005f,
 -0.929437f, 5.324746f, 1.315455f,
 -0.726958f, 4.881691f, 1.642005f,
 -0.830559f, 5.446954f, 1.791403f,
 -0.929437f, 5.324746f, 1.315455f,
 -0.929437f, 5.324746f, 1.315455f,
 -0.830559f, 5.446954f, 1.791403f,
 -1.132985f, 5.822144f, 2.020408f,
 -1.500880f, 5.274039f, 1.969865f,
 -1.665196f, 4.944126f, 0.161383f,
 -1.502761f, 4.683581f, 1.843734f,
 -1.502761f, 4.683581f, 1.843734f,
 -1.665196f, 4.944126f, 0.161383f,
 -1.615274f, 4.690045f, 0.322238f,
 -2.015098f, 3.827168f, -0.562773f,
 -1.615274f, 4.690045f, 0.322238f,
 -2.085965f, 4.187848f, -0.791113f,
 -2.085965f, 4.187848f, -0.791113f,
 -1.615274f, 4.690045f, 0.322238f,
 -1.665196f, 4.944126f, 0.161383f,
 -1.751716f, -0.236375f, -0.862659f,
 -1.694281f, -0.021222f, 1.498938f,
 -1.133735f, 1.971441f, -0.495041f,
 -1.133735f, 1.971441f, -0.495041f,
 -1.694281f, -0.021222f, 1.498938f,
 -1.091188f, 2.485376f, 0.774852f,
 1.882969f, 2.231977f, 2.502813f,
 2.127294f, 2.017753f, 3.356010f,
 1.950110f, 1.582681f, 2.772264f,
 1.471292f, 2.263530f, 2.605905f,
 1.882969f, 2.231977f, 2.502813f,
 1.375394f, 1.682008f, 2.876797f,
 1.375394f, 1.682008f, 2.876797f,
 1.882969f, 2.231977f, 2.502813f,
 1.950110f, 1.582681f, 2.772264f,
 1.611250f, 2.607082f, 3.066987f,
 1.471292f, 2.263530f, 2.605905f,
 1.574784f, 2.167228f, 3.533457f,
 1.574784f, 2.167228f, 3.533457f,
 1.471292f, 2.263530f, 2.605905f,
 1.375394f, 1.682008f, 2.876797f,
 -1.489748f, 3.895929f, -0.826387f,
 -2.259800f, 3.373281f, -0.945531f,
 -1.512536f, 3.472480f, -1.317221f,
 -1.489748f, 3.895929f, -0.826387f,
 -1.512536f, 3.472480f, -1.317221f,
 -1.632229f, 4.246049f, -1.021877f,
 -1.632229f, 4.246049f, -1.021877f,
 -1.512536f, 3.472480f, -1.317221f,
 -1.729542f, 3.919271f, -1.640298f,
 -2.085965f, 4.187848f, -0.791113f,
 -1.632229f, 4.246049f, -1.021877f,
 -2.394677f, 3.832249f, -1.306437f,
 -2.394677f, 3.832249f, -1.306437f,
 -1.632229f, 4.246049f, -1.021877f,
 -1.729542f, 3.919271f, -1.640298f,
 -2.085965f, 4.187848f, -0.791113f,
 -2.394677f, 3.832249f, -1.306437f,
 -2.015098f, 3.827168f, -0.562773f,
 1.977896f, 1.824378f, -0.560502f,
 2.006104f, 1.076691f, -0.355912f,
 1.485441f, 3.985301f, 7.404631f,
 1.485441f, 3.985301f, 7.404631f,
 2.006104f, 1.076691f, -0.355912f,
 1.513649f, 3.237614f, 7.609221f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.245413f, 0.143650f},
{ 0.826605f, 0.212730f, -0.521028f},
{ 0.904768f, 0.409897f, -0.115668f},
{ 0.857718f, 0.187675f, -0.478641f},
{ 0.363845f, 0.922469f, -0.129105f},
{ 0.549456f, 0.637195f, 0.540445f},
{ 0.485921f, 0.802590f, -0.346020f},
{ 0.520282f, -0.352866f, -0.777684f},
{ 0.517275f, -0.727069f, 0.451440f},
{ 0.414372f, -0.734464f, 0.537456f},
{ 0.188089f, -0.879816f, 0.436517f},
{ 0.238558f, -0.607041f, 0.758018f},
{ -0.000000f, -0.526531f, 0.850156f},
{ 0.000000f, -0.945122f, 0.326718f},
{ -0.000000f, 0.999368f, -0.035550f},
{ 0.000000f, 0.662741f, 0.748849f},
{ 0.000000f, 0.853774f, -0.520643f},
{ 0.453144f, -0.523533f, 0.721508f},
{ -0.760935f, -0.384654f, 0.522512f},
{ 0.383692f, -0.161661f, -0.909201f},
{ -0.216586f, -0.026952f, -0.975892f},
{ 0.000000f, -0.851436f, -0.524458f},
{ 0.326484f, -0.139826f, 0.934803f},
{ 0.498608f, 0.853122f, 0.153539f},
{ 0.000000f, -0.612863f, 0.790189f},
{ 0.000000f, 0.797565f, -0.603234f},
{ 0.526768f, -0.799278f, -0.289260f},
{ 0.743026f, -0.317685f, 0.589057f},
{ -0.792598f, -0.607987f, 0.046275f},
{ -0.435733f, -0.052401f, 0.898549f},
{ 0.000000f, -0.873094f, 0.487552f},
{ 0.748152f, -0.623659f, 0.226536f},
{ 0.677497f, 0.553940f, -0.483889f},
{ -0.000000f, 0.875121f, -0.483905f},
{ 0.945264f, -0.033363f, 0.324596f},
{ 0.676873f, 0.253644f, -0.691019f},
{ 0.000140f, 0.544724f, -0.838616f},
{ 0.000120f, -0.591286f, 0.806462f},
{ 0.782537f, 0.286147f, -0.552952f},
{ 0.711443f, 0.439899f, 0.548031f},
{ 0.006569f, 0.461381f, 0.887178f},
{ -0.004920f, 0.239951f, -0.970773f},
{ 0.834075f, 0.341391f, 0.433325f},
{ 0.732661f, 0.154169f, -0.662902f},
{ -0.127609f, -0.389257f, 0.912247f},
{ -0.383834f, -0.510182f, -0.769666f},
{ 0.972941f, 0.210538f, 0.095182f},
{ 0.560404f, -0.194622f, -0.805028f},
{ -0.647108f, -0.026798f, 0.761927f},
{ -0.880575f, -0.267669f, -0.391077f},
{ 0.917892f, 0.315968f, 0.240082f},
{ 0.605288f, -0.333692f, -0.722687f},
{ -0.554695f, 0.582773f, 0.593876f},
{ -0.940526f, -0.080563f, -0.330030f},
{ 0.001792f, 0.347867f, 0.937542f},
{ 0.749670f, 0.360521f, 0.554995f},
{ 0.808794f, 0.305907f, -0.502269f},
{ -0.001569f, 0.279685f, -0.960091f},
{ -0.958716f, 0.245414f, 0.143651f},
{ -0.904768f, 0.409898f, -0.115668f},
{ -0.826605f, 0.212730f, -0.521027f},
{ -0.857718f, 0.187676f, -0.478642f},
{ -0.549455f, 0.637196f, 0.540445f},
{ -0.363845f, 0.922469f, -0.129104f},
{ -0.485921f, 0.802590f, -0.346019f},
{ -0.520281f, -0.352865f, -0.777685f},
{ -0.238558f, -0.607041f, 0.758018f},
{ -0.414372f, -0.734464f, 0.537456f},
{ -0.188089f, -0.879816f, 0.436517f},
{ -0.517274f, -0.727069f, 0.451441f},
{ -0.453142f, -0.523533f, 0.721509f},
{ -0.383693f, -0.161662f, -0.909201f},
{ 0.760937f, -0.384654f, 0.522509f},
{ 0.216586f, -0.026952f, -0.975891f},
{ -0.648173f, 0.757016f, 0.082451f},
{ -0.512435f, -0.195386f, 0.836203f},
{ 0.122160f, 0.297630f, -0.946833f},
{ 0.553353f, -0.798313f, -0.237692f},
{ -0.809294f, 0.074147f, -0.582706f},
{ -0.454115f, -0.880286f, 0.137392f},
{ -0.713119f, -0.663830f, 0.225368f},
{ -0.718448f, 0.556308f, -0.417556f},
{ -0.677517f, 0.253239f, -0.690537f},
{ -0.944468f, -0.033669f, 0.326875f},
{ -0.788366f, 0.287679f, -0.543802f},
{ -0.702723f, 0.441197f, 0.558145f},
{ -0.375305f, 0.924910f, -0.060719f},
{ -0.747854f, 0.600328f, 0.283410f},
{ -0.601521f, -0.793962f, 0.088301f},
{ 0.923473f, -0.383137f, 0.020082f},
{ 0.309565f, 0.828355f, -0.466901f},
{ -0.664026f, 0.737132f, -0.125321f},
{ -0.333550f, -0.886109f, 0.321799f},
{ 0.813928f, -0.580791f, 0.014249f},
{ -0.781443f, 0.619237f, -0.076762f},
{ 0.310934f, 0.770087f, -0.557033f},
{ -0.296404f, -0.574036f, 0.763300f},
{ 0.809630f, -0.504255f, 0.300375f},
{ -0.747944f, 0.358436f, 0.558662f},
{ -0.810039f, 0.309647f, -0.497952f},
{ -0.998648f, -0.044860f, -0.026252f},
{ -0.997993f, -0.001845f, -0.063304f},
{ -0.987315f, 0.107181f, -0.117137f},
{ -0.982892f, 0.122873f, -0.137206f},
{ -0.997562f, -0.050745f, -0.047909f},
{ -0.997562f, -0.050745f, -0.047909f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
39, 40, 43,
43, 40, 44,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: attack Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86