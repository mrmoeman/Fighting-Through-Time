package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phawalka {

static String TextureName = "walk";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.253206f, 7.360589f, 1.173861f,
 0.868666f, 9.024606f, 1.424158f,
 0.764446f, 8.644404f, 0.053701f,
 0.820442f, 7.734723f, -0.234415f,
 0.491709f, 9.093666f, 1.460433f,
 0.408353f, 9.045796f, 0.003662f,
 0.380701f, 7.570754f, -0.351455f,
 0.422931f, 7.339131f, 1.157894f,
 0.009626f, 7.285744f, 1.426775f,
 -0.042195f, 9.239279f, 1.533540f,
 -0.006456f, 9.199165f, 0.019515f,
 0.045245f, 7.575624f, -0.445671f,
 -0.030501f, 9.460724f, 0.779669f,
 0.479363f, 9.372818f, 0.775759f,
 0.872474f, 9.055737f, 1.223819f,
 0.921707f, 7.391585f, 0.911023f,
 0.416466f, 7.388919f, 0.833940f,
 0.021075f, 7.378927f, 0.824872f,
 0.428931f, 7.071154f, 1.313260f,
 0.765435f, 7.075198f, 1.349890f,
 0.425774f, 6.734570f, 1.270877f,
 0.774203f, 6.733272f, 1.344365f,
 1.217694f, 7.202786f, -0.245159f,
 0.771669f, 7.100410f, 0.796032f,
 0.029473f, 7.117305f, 0.747010f,
 0.053380f, 7.189217f, -0.374592f,
 0.700363f, 4.175922f, -0.069943f,
 0.684600f, 4.175922f, 0.626761f,
 0.033961f, 4.175930f, 0.798922f,
 0.033961f, 4.175930f, -0.475135f,
 0.971581f, 6.202756f, 0.962299f,
 0.997360f, 6.202756f, -0.191005f,
 0.033961f, 6.372237f, -0.346137f,
 0.033961f, 6.297878f, 1.200014f,
 1.950222f, 0.005413f, 0.409217f,
 0.573223f, 0.039109f, 2.211198f,
 -1.086917f, 0.012312f, 1.567115f,
 0.935577f, 0.008193f, -1.172078f,
 1.518149f, 6.675181f, 0.138850f,
 1.224877f, 7.032530f, 0.684167f,
 0.835442f, 6.620942f, 0.892708f,
 1.170337f, 6.209429f, 0.260005f,
 2.220263f, 5.422274f, 1.462494f,
 2.261688f, 5.780611f, 1.450174f,
 1.993894f, 5.865001f, 1.331477f,
 1.946691f, 5.450965f, 1.343302f,
 1.419269f, 5.298317f, 3.282725f,
 1.504134f, 6.042482f, 3.261374f,
 1.002977f, 6.186192f, 2.965930f,
 0.908779f, 5.351268f, 2.986605f,
 -0.702310f, 2.211025f, 1.650060f,
 0.352197f, 2.129984f, 2.075187f,
 1.033553f, 2.027948f, 0.843168f,
 0.193089f, 2.070270f, -0.034210f,
 -0.931279f, 9.010151f, 1.182449f,
 -0.882047f, 7.345998f, 0.869653f,
 -0.745860f, 7.695138f, -0.270339f,
 -0.749123f, 8.606152f, 0.018987f,
 -0.411830f, 9.025067f, -0.015150f,
 -0.534560f, 9.347193f, 0.752504f,
 -0.293501f, 7.553715f, -0.366918f,
 -0.374315f, 7.368934f, 0.815803f,
 -0.393093f, 7.318507f, 1.139178f,
 -1.223252f, 7.298001f, 1.117062f,
 -0.935087f, 8.979019f, 1.382788f,
 -0.564156f, 9.066981f, 1.436216f,
 -0.730272f, 7.037397f, 1.315585f,
 -0.392669f, 7.050389f, 1.294416f,
 -0.370584f, 6.714443f, 1.252612f,
 -0.721504f, 6.695470f, 1.310060f,
 -0.712388f, 7.062904f, 0.761995f,
 -1.114839f, 7.143836f, -0.298657f,
 -1.791533f, 3.506850f, -1.049069f,
 -2.411791f, 3.783929f, -0.732922f,
 -2.194359f, 3.903548f, -0.187476f,
 -1.497401f, 3.595934f, -0.542470f,
 -0.903658f, 6.202756f, 0.962299f,
 -0.929437f, 6.202756f, -0.191005f,
 -0.616678f, 4.175922f, 0.626761f,
 -0.632440f, 4.175922f, -0.069943f,
 -1.639822f, 2.266944f, 0.990445f,
 -1.000566f, 2.139437f, -0.281055f,
 -1.521025f, 6.752808f, 0.273552f,
 -0.899230f, 6.897429f, -0.048215f,
 -1.426850f, 6.183387f, 0.450878f,
 -0.706645f, 6.351438f, 0.083624f,
 -1.698950f, 5.573508f, -1.193542f,
 -1.400962f, 5.438090f, -1.345655f,
 -1.606299f, 5.605323f, -0.904877f,
 -1.261184f, 5.451217f, -1.080774f,
 -2.223022f, 0.003526f, 0.231440f,
 -0.907166f, -0.041342f, -1.647200f,
 1.341685f, 6.032472f, 2.442439f,
 1.721831f, 5.912677f, 2.610934f,
 1.663027f, 5.404001f, 2.628423f,
 1.274678f, 5.444730f, 2.459225f,
 -1.973856f, 4.440906f, -0.461376f,
 -1.483949f, 4.222145f, -0.711071f,
 -1.682370f, 4.203511f, -1.087081f,
 -2.105378f, 4.395743f, -0.871150f,
 1.390522f, -0.075614f, 2.447042f,
 1.005825f, -0.073061f, 3.120606f,
 2.174940f, 10.112185f, 2.094546f,
 0.755239f, 10.100804f, 3.745014f,
 1.621693f, 8.188275f, 2.547755f,
 1.236995f, 8.190828f, 3.221319f,
 0.764446f, 8.644404f, 0.053701f,
 0.764446f, 8.644404f, 0.053701f,
 0.872474f, 9.055737f, 1.223819f,
 0.820442f, 7.734723f, -0.234415f,
 0.380701f, 7.570754f, -0.351455f,
 0.764446f, 8.644404f, 0.053701f,
 0.764446f, 8.644404f, 0.053701f,
 0.380701f, 7.570754f, -0.351455f,
 0.380701f, 7.570754f, -0.351455f,
 -0.042195f, 9.239279f, 1.533540f,
 -0.042195f, 9.239279f, 1.533540f,
 0.491709f, 9.093666f, 1.460433f,
 0.491709f, 9.093666f, 1.460433f,
 0.872474f, 9.055737f, 1.223819f,
 0.872474f, 9.055737f, 1.223819f,
 0.491709f, 9.093666f, 1.460433f,
 0.868666f, 9.024606f, 1.424158f,
 1.253206f, 7.360589f, 1.173861f,
 0.868666f, 9.024606f, 1.424158f,
 0.868666f, 9.024606f, 1.424158f,
 0.416466f, 7.388919f, 0.833940f,
 0.422931f, 7.339131f, 1.157894f,
 0.422931f, 7.339131f, 1.157894f,
 0.009626f, 7.285744f, 1.426775f,
 0.422931f, 7.339131f, 1.157894f,
 0.428931f, 7.071154f, 1.313260f,
 0.428931f, 7.071154f, 1.313260f,
 0.425774f, 6.734570f, 1.270877f,
 0.425774f, 6.734570f, 1.270877f,
 0.425774f, 6.734570f, 1.270877f,
 0.774203f, 6.733272f, 1.344365f,
 1.253206f, 7.360589f, 1.173861f,
 0.765435f, 7.075198f, 1.349890f,
 0.765435f, 7.075198f, 1.349890f,
 0.774203f, 6.733272f, 1.344365f,
 0.416466f, 7.388919f, 0.833940f,
 0.771669f, 7.100410f, 0.796032f,
 0.380701f, 7.570754f, -0.351455f,
 0.380701f, 7.570754f, -0.351455f,
 0.771669f, 7.100410f, 0.796032f,
 1.217694f, 7.202786f, -0.245159f,
 0.029473f, 7.117305f, 0.747010f,
 0.416466f, 7.388919f, 0.833940f,
 0.416466f, 7.388919f, 0.833940f,
 0.029473f, 7.117305f, 0.747010f,
 0.771669f, 7.100410f, 0.796032f,
 0.045245f, 7.575624f, -0.445671f,
 0.380701f, 7.570754f, -0.351455f,
 0.053380f, 7.189217f, -0.374592f,
 0.053380f, 7.189217f, -0.374592f,
 0.380701f, 7.570754f, -0.351455f,
 1.217694f, 7.202786f, -0.245159f,
 0.971581f, 6.202756f, 0.962299f,
 0.684600f, 4.175922f, 0.626761f,
 0.700363f, 4.175922f, -0.069943f,
 0.684600f, 4.175922f, 0.626761f,
 0.684600f, 4.175922f, 0.626761f,
 0.352197f, 2.129984f, 2.075187f,
 0.684600f, 4.175922f, 0.626761f,
 0.033961f, 4.175930f, 0.798922f,
 0.033961f, 4.175930f, 0.798922f,
 0.033961f, 4.175930f, -0.475135f,
 0.700363f, 4.175922f, -0.069943f,
 0.700363f, 4.175922f, -0.069943f,
 0.771669f, 7.100410f, 0.796032f,
 1.217694f, 7.202786f, -0.245159f,
 1.217694f, 7.202786f, -0.245159f,
 0.771669f, 7.100410f, 0.796032f,
 0.771669f, 7.100410f, 0.796032f,
 0.971581f, 6.202756f, 0.962299f,
 0.997360f, 6.202756f, -0.191005f,
 0.971581f, 6.202756f, 0.962299f,
 0.971581f, 6.202756f, 0.962299f,
 0.835442f, 6.620942f, 0.892708f,
 1.217694f, 7.202786f, -0.245159f,
 0.997360f, 6.202756f, -0.191005f,
 0.997360f, 6.202756f, -0.191005f,
 0.835442f, 6.620942f, 0.892708f,
 1.993894f, 5.865001f, 1.331477f,
 1.993894f, 5.865001f, 1.331477f,
 1.993894f, 5.865001f, 1.331477f,
 1.341685f, 6.032472f, 2.442439f,
 1.341685f, 6.032472f, 2.442439f,
 0.352197f, 2.129984f, 2.075187f,
 0.573223f, 0.039109f, 2.211198f,
 0.573223f, 0.039109f, 2.211198f,
 -0.931279f, 9.010151f, 1.182449f,
 -0.749123f, 8.606152f, 0.018987f,
 -0.749123f, 8.606152f, 0.018987f,
 -0.745860f, 7.695138f, -0.270339f,
 -0.749123f, 8.606152f, 0.018987f,
 -0.293501f, 7.553715f, -0.366918f,
 -0.293501f, 7.553715f, -0.366918f,
 -0.749123f, 8.606152f, 0.018987f,
 -0.293501f, 7.553715f, -0.366918f,
 -0.564156f, 9.066981f, 1.436216f,
 -0.042195f, 9.239279f, 1.533540f,
 -0.042195f, 9.239279f, 1.533540f,
 -0.935087f, 8.979019f, 1.382788f,
 -0.564156f, 9.066981f, 1.436216f,
 -0.931279f, 9.010151f, 1.182449f,
 -0.931279f, 9.010151f, 1.182449f,
 -0.564156f, 9.066981f, 1.436216f,
 -0.935087f, 8.979019f, 1.382788f,
 -0.935087f, 8.979019f, 1.382788f,
 -1.223252f, 7.298001f, 1.117062f,
 0.009626f, 7.285744f, 1.426775f,
 -0.393093f, 7.318507f, 1.139178f,
 -0.393093f, 7.318507f, 1.139178f,
 -0.374315f, 7.368934f, 0.815803f,
 -0.393093f, 7.318507f, 1.139178f,
 -0.392669f, 7.050389f, 1.294416f,
 -0.392669f, 7.050389f, 1.294416f,
 -0.370584f, 6.714443f, 1.252612f,
 -0.370584f, 6.714443f, 1.252612f,
 -0.370584f, 6.714443f, 1.252612f,
 -0.721504f, 6.695470f, 1.310060f,
 -0.721504f, 6.695470f, 1.310060f,
 -0.730272f, 7.037397f, 1.315585f,
 -0.730272f, 7.037397f, 1.315585f,
 -1.223252f, 7.298001f, 1.117062f,
 -1.114839f, 7.143836f, -0.298657f,
 -0.712388f, 7.062904f, 0.761995f,
 -0.293501f, 7.553715f, -0.366918f,
 -0.293501f, 7.553715f, -0.366918f,
 -0.712388f, 7.062904f, 0.761995f,
 -0.374315f, 7.368934f, 0.815803f,
 -0.712388f, 7.062904f, 0.761995f,
 0.029473f, 7.117305f, 0.747010f,
 -0.374315f, 7.368934f, 0.815803f,
 -0.374315f, 7.368934f, 0.815803f,
 0.029473f, 7.117305f, 0.747010f,
 0.045245f, 7.575624f, -0.445671f,
 0.053380f, 7.189217f, -0.374592f,
 -0.293501f, 7.553715f, -0.366918f,
 -0.293501f, 7.553715f, -0.366918f,
 0.053380f, 7.189217f, -0.374592f,
 -1.114839f, 7.143836f, -0.298657f,
 -0.903658f, 6.202756f, 0.962299f,
 -0.616678f, 4.175922f, 0.626761f,
 -0.632440f, 4.175922f, -0.069943f,
 -0.616678f, 4.175922f, 0.626761f,
 -0.616678f, 4.175922f, 0.626761f,
 -1.639822f, 2.266944f, 0.990445f,
 -0.616678f, 4.175922f, 0.626761f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.175922f, 0.626761f,
 -0.702310f, 2.211025f, 1.650060f,
 0.033961f, 4.175930f, 0.798922f,
 0.033961f, 4.175930f, -0.475135f,
 0.193089f, 2.070270f, -0.034210f,
 -0.632440f, 4.175922f, -0.069943f,
 -0.632440f, 4.175922f, -0.069943f,
 0.193089f, 2.070270f, -0.034210f,
 -1.000566f, 2.139437f, -0.281055f,
 -1.114839f, 7.143836f, -0.298657f,
 -0.899230f, 6.897429f, -0.048215f,
 -0.712388f, 7.062904f, 0.761995f,
 -0.899230f, 6.897429f, -0.048215f,
 -1.521025f, 6.752808f, 0.273552f,
 -0.712388f, 7.062904f, 0.761995f,
 -0.712388f, 7.062904f, 0.761995f,
 -1.521025f, 6.752808f, 0.273552f,
 -0.903658f, 6.202756f, 0.962299f,
 -0.903658f, 6.202756f, 0.962299f,
 -1.521025f, 6.752808f, 0.273552f,
 -1.426850f, 6.183387f, 0.450878f,
 -0.903658f, 6.202756f, 0.962299f,
 -1.426850f, 6.183387f, 0.450878f,
 -0.929437f, 6.202756f, -0.191005f,
 -1.426850f, 6.183387f, 0.450878f,
 -0.706645f, 6.351438f, 0.083624f,
 -0.929437f, 6.202756f, -0.191005f,
 -0.706645f, 6.351438f, 0.083624f,
 -0.899230f, 6.897429f, -0.048215f,
 -0.929437f, 6.202756f, -0.191005f,
 -0.929437f, 6.202756f, -0.191005f,
 -0.899230f, 6.897429f, -0.048215f,
 -1.114839f, 7.143836f, -0.298657f,
 -1.698950f, 5.573508f, -1.193542f,
 -1.606299f, 5.605323f, -0.904877f,
 -1.521025f, 6.752808f, 0.273552f,
 -1.521025f, 6.752808f, 0.273552f,
 -1.606299f, 5.605323f, -0.904877f,
 -1.426850f, 6.183387f, 0.450878f,
 -1.973856f, 4.440906f, -0.461376f,
 -1.606299f, 5.605323f, -0.904877f,
 -2.105378f, 4.395743f, -0.871150f,
 -2.105378f, 4.395743f, -0.871150f,
 -1.606299f, 5.605323f, -0.904877f,
 -1.698950f, 5.573508f, -1.193542f,
 -0.907166f, -0.041342f, -1.647200f,
 -2.223022f, 0.003526f, 0.231440f,
 -1.000566f, 2.139437f, -0.281055f,
 -1.000566f, 2.139437f, -0.281055f,
 -2.223022f, 0.003526f, 0.231440f,
 -1.639822f, 2.266944f, 0.990445f,
 1.663027f, 5.404001f, 2.628423f,
 1.504134f, 6.042482f, 3.261374f,
 1.419269f, 5.298317f, 3.282725f,
 1.274678f, 5.444730f, 2.459225f,
 1.663027f, 5.404001f, 2.628423f,
 0.908779f, 5.351268f, 2.986605f,
 0.908779f, 5.351268f, 2.986605f,
 1.663027f, 5.404001f, 2.628423f,
 1.419269f, 5.298317f, 3.282725f,
 1.341685f, 6.032472f, 2.442439f,
 1.274678f, 5.444730f, 2.459225f,
 1.002977f, 6.186192f, 2.965930f,
 1.002977f, 6.186192f, 2.965930f,
 1.274678f, 5.444730f, 2.459225f,
 0.908779f, 5.351268f, 2.986605f,
 -1.483949f, 4.222145f, -0.711071f,
 -2.194359f, 3.903548f, -0.187476f,
 -1.497401f, 3.595934f, -0.542470f,
 -1.483949f, 4.222145f, -0.711071f,
 -1.497401f, 3.595934f, -0.542470f,
 -1.682370f, 4.203511f, -1.087081f,
 -1.682370f, 4.203511f, -1.087081f,
 -1.497401f, 3.595934f, -0.542470f,
 -1.791533f, 3.506850f, -1.049069f,
 -2.105378f, 4.395743f, -0.871150f,
 -1.682370f, 4.203511f, -1.087081f,
 -2.411791f, 3.783929f, -0.732922f,
 -2.411791f, 3.783929f, -0.732922f,
 -1.682370f, 4.203511f, -1.087081f,
 -1.791533f, 3.506850f, -1.049069f,
 -2.105378f, 4.395743f, -0.871150f,
 -2.411791f, 3.783929f, -0.732922f,
 -1.973856f, 4.440906f, -0.461376f,
 1.390522f, -0.075614f, 2.447042f,
 1.005825f, -0.073061f, 3.120606f,
 1.621693f, 8.188275f, 2.547755f,
 1.621693f, 8.188275f, 2.547755f,
 1.005825f, -0.073061f, 3.120606f,
 1.236995f, 8.190828f, 3.221319f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.403714f, 0.584799f,
 0.340575f, 0.584800f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.177173f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.007565f, 0.949583f,
 0.007565f, 0.949583f,
 0.049236f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.953532f, 0.292566f, -0.071989f},
{ 0.844121f, -0.238031f, -0.480418f},
{ 0.908636f, 0.200308f, -0.366411f},
{ 0.873743f, -0.221202f, -0.433177f},
{ 0.369051f, 0.508449f, -0.777998f},
{ 0.531414f, 0.838140f, -0.122963f},
{ 0.498319f, 0.268719f, -0.824299f},
{ 0.546102f, -0.807573f, -0.222709f},
{ 0.500784f, -0.114188f, 0.858007f},
{ 0.395000f, -0.056086f, 0.916968f},
{ 0.172130f, -0.232813f, 0.957167f},
{ 0.211909f, 0.189953f, 0.958651f},
{ -0.029562f, 0.306235f, 0.951497f},
{ -0.012179f, -0.363470f, 0.931526f},
{ 0.002312f, 0.620307f, -0.784356f},
{ -0.024799f, 0.999490f, -0.020102f},
{ 0.018690f, 0.156641f, -0.987479f},
{ 0.427706f, 0.221670f, 0.876316f},
{ -0.778729f, 0.129450f, 0.613860f},
{ 0.414286f, -0.787301f, -0.456644f},
{ -0.183220f, -0.765979f, -0.616204f},
{ 0.016942f, -0.950872f, 0.309120f},
{ 0.324551f, 0.676157f, 0.661421f},
{ 0.532143f, 0.546867f, -0.646343f},
{ -0.030579f, 0.362688f, 0.931409f},
{ 0.033841f, -0.053182f, -0.998011f},
{ 0.312141f, -0.582845f, 0.750240f},
{ 0.340664f, 0.438270f, 0.831786f},
{ -0.905653f, -0.400604f, 0.138957f},
{ -0.720842f, 0.658846f, 0.215196f},
{ -0.002493f, -0.028338f, 0.999595f},
{ 0.744264f, -0.104001f, 0.659739f},
{ 0.665978f, -0.115071f, -0.737043f},
{ 0.005627f, 0.018151f, -0.999819f},
{ 0.850064f, 0.108134f, 0.515460f},
{ 0.828356f, -0.103599f, -0.550540f},
{ -0.011860f, -0.132667f, -0.991090f},
{ -0.027487f, 0.195612f, 0.980296f},
{ 0.968562f, 0.233907f, 0.084704f},
{ 0.372806f, 0.251453f, 0.893189f},
{ -0.433524f, 0.234128f, 0.870196f},
{ 0.475079f, 0.308709f, -0.824014f},
{ 0.522337f, 0.756936f, 0.392699f},
{ 0.900487f, 0.210409f, -0.380592f},
{ -0.285419f, -0.179063f, 0.941527f},
{ 0.092011f, -0.955491f, -0.280306f},
{ 0.942627f, 0.325417f, -0.074552f},
{ 0.778697f, -0.611977f, -0.138257f},
{ -0.795901f, 0.302201f, 0.524611f},
{ -0.513900f, -0.667632f, -0.538677f},
{ 0.820408f, 0.505701f, 0.266829f},
{ 0.684122f, -0.689025f, 0.239211f},
{ -0.514467f, 0.719795f, -0.466067f},
{ -0.733306f, -0.460644f, -0.500069f},
{ 0.372006f, 0.155497f, 0.915113f},
{ -0.569859f, 0.012133f, 0.821653f},
{ 0.894507f, 0.446659f, 0.018776f},
{ 0.474780f, 0.550063f, -0.687033f},
{ -0.962785f, 0.244136f, -0.115942f},
{ -0.899847f, 0.154602f, -0.407890f},
{ -0.808128f, -0.279789f, -0.518312f},
{ -0.840695f, -0.264532f, -0.472499f},
{ -0.566859f, 0.810384f, -0.148153f},
{ -0.358217f, 0.490069f, -0.794678f},
{ -0.472958f, 0.244171f, -0.846576f},
{ -0.493855f, -0.833855f, -0.246562f},
{ -0.264929f, 0.177902f, 0.947715f},
{ -0.433261f, -0.077019f, 0.897972f},
{ -0.203831f, -0.242315f, 0.948544f},
{ -0.533163f, -0.140320f, 0.834295f},
{ -0.478052f, 0.198779f, 0.855543f},
{ -0.352651f, -0.806684f, -0.474235f},
{ 0.742258f, 0.167889f, 0.648742f},
{ 0.249699f, -0.755037f, -0.606275f},
{ -0.585340f, 0.552863f, -0.593060f},
{ -0.462536f, 0.621843f, 0.631959f},
{ 0.007288f, -0.722679f, -0.691145f},
{ 0.621806f, -0.576682f, 0.529901f},
{ -0.857941f, -0.472145f, -0.202526f},
{ -0.334390f, -0.252441f, 0.907996f},
{ -0.706284f, -0.127909f, 0.696277f},
{ -0.709341f, -0.099677f, -0.697782f},
{ -0.788487f, -0.069930f, -0.611062f},
{ -0.864819f, 0.181461f, 0.468146f},
{ -0.494310f, 0.404261f, -0.769565f},
{ -0.916389f, 0.330167f, 0.226322f},
{ -0.499217f, 0.763821f, -0.409097f},
{ -0.786422f, 0.616745f, -0.034144f},
{ -0.465718f, -0.773041f, 0.430714f},
{ 0.875588f, -0.476712f, -0.078049f},
{ 0.178911f, 0.202504f, -0.962800f},
{ -0.557027f, 0.525235f, -0.643311f},
{ -0.402933f, -0.453281f, 0.795098f},
{ 0.948553f, -0.241640f, 0.204592f},
{ -0.852540f, 0.220908f, -0.473682f},
{ 0.170846f, -0.169551f, -0.970600f},
{ -0.162421f, 0.440539f, 0.882918f},
{ 0.885460f, 0.029763f, 0.463762f},
{ -0.963502f, 0.243283f, -0.111701f},
{ -0.313818f, 0.494854f, -0.810332f},
{ -0.867056f, 0.052770f, -0.495408f},
{ -0.841422f, 0.028088f, -0.539649f},
{ -0.771317f, 0.003292f, -0.636443f},
{ -0.758017f, -0.012392f, -0.652117f},
{ -0.867904f, 0.030321f, -0.495806f},
{ -0.867904f, 0.030321f, -0.495807f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 165, 51,
51, 166, 50,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
39, 173, 40,
174, 175, 40,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
183, 41, 184,
185, 41, 45,
41, 38, 45,
45, 38, 42,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
51, 50, 35,
35, 50, 36,
189, 190, 52,
52, 191, 34,
52, 34, 53,
53, 34, 37,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
25, 32, 71,
71, 32, 77,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
85, 89, 83,
83, 89, 87,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
37, 91, 53,
53, 91, 81,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: walk Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86