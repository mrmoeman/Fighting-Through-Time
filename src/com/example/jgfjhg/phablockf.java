package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class phablockf {

static String TextureName = "block";

static int Vertices = 341;

static int VertTexts = 191;

static int Normals = 106;

static int Faces = 196;

static int FacesB = 30;

static int SmoothGroups = 2;

static float VertArray[] = new float[]{
 1.272911f, 7.876482f, 0.589761f,
 0.936363f, 9.569269f, 0.615777f,
 0.791186f, 9.007727f, -0.686974f,
 0.817567f, 8.065906f, -0.848044f,
 0.562201f, 9.653245f, 0.649435f,
 0.444292f, 9.408328f, -0.784976f,
 0.371258f, 7.899883f, -0.932900f,
 0.442211f, 7.876433f, 0.592872f,
 0.033961f, 7.872106f, 0.874443f,
 0.033961f, 9.822493f, 0.712039f,
 0.033961f, 9.574045f, -0.782429f,
 0.033961f, 7.901228f, -1.020420f,
 0.033961f, 9.937996f, -0.065235f,
 0.541219f, 9.836057f, -0.066802f,
 0.936363f, 9.572500f, 0.413025f,
 0.936363f, 7.880449f, 0.331583f,
 0.429582f, 7.881467f, 0.265333f,
 0.033961f, 7.881467f, 0.265334f,
 0.445001f, 7.632245f, 0.783530f,
 0.782250f, 7.631795f, 0.812776f,
 0.432372f, 7.293252f, 0.787990f,
 0.782250f, 7.292234f, 0.854241f,
 1.200907f, 7.526547f, -0.793041f,
 0.776421f, 7.580595f, 0.260709f,
 0.033961f, 7.611506f, 0.224109f,
 0.033961f, 7.528153f, -0.896956f,
 0.700363f, 4.599669f, -0.412641f,
 0.684600f, 4.643429f, 0.282687f,
 0.033961f, 4.654251f, 0.454508f,
 0.033961f, 4.574227f, -0.817033f,
 0.971581f, 6.687337f, 0.490256f,
 0.997360f, 6.614897f, -0.660770f,
 0.033961f, 6.774299f, -0.826241f,
 0.033961f, 6.797202f, 0.721527f,
 1.813547f, -0.190499f, -0.949045f,
 1.773622f, -0.184019f, 1.404364f,
 0.041571f, -0.187154f, 1.904094f,
 0.028160f, -0.174387f, -1.633859f,
 1.470976f, 7.173657f, -0.530752f,
 1.372629f, 7.384706f, 0.145166f,
 1.093302f, 6.901309f, 0.375075f,
 1.202266f, 6.658893f, -0.406701f,
 2.622544f, 5.790017f, 0.178572f,
 2.612027f, 6.140061f, 0.265929f,
 2.311054f, 6.187212f, 0.276682f,
 2.322873f, 5.783500f, 0.173384f,
 2.611424f, 5.042960f, 2.025728f,
 2.590164f, 5.768600f, 2.211295f,
 2.000220f, 5.861426f, 2.161825f,
 2.023731f, 5.048326f, 1.950369f,
 0.041541f, 2.359046f, 1.145118f,
 1.174099f, 2.345144f, 1.006341f,
 1.198157f, 2.210570f, -0.447047f,
 0.028218f, 2.182787f, -0.830274f,
 -0.868441f, 9.572500f, 0.413025f,
 -0.868441f, 7.880449f, 0.331583f,
 -0.749646f, 8.065906f, -0.848044f,
 -0.723264f, 9.007727f, -0.686974f,
 -0.376369f, 9.408328f, -0.784976f,
 -0.473295f, 9.836057f, -0.066802f,
 -0.303336f, 7.899883f, -0.932901f,
 -0.361660f, 7.881467f, 0.265333f,
 -0.374288f, 7.876433f, 0.592873f,
 -1.204989f, 7.876482f, 0.589761f,
 -0.868441f, 9.569269f, 0.615777f,
 -0.494279f, 9.653245f, 0.649435f,
 -0.714328f, 7.631795f, 0.812776f,
 -0.377078f, 7.632245f, 0.783530f,
 -0.364450f, 7.293252f, 0.787990f,
 -0.714328f, 7.292234f, 0.854241f,
 -0.708500f, 7.580595f, 0.260709f,
 -1.132985f, 7.526547f, -0.793041f,
 -1.503770f, 3.678460f, 1.509269f,
 -2.119230f, 4.059711f, 1.702394f,
 -1.867996f, 4.469530f, 2.060201f,
 -1.176801f, 4.044373f, 1.841368f,
 -0.903658f, 6.687337f, 0.490256f,
 -0.929437f, 6.614897f, -0.660770f,
 -0.616678f, 4.643429f, 0.282687f,
 -0.632440f, 4.599669f, -0.412641f,
 -1.092937f, 2.344686f, 1.021037f,
 -1.136655f, 2.210035f, -0.431480f,
 -1.524387f, 7.108360f, -0.206151f,
 -0.920712f, 6.896828f, -0.525385f,
 -1.384933f, 7.013597f, 0.373613f,
 -0.685665f, 6.773690f, 0.005808f,
 -1.643245f, 5.321727f, 0.251994f,
 -1.347340f, 5.136523f, 0.160276f,
 -1.529164f, 5.511537f, 0.461473f,
 -1.186724f, 5.299463f, 0.353991f,
 -1.694298f, -0.185454f, 1.414616f,
 -1.752306f, -0.189495f, -0.938728f,
 2.125453f, 5.922774f, 1.534968f,
 2.552699f, 5.855842f, 1.519704f,
 2.567627f, 5.358937f, 1.395697f,
 2.142231f, 5.349686f, 1.388332f,
 -1.730738f, 4.773706f, 1.511536f,
 -1.244628f, 4.472657f, 1.358959f,
 -1.472629f, 4.241356f, 1.083974f,
 -1.892682f, 4.504263f, 1.214171f,
 2.188187f, 0.046889f, 1.048532f,
 2.180725f, 0.005946f, 1.823100f,
 2.552233f, 10.263743f, 0.929544f,
 2.117752f, 10.126726f, 3.058435f,
 2.318345f, 8.302009f, 1.486142f,
 2.310884f, 8.261066f, 2.260710f,
 0.791186f, 9.007727f, -0.686974f,
 0.791186f, 9.007727f, -0.686974f,
 0.936363f, 9.572500f, 0.413025f,
 0.817567f, 8.065906f, -0.848044f,
 0.371258f, 7.899883f, -0.932900f,
 0.791186f, 9.007727f, -0.686974f,
 0.791186f, 9.007727f, -0.686974f,
 0.371258f, 7.899883f, -0.932900f,
 0.371258f, 7.899883f, -0.932900f,
 0.033961f, 9.822493f, 0.712039f,
 0.033961f, 9.822493f, 0.712039f,
 0.562201f, 9.653245f, 0.649435f,
 0.562201f, 9.653245f, 0.649435f,
 0.936363f, 9.572500f, 0.413025f,
 0.936363f, 9.572500f, 0.413025f,
 0.562201f, 9.653245f, 0.649435f,
 0.936363f, 9.569269f, 0.615777f,
 1.272911f, 7.876482f, 0.589761f,
 0.936363f, 9.569269f, 0.615777f,
 0.936363f, 9.569269f, 0.615777f,
 0.429582f, 7.881467f, 0.265333f,
 0.442211f, 7.876433f, 0.592872f,
 0.442211f, 7.876433f, 0.592872f,
 0.033961f, 7.872106f, 0.874443f,
 0.442211f, 7.876433f, 0.592872f,
 0.445001f, 7.632245f, 0.783530f,
 0.445001f, 7.632245f, 0.783530f,
 0.432372f, 7.293252f, 0.787990f,
 0.432372f, 7.293252f, 0.787990f,
 0.432372f, 7.293252f, 0.787990f,
 0.782250f, 7.292234f, 0.854241f,
 1.272911f, 7.876482f, 0.589761f,
 0.782250f, 7.631795f, 0.812776f,
 0.782250f, 7.631795f, 0.812776f,
 0.782250f, 7.292234f, 0.854241f,
 0.429582f, 7.881467f, 0.265333f,
 0.776421f, 7.580595f, 0.260709f,
 0.371258f, 7.899883f, -0.932900f,
 0.371258f, 7.899883f, -0.932900f,
 0.776421f, 7.580595f, 0.260709f,
 1.200907f, 7.526547f, -0.793041f,
 0.033961f, 7.611506f, 0.224109f,
 0.429582f, 7.881467f, 0.265333f,
 0.429582f, 7.881467f, 0.265333f,
 0.033961f, 7.611506f, 0.224109f,
 0.776421f, 7.580595f, 0.260709f,
 0.033961f, 7.901228f, -1.020420f,
 0.371258f, 7.899883f, -0.932900f,
 0.033961f, 7.528153f, -0.896956f,
 0.033961f, 7.528153f, -0.896956f,
 0.371258f, 7.899883f, -0.932900f,
 1.200907f, 7.526547f, -0.793041f,
 0.971581f, 6.687337f, 0.490256f,
 0.684600f, 4.643429f, 0.282687f,
 0.700363f, 4.599669f, -0.412641f,
 0.684600f, 4.643429f, 0.282687f,
 0.684600f, 4.643429f, 0.282687f,
 1.174099f, 2.345144f, 1.006341f,
 0.033961f, 4.654251f, 0.454508f,
 0.684600f, 4.643429f, 0.282687f,
 0.684600f, 4.643429f, 0.282687f,
 0.033961f, 4.574227f, -0.817033f,
 0.700363f, 4.599669f, -0.412641f,
 0.700363f, 4.599669f, -0.412641f,
 0.776421f, 7.580595f, 0.260709f,
 1.200907f, 7.526547f, -0.793041f,
 1.200907f, 7.526547f, -0.793041f,
 0.971581f, 6.687337f, 0.490256f,
 0.776421f, 7.580595f, 0.260709f,
 0.776421f, 7.580595f, 0.260709f,
 0.997360f, 6.614897f, -0.660770f,
 0.971581f, 6.687337f, 0.490256f,
 0.971581f, 6.687337f, 0.490256f,
 1.093302f, 6.901309f, 0.375075f,
 1.200907f, 7.526547f, -0.793041f,
 0.997360f, 6.614897f, -0.660770f,
 0.997360f, 6.614897f, -0.660770f,
 1.093302f, 6.901309f, 0.375075f,
 2.311054f, 6.187212f, 0.276682f,
 2.311054f, 6.187212f, 0.276682f,
 2.311054f, 6.187212f, 0.276682f,
 2.125453f, 5.922774f, 1.534968f,
 2.125453f, 5.922774f, 1.534968f,
 1.174099f, 2.345144f, 1.006341f,
 1.773622f, -0.184019f, 1.404364f,
 1.773622f, -0.184019f, 1.404364f,
 -0.868441f, 9.572500f, 0.413025f,
 -0.723264f, 9.007727f, -0.686974f,
 -0.723264f, 9.007727f, -0.686974f,
 -0.749646f, 8.065906f, -0.848044f,
 -0.723264f, 9.007727f, -0.686974f,
 -0.303336f, 7.899883f, -0.932901f,
 -0.303336f, 7.899883f, -0.932901f,
 -0.723264f, 9.007727f, -0.686974f,
 -0.303336f, 7.899883f, -0.932901f,
 -0.494279f, 9.653245f, 0.649435f,
 0.033961f, 9.822493f, 0.712039f,
 0.033961f, 9.822493f, 0.712039f,
 -0.868441f, 9.569269f, 0.615777f,
 -0.494279f, 9.653245f, 0.649435f,
 -0.868441f, 9.572500f, 0.413025f,
 -0.868441f, 9.572500f, 0.413025f,
 -0.494279f, 9.653245f, 0.649435f,
 -0.868441f, 9.569269f, 0.615777f,
 -0.868441f, 9.569269f, 0.615777f,
 -1.204989f, 7.876482f, 0.589761f,
 0.033961f, 7.872106f, 0.874443f,
 -0.374288f, 7.876433f, 0.592873f,
 -0.374288f, 7.876433f, 0.592873f,
 -0.361660f, 7.881467f, 0.265333f,
 -0.374288f, 7.876433f, 0.592873f,
 -0.377078f, 7.632245f, 0.783530f,
 -0.377078f, 7.632245f, 0.783530f,
 -0.364450f, 7.293252f, 0.787990f,
 -0.364450f, 7.293252f, 0.787990f,
 -0.364450f, 7.293252f, 0.787990f,
 -0.714328f, 7.292234f, 0.854241f,
 -0.714328f, 7.292234f, 0.854241f,
 -0.714328f, 7.631795f, 0.812776f,
 -0.714328f, 7.631795f, 0.812776f,
 -1.204989f, 7.876482f, 0.589761f,
 -1.132985f, 7.526547f, -0.793041f,
 -0.708500f, 7.580595f, 0.260709f,
 -0.303336f, 7.899883f, -0.932901f,
 -0.303336f, 7.899883f, -0.932901f,
 -0.708500f, 7.580595f, 0.260709f,
 -0.361660f, 7.881467f, 0.265333f,
 -0.708500f, 7.580595f, 0.260709f,
 0.033961f, 7.611506f, 0.224109f,
 -0.361660f, 7.881467f, 0.265333f,
 -0.361660f, 7.881467f, 0.265333f,
 0.033961f, 7.611506f, 0.224109f,
 0.033961f, 7.901228f, -1.020420f,
 0.033961f, 7.528153f, -0.896956f,
 -0.303336f, 7.899883f, -0.932901f,
 -0.303336f, 7.899883f, -0.932901f,
 0.033961f, 7.528153f, -0.896956f,
 -1.132985f, 7.526547f, -0.793041f,
 -0.903658f, 6.687337f, 0.490256f,
 -0.616678f, 4.643429f, 0.282687f,
 -0.632440f, 4.599669f, -0.412641f,
 -0.616678f, 4.643429f, 0.282687f,
 -0.616678f, 4.643429f, 0.282687f,
 -1.092937f, 2.344686f, 1.021037f,
 -0.616678f, 4.643429f, 0.282687f,};

static float VertArrayB[] = new float[]{
 -0.616678f, 4.643429f, 0.282687f,
 0.041541f, 2.359046f, 1.145118f,
 0.033961f, 4.654251f, 0.454508f,
 0.033961f, 4.574227f, -0.817033f,
 0.028218f, 2.182787f, -0.830274f,
 -0.632440f, 4.599669f, -0.412641f,
 -0.632440f, 4.599669f, -0.412641f,
 0.028218f, 2.182787f, -0.830274f,
 -1.136655f, 2.210035f, -0.431480f,
 -1.132985f, 7.526547f, -0.793041f,
 -0.920712f, 6.896828f, -0.525385f,
 -0.708500f, 7.580595f, 0.260709f,
 -0.920712f, 6.896828f, -0.525385f,
 -1.524387f, 7.108360f, -0.206151f,
 -0.708500f, 7.580595f, 0.260709f,
 -1.524387f, 7.108360f, -0.206151f,
 -1.384933f, 7.013597f, 0.373613f,
 -0.708500f, 7.580595f, 0.260709f,
 -0.708500f, 7.580595f, 0.260709f,
 -1.384933f, 7.013597f, 0.373613f,
 -0.903658f, 6.687337f, 0.490256f,
 -0.929437f, 6.614897f, -0.660770f,
 -0.903658f, 6.687337f, 0.490256f,
 -0.685665f, 6.773690f, 0.005808f,
 -0.903658f, 6.687337f, 0.490256f,
 -1.384933f, 7.013597f, 0.373613f,
 -0.685665f, 6.773690f, 0.005808f,
 -0.685665f, 6.773690f, 0.005808f,
 -0.920712f, 6.896828f, -0.525385f,
 -0.929437f, 6.614897f, -0.660770f,
 -0.929437f, 6.614897f, -0.660770f,
 -0.920712f, 6.896828f, -0.525385f,
 -1.132985f, 7.526547f, -0.793041f,
 -1.524387f, 7.108360f, -0.206151f,
 -1.643245f, 5.321727f, 0.251994f,
 -1.384933f, 7.013597f, 0.373613f,
 -1.384933f, 7.013597f, 0.373613f,
 -1.643245f, 5.321727f, 0.251994f,
 -1.529164f, 5.511537f, 0.461473f,
 -1.730738f, 4.773706f, 1.511536f,
 -1.529164f, 5.511537f, 0.461473f,
 -1.892682f, 4.504263f, 1.214171f,
 -1.892682f, 4.504263f, 1.214171f,
 -1.529164f, 5.511537f, 0.461473f,
 -1.643245f, 5.321727f, 0.251994f,
 -1.752306f, -0.189495f, -0.938728f,
 -1.694298f, -0.185454f, 1.414616f,
 -1.136655f, 2.210035f, -0.431480f,
 -1.136655f, 2.210035f, -0.431480f,
 -1.694298f, -0.185454f, 1.414616f,
 -1.092937f, 2.344686f, 1.021037f,
 2.567627f, 5.358937f, 1.395697f,
 2.590164f, 5.768600f, 2.211295f,
 2.611424f, 5.042960f, 2.025728f,
 2.142231f, 5.349686f, 1.388332f,
 2.567627f, 5.358937f, 1.395697f,
 2.023731f, 5.048326f, 1.950369f,
 2.023731f, 5.048326f, 1.950369f,
 2.567627f, 5.358937f, 1.395697f,
 2.611424f, 5.042960f, 2.025728f,
 2.125453f, 5.922774f, 1.534968f,
 2.142231f, 5.349686f, 1.388332f,
 2.000220f, 5.861426f, 2.161825f,
 2.000220f, 5.861426f, 2.161825f,
 2.142231f, 5.349686f, 1.388332f,
 2.023731f, 5.048326f, 1.950369f,
 -1.244628f, 4.472657f, 1.358959f,
 -1.867996f, 4.469530f, 2.060201f,
 -1.176801f, 4.044373f, 1.841368f,
 -1.244628f, 4.472657f, 1.358959f,
 -1.176801f, 4.044373f, 1.841368f,
 -1.472629f, 4.241356f, 1.083974f,
 -1.472629f, 4.241356f, 1.083974f,
 -1.176801f, 4.044373f, 1.841368f,
 -1.503770f, 3.678460f, 1.509269f,
 -1.892682f, 4.504263f, 1.214171f,
 -1.472629f, 4.241356f, 1.083974f,
 -2.119230f, 4.059711f, 1.702394f,
 -2.119230f, 4.059711f, 1.702394f,
 -1.472629f, 4.241356f, 1.083974f,
 -1.503770f, 3.678460f, 1.509269f,
 -1.892682f, 4.504263f, 1.214171f,
 -2.119230f, 4.059711f, 1.702394f,
 -1.730738f, 4.773706f, 1.511536f,
 2.188187f, 0.046889f, 1.048532f,
 2.180725f, 0.005946f, 1.823100f,
 2.318345f, 8.302009f, 1.486142f,
 2.318345f, 8.302009f, 1.486142f,
 2.180725f, 0.005946f, 1.823100f,
 2.310884f, 8.261066f, 2.260710f,};

static float[] TextArray = new float[]{
 0.531280f, 0.707589f,
 0.484323f, 0.943805f,
 0.906579f, 0.606627f,
 0.908324f, 0.508558f,
 0.432117f, 0.970430f,
 0.119964f, 0.206787f,
 0.912807f, 0.483165f,
 0.415376f, 0.707589f,
 0.358414f, 0.707589f,
 0.358414f, 0.994176f,
 0.086285f, 0.199997f,
 0.083540f, 0.350365f,
 0.085479f, 0.151978f,
 0.126438f, 0.150934f,
 0.821509f, 0.628783f,
 0.826742f, 0.493028f,
 0.848890f, 0.463714f,
 0.949638f, 0.757239f,
 0.415765f, 0.673932f,
 0.462820f, 0.673932f,
 0.414003f, 0.626649f,
 0.462820f, 0.626649f,
 0.506471f, 0.680776f,
 0.888747f, 0.982432f,
 0.804662f, 0.985869f,
 0.608704f, 0.680777f,
 0.550265f, 0.427741f,
 0.490451f, 0.415698f,
 0.804662f, 0.646870f,
 0.608704f, 0.427351f,
 0.910849f, 0.876410f,
 0.524361f, 0.604524f,
 0.608704f, 0.619762f,
 0.804662f, 0.887183f,
 0.637059f, 0.094341f,
 0.508844f, 0.103073f,
 0.340575f, 0.103073f,
 0.745360f, 0.093609f,
 0.088712f, 0.403165f,
 0.134506f, 0.403165f,
 0.177173f, 0.403165f,
 0.049042f, 0.403165f,
 0.088712f, 0.521627f,
 0.134506f, 0.521627f,
 0.177173f, 0.521627f,
 0.049042f, 0.521627f,
 0.134506f, 0.697341f,
 0.134506f, 0.642886f,
 0.177173f, 0.642886f,
 0.177173f, 0.697341f,
 0.340574f, 0.348630f,
 0.450573f, 0.348630f,
 0.673596f, 0.248044f,
 0.745360f, 0.248156f,
 0.966035f, 0.484735f,
 0.960563f, 0.348968f,
 0.880548f, 0.364100f,
 0.880965f, 0.462579f,
 0.052854f, 0.206348f,
 0.044331f, 0.151978f,
 0.878018f, 0.339363f,
 0.938475f, 0.320998f,
 0.301453f, 0.707589f,
 0.185549f, 0.707589f,
 0.232506f, 0.943805f,
 0.284711f, 0.970430f,
 0.254009f, 0.673932f,
 0.301064f, 0.673932f,
 0.302825f, 0.626649f,
 0.254009f, 0.626649f,
 0.720578f, 0.982432f,
 0.710936f, 0.680776f,
 0.007565f, 0.655407f,
 0.007565f, 0.709862f,
 0.049236f, 0.709862f,
 0.049236f, 0.655407f,
 0.698476f, 0.876410f,
 0.693047f, 0.604524f,
 0.726955f, 0.415697f,
 0.667142f, 0.427741f,
 0.230576f, 0.348630f,
 0.817124f, 0.248044f,
 0.176724f, 0.949583f,
 0.137216f, 0.949583f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.176724f, 0.831121f,
 0.137216f, 0.831121f,
 0.049236f, 0.831121f,
 0.091983f, 0.831121f,
 0.172305f, 0.103073f,
 0.853660f, 0.094340f,
 0.177173f, 0.602466f,
 0.134506f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.602466f,
 0.049236f, 0.750282f,
 0.091983f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.750282f,
 0.493691f, 0.982654f,
 0.694605f, 0.981109f,
 0.557045f, 0.804122f,
 0.628631f, 0.805010f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.158683f, 0.115418f,
 0.158683f, 0.338207f,
 0.110895f, 0.350972f,
 0.158683f, 0.223498f,
 0.158683f, 0.223498f,
 0.110895f, 0.350972f,
 0.110895f, 0.350972f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.128331f, 0.096280f,
 0.128331f, 0.096280f,
 0.158683f, 0.115418f,
 0.158683f, 0.115418f,
 0.128331f, 0.096280f,
 0.158683f, 0.096281f,
 0.805700f, 0.496787f,
 0.805700f, 0.628774f,
 0.805700f, 0.628774f,
 0.949638f, 0.718017f,
 0.972326f, 0.722391f,
 0.972326f, 0.722391f,
 0.972326f, 0.753767f,
 0.846690f, 0.444907f,
 0.822498f, 0.435909f,
 0.822498f, 0.435909f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.804583f, 0.447868f,
 0.792244f, 0.460353f,
 0.805700f, 0.496787f,
 0.788023f, 0.477981f,
 0.788023f, 0.477981f,
 0.792244f, 0.460353f,
 0.925303f, 0.838421f,
 0.933270f, 0.825273f,
 0.965643f, 0.877787f,
 0.965643f, 0.877787f,
 0.933270f, 0.825273f,
 0.986675f, 0.823739f,
 0.921005f, 0.754538f,
 0.949638f, 0.718017f,
 0.949638f, 0.718017f,
 0.921005f, 0.754538f,
 0.917794f, 0.675968f,
 0.961898f, 0.902588f,
 0.965643f, 0.877787f,
 0.990420f, 0.903796f,
 0.990420f, 0.903796f,
 0.965643f, 0.877787f,
 0.986675f, 0.823739f,
 0.425500f, 0.583551f,
 0.878348f, 0.646869f,
 0.704988f, 0.396285f,
 0.666165f, 0.412442f,
 0.666165f, 0.412442f,
 0.590716f, 0.283014f,
 0.340575f, 0.584800f,
 0.403714f, 0.584799f,
 0.403714f, 0.584799f,
 0.745360f, 0.396794f,
 0.704988f, 0.396285f,
 0.704988f, 0.396285f,
 0.134506f, 0.357626f,
 0.088712f, 0.357626f,
 0.088712f, 0.357626f,
 0.177173f, 0.357626f,
 0.134506f, 0.357626f,
 0.134506f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.357626f,
 0.008494f, 0.403165f,
 0.088712f, 0.357626f,
 0.049042f, 0.357626f,
 0.049042f, 0.357626f,
 0.008494f, 0.403165f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.521627f,
 0.008494f, 0.602466f,
 0.008494f, 0.602466f,
 0.590716f, 0.283014f,
 0.501906f, 0.152852f,
 0.501906f, 0.152852f,
 0.012277f, 0.112730f,
 0.012276f, 0.217993f,
 0.012276f, 0.217993f,
 0.012276f, 0.335387f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.056185f, 0.349758f,
 0.012276f, 0.217993f,
 0.056185f, 0.349758f,
 0.042629f, 0.096280f,
 0.085479f, 0.096280f,
 0.085479f, 0.096280f,
 0.012276f, 0.096281f,
 0.042629f, 0.096280f,
 0.012277f, 0.112730f,
 0.012277f, 0.112730f,
 0.042629f, 0.096280f,
 0.981844f, 0.484725f,
 0.981844f, 0.484725f,
 0.981844f, 0.352739f,
 0.972326f, 0.753767f,
 0.972326f, 0.785142f,
 0.972326f, 0.785142f,
 0.949638f, 0.785658f,
 0.940336f, 0.302313f,
 0.964527f, 0.293316f,
 0.964527f, 0.293316f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.982102f, 0.305398f,
 0.994453f, 0.316738f,
 0.994453f, 0.316738f,
 0.999521f, 0.333933f,
 0.999521f, 0.333933f,
 0.981844f, 0.352739f,
 0.986755f, 0.984311f,
 0.933507f, 0.983693f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.933507f, 0.983693f,
 0.925419f, 0.970619f,
 0.917795f, 0.833109f,
 0.921005f, 0.754538f,
 0.949638f, 0.785658f,
 0.949638f, 0.785658f,
 0.921005f, 0.754538f,
 0.961898f, 0.902588f,
 0.990420f, 0.903796f,
 0.965564f, 0.931307f,
 0.965564f, 0.931307f,
 0.990420f, 0.903796f,
 0.986755f, 0.984311f,
 0.791908f, 0.583549f,
 0.730977f, 0.646869f,
 0.785732f, 0.396285f,
 0.824556f, 0.412442f,
 0.824556f, 0.412442f,
 0.900004f, 0.283013f,
 0.277434f, 0.584799f,};

static float[] TextArrayB = new float[]{
 0.277434f, 0.584799f,
 0.340574f, 0.348630f,
 0.340575f, 0.584800f,
 0.745360f, 0.396794f,
 0.745360f, 0.248156f,
 0.785732f, 0.396285f,
 0.785732f, 0.396285f,
 0.745360f, 0.248156f,
 0.817124f, 0.248044f,
 0.137216f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.995122f,
 0.137216f, 0.949583f,
 0.176724f, 0.949583f,
 0.176724f, 0.995122f,
 0.007565f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.995122f,
 0.007565f, 0.995122f,
 0.049236f, 0.949583f,
 0.049236f, 0.995122f,
 0.091983f, 0.995122f,
 0.049236f, 0.995122f,
 0.091983f, 0.949583f,
 0.049236f, 0.995122f,
 0.049236f, 0.949583f,
 0.091983f, 0.949583f,
 0.091983f, 0.949583f,
 0.137216f, 0.949583f,
 0.091983f, 0.995122f,
 0.091983f, 0.995122f,
 0.137216f, 0.949583f,
 0.137216f, 0.995122f,
 0.007565f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.949583f,
 0.049236f, 0.949583f,
 0.007565f, 0.831121f,
 0.049236f, 0.831121f,
 0.049236f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.750282f,
 0.007565f, 0.750282f,
 0.049236f, 0.831121f,
 0.007565f, 0.831121f,
 0.853660f, 0.094340f,
 0.988813f, 0.152851f,
 0.817124f, 0.248044f,
 0.817124f, 0.248044f,
 0.988813f, 0.152851f,
 0.900004f, 0.283013f,
 0.088712f, 0.602466f,
 0.134506f, 0.642886f,
 0.088712f, 0.642886f,
 0.049042f, 0.602466f,
 0.088712f, 0.602466f,
 0.049042f, 0.642886f,
 0.049042f, 0.642886f,
 0.088712f, 0.602466f,
 0.088712f, 0.642886f,
 0.008494f, 0.602466f,
 0.049042f, 0.602466f,
 0.008494f, 0.642886f,
 0.008494f, 0.642886f,
 0.049042f, 0.602466f,
 0.049042f, 0.642886f,
 0.091983f, 0.750282f,
 0.049236f, 0.709862f,
 0.091983f, 0.709862f,
 0.091983f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.750282f,
 0.091983f, 0.709862f,
 0.137216f, 0.709862f,
 0.176724f, 0.750282f,
 0.137216f, 0.750282f,
 0.176724f, 0.709862f,
 0.176724f, 0.709862f,
 0.137216f, 0.750282f,
 0.137216f, 0.709862f,
 0.007565f, 0.750282f,
 0.007565f, 0.709862f,
 0.049236f, 0.750282f,
 0.997287f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.008229f,
 0.134658f, 0.008229f,
 0.997287f, 0.089162f,
 0.134658f, 0.089162f,};

static float[][] NormArray = new float[][]{
{ 0.958716f, 0.252944f, -0.129932f},
{ 0.826605f, -0.325377f, -0.459188f},
{ 0.904768f, 0.122465f, -0.407918f},
{ 0.857718f, -0.303067f, -0.415295f},
{ 0.363845f, 0.386301f, -0.847578f},
{ 0.549456f, 0.798038f, -0.247453f},
{ 0.485921f, 0.138939f, -0.862889f},
{ 0.520281f, -0.845552f, -0.119790f},
{ 0.517275f, -0.009453f, 0.855767f},
{ 0.414372f, 0.059146f, 0.908184f},
{ 0.188090f, -0.104045f, 0.976625f},
{ 0.238558f, 0.313636f, 0.919088f},
{ 0.000000f, 0.434593f, 0.900627f},
{ 0.000000f, -0.231740f, 0.972778f},
{ -0.000000f, 0.506514f, -0.862232f},
{ 0.000000f, 0.987579f, -0.157124f},
{ -0.000000f, 0.019090f, -0.999818f},
{ 0.453144f, 0.327666f, 0.829033f},
{ -0.760936f, 0.234332f, 0.605034f},
{ 0.383690f, -0.853862f, -0.351713f},
{ -0.216586f, -0.837809f, -0.501166f},
{ -0.000000f, -0.899567f, 0.436784f},
{ 0.364052f, 0.732936f, 0.574692f},
{ 0.474194f, 0.553826f, -0.684410f},
{ 0.000000f, 0.418889f, 0.908038f},
{ -0.000000f, -0.151678f, -0.988430f},
{ 0.646975f, -0.661381f, 0.379471f},
{ 0.580437f, 0.286947f, 0.762072f},
{ -0.724915f, -0.619238f, 0.301733f},
{ -0.655370f, 0.402363f, 0.639213f},
{ 0.000000f, 0.031743f, 0.999496f},
{ 0.723542f, -0.097060f, 0.683422f},
{ 0.662245f, -0.165251f, -0.730838f},
{ -0.000000f, -0.030906f, -0.999522f},
{ 0.831211f, 0.110248f, 0.544916f},
{ 0.827151f, -0.011546f, -0.561861f},
{ 0.000395f, -0.062043f, -0.998073f},
{ -0.000251f, 0.082381f, 0.996601f},
{ 0.830347f, 0.266053f, -0.489633f},
{ 0.747052f, 0.317556f, 0.584014f},
{ 0.005926f, 0.301586f, 0.953421f},
{ -0.006610f, 0.211942f, -0.977260f},
{ 0.570728f, 0.732676f, 0.370750f},
{ 0.736085f, 0.311036f, -0.601195f},
{ 0.098432f, -0.301167f, 0.948478f},
{ -0.027327f, -0.879783f, -0.474589f},
{ 0.836601f, 0.506781f, -0.208019f},
{ 0.730505f, -0.382842f, -0.565504f},
{ -0.597969f, 0.055879f, 0.799569f},
{ -0.702145f, -0.646986f, -0.297324f},
{ 0.791560f, 0.599130f, 0.120320f},
{ 0.801659f, -0.550678f, -0.232587f},
{ -0.738334f, 0.674239f, -0.016243f},
{ -0.807879f, -0.479491f, -0.342667f},
{ 0.003198f, 0.232000f, 0.972711f},
{ 0.787431f, 0.279347f, 0.549471f},
{ 0.819647f, 0.310700f, -0.481295f},
{ -0.003119f, 0.301939f, -0.953322f},
{ -0.958716f, 0.252945f, -0.129933f},
{ -0.904768f, 0.122465f, -0.407918f},
{ -0.826605f, -0.325377f, -0.459188f},
{ -0.857718f, -0.303067f, -0.415296f},
{ -0.549456f, 0.798038f, -0.247454f},
{ -0.363846f, 0.386301f, -0.847578f},
{ -0.485921f, 0.138938f, -0.862889f},
{ -0.520281f, -0.845552f, -0.119792f},
{ -0.238558f, 0.313636f, 0.919088f},
{ -0.414371f, 0.059146f, 0.908184f},
{ -0.188090f, -0.104046f, 0.976625f},
{ -0.517274f, -0.009453f, 0.855768f},
{ -0.453143f, 0.327667f, 0.829033f},
{ -0.383691f, -0.853862f, -0.351712f},
{ 0.760937f, 0.234331f, 0.605033f},
{ 0.216586f, -0.837809f, -0.501165f},
{ -0.723800f, 0.412841f, -0.552880f},
{ -0.471209f, 0.703573f, 0.531927f},
{ 0.022078f, -0.983444f, -0.179863f},
{ 0.723907f, -0.162357f, 0.670521f},
{ -0.817860f, -0.538416f, 0.203013f},
{ -0.223744f, 0.279294f, 0.933774f},
{ -0.713592f, -0.098517f, 0.693600f},
{ -0.698261f, -0.116194f, -0.706350f},
{ -0.827515f, -0.010775f, -0.561340f},
{ -0.830080f, 0.110491f, 0.546589f},
{ -0.836620f, 0.265705f, -0.479028f},
{ -0.738500f, 0.318203f, 0.594445f},
{ -0.613932f, -0.148321f, -0.775299f},
{ -0.794352f, 0.281145f, -0.538481f},
{ -0.460657f, 0.262348f, 0.847920f},
{ 0.939920f, -0.143903f, 0.309585f},
{ 0.090546f, -0.555240f, -0.826747f},
{ -0.809320f, -0.160987f, -0.564875f},
{ -0.099833f, 0.399948f, 0.911085f},
{ 0.932604f, 0.030557f, 0.359605f},
{ -0.909846f, -0.111573f, -0.399665f},
{ 0.100776f, -0.671444f, -0.734172f},
{ -0.128859f, 0.848736f, 0.512876f},
{ 0.915086f, 0.315944f, 0.250592f},
{ -0.784217f, 0.277412f, 0.555019f},
{ -0.822164f, 0.311645f, -0.476365f},
{ -0.999224f, 0.038658f, -0.007583f},
{ -0.998055f, 0.016889f, -0.060006f},
{ -0.983687f, -0.001023f, -0.179887f},
{ -0.979489f, -0.015495f, -0.200899f},
{ -0.999830f, 0.016229f, -0.008774f},
{ -0.999830f, 0.016229f, -0.008774f}};

static int[] FaceArray = new int[]{
14, 15, 2,
2, 15, 3,
5, 13, 106,
107, 13, 108,
109, 110, 111,
112, 113, 5,
15, 16, 3,
3, 16, 6,
0, 1, 7,
7, 1, 4,
9, 8, 4,
4, 8, 7,
5, 10, 13,
13, 10, 12,
114, 11, 5,
5, 11, 10,
12, 115, 13,
13, 116, 117,
13, 118, 119,
120, 121, 122,
123, 15, 124,
125, 15, 14,
19, 18, 21,
21, 18, 20,
126, 127, 17,
17, 128, 129,
0, 7, 19,
19, 7, 18,
130, 16, 131,
132, 16, 133,
16, 15, 134,
135, 15, 136,
137, 138, 15,
15, 139, 140,
141, 142, 143,
144, 145, 146,
17, 147, 148,
149, 150, 151,
152, 153, 154,
155, 156, 157,
46, 47, 49,
49, 47, 48,
24, 33, 23,
23, 33, 30,
22, 31, 25,
25, 31, 32,
158, 27, 31,
31, 27, 26,
32, 31, 29,
29, 31, 26,
33, 28, 30,
30, 28, 159,
160, 161, 52,
52, 162, 163,
164, 50, 165,
166, 50, 51,
167, 168, 53,
53, 169, 52,
170, 39, 171,
172, 39, 38,
173, 40, 174,
175, 40, 39,
176, 41, 177,
178, 41, 179,
180, 38, 181,
182, 38, 41,
39, 43, 38,
38, 43, 42,
40, 44, 39,
39, 44, 43,
183, 41, 184,
185, 41, 45,
38, 42, 41,
41, 42, 45,
43, 93, 42,
42, 93, 94,
43, 44, 93,
93, 44, 92,
186, 45, 187,
188, 45, 95,
42, 94, 45,
45, 94, 95,
50, 36, 51,
51, 36, 35,
189, 190, 52,
52, 191, 34,
53, 52, 37,
37, 52, 34,
54, 57, 55,
55, 57, 56,
192, 59, 193,
194, 59, 58,
195, 196, 197,
198, 199, 58,
55, 56, 61,
61, 56, 60,
65, 64, 62,
62, 64, 63,
9, 65, 8,
8, 65, 62,
58, 59, 10,
10, 59, 12,
10, 11, 58,
58, 11, 200,
201, 202, 59,
59, 203, 12,
204, 205, 206,
207, 208, 59,
54, 55, 209,
210, 55, 211,
66, 69, 67,
67, 69, 68,
212, 213, 17,
17, 214, 215,
63, 66, 62,
62, 66, 67,
216, 217, 61,
61, 218, 219,
61, 220, 55,
55, 221, 222,
223, 224, 55,
55, 225, 226,
227, 228, 229,
230, 231, 232,
233, 234, 235,
236, 237, 17,
238, 239, 240,
241, 242, 243,
72, 75, 73,
73, 75, 74,
76, 33, 70,
70, 33, 24,
32, 77, 25,
25, 77, 71,
79, 78, 77,
77, 78, 244,
32, 29, 77,
77, 29, 79,
245, 28, 76,
76, 28, 33,
246, 81, 247,
248, 81, 249,
80, 50, 250,
87, 86, 83,
83, 86, 82,
84, 88, 85,
85, 88, 89,
89, 87, 85,
85, 87, 83,
86, 87, 99,
99, 87, 98,
88, 96, 89,
89, 96, 97,
87, 89, 98,
98, 89, 97,
90, 36, 80,
80, 36, 50,
53, 37, 81,
81, 37, 91,
93, 92, 47,
47, 92, 48,
93, 47, 94,
96, 74, 97,
96, 73, 74,
104, 105, 102,
102, 105, 103,};

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,
87, 88, 89,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 341  Texture Co-ords: 191  Normals: 106  Texture: block Faces: 196 Smooth Groups: 2 sucess: 89 Doubles: 107 Redos needed: 145 Correct: 86