package com.example.jgfjhg;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;
import android.graphics.Bitmap;
import android.opengl.GLUtils;

class luchhurt {

static String TextureName = "Hurt";

static int Vertices = 339;

static int VertTexts = 202;

static int Normals = 116;

static int Faces = 196;

static int FacesB = 29;

static int SmoothGroups = 6;

static float VertArray[] = new float[]{
 0.078843f, 10.237329f, 0.633500f,
 2.574045f, 10.053331f, 0.140388f,
 0.078843f, 11.798200f, -0.361762f,
 2.574045f, 11.688309f, -0.656268f,
 0.078843f, 11.049294f, -3.866213f,
 2.571770f, 10.647237f, -4.156497f,
 0.078843f, 8.822378f, -3.287267f,
 2.574045f, 8.898126f, -2.955545f,
 0.078843f, 6.310422f, -1.989979f,
 1.338180f, 6.408457f, -2.015480f,
 1.288510f, 7.191706f, 0.379453f,
 0.078843f, 7.191418f, 0.371079f,
 0.078843f, 11.879307f, -1.128084f,
 1.085087f, 11.844894f, -1.414420f,
 1.085087f, 11.636285f, -3.150203f,
 0.078843f, 11.590483f, -3.531311f,
 0.078843f, 13.127252f, -1.005380f,
 1.491354f, 13.057702f, -1.584090f,
 1.491354f, 12.856737f, -3.256258f,
 0.078843f, 12.777730f, -3.913661f,
 0.078843f, 14.818282f, -1.458459f,
 1.031165f, 14.573907f, -1.664301f,
 1.031165f, 14.346794f, -3.554054f,
 0.078843f, 14.529397f, -3.862202f,
 1.077964f, 4.181297f, -0.129349f,
 2.104232f, 4.151856f, -0.183195f,
 2.172508f, 4.248885f, 1.065046f,
 1.146240f, 4.278326f, 1.118892f,
 0.733039f, -0.025459f, -1.277926f,
 2.545638f, -0.025459f, -1.277926f,
 2.545638f, 1.291012f, 0.870006f,
 0.733078f, 1.291012f, 0.870006f,
 0.778096f, -0.015118f, 3.254122f,
 2.416366f, -0.015118f, 3.254122f,
 2.244411f, 1.218862f, 1.911984f,
 0.998903f, 1.218862f, 1.911984f,
 3.686434f, 9.399751f, -2.305938f,
 3.459840f, 9.848807f, -0.289987f,
 3.232455f, 10.751374f, -2.658042f,
 3.031820f, 11.148984f, -0.873050f,
 5.067820f, 9.485020f, -0.764546f,
 4.687789f, 9.913428f, -1.095787f,
 5.650927f, 9.856231f, -0.953442f,
 5.371709f, 10.170991f, -1.196813f,
 4.930377f, 10.174297f, 1.260405f,
 4.104818f, 11.104943f, 0.540834f,
 5.831318f, 10.747844f, 0.968549f,
 5.149181f, 11.516812f, 0.373987f,
 4.826256f, 10.952528f, 2.386375f,
 4.000697f, 11.883173f, 1.666805f,
 5.727196f, 11.526073f, 2.094518f,
 5.045059f, 12.295041f, 1.499956f,
 0.078843f, 0.355300f, -3.149983f,
 0.078843f, 6.253916f, -3.339570f,
 4.632588f, 6.169918f, -5.015174f,
 6.563060f, 0.466130f, -4.680996f,
 -2.416360f, 10.053331f, 0.140388f,
 -2.416360f, 11.688309f, -0.656268f,
 -0.808397f, 14.573907f, -1.664301f,
 -0.808432f, 14.346794f, -3.554054f,
 -2.414085f, 10.647237f, -3.702353f,
 -2.416360f, 8.898126f, -2.955545f,
 -0.620411f, 0.207470f, 2.050329f,
 -2.258680f, 0.207470f, 2.050330f,
 -2.086726f, 1.761454f, 1.096825f,
 -0.841218f, 1.761454f, 1.096824f,
 -1.353469f, 6.300344f, -1.864384f,
 -0.973255f, 7.402222f, 0.369906f,
 -0.927402f, 11.844894f, -1.414420f,
 -0.927402f, 11.636285f, -3.150203f,
 -1.333669f, 13.057702f, -1.584090f,
 -1.333669f, 12.856737f, -3.256258f,
 -1.931097f, 4.886592f, 0.305143f,
 -0.914826f, 4.824401f, 0.447678f,
 -2.120269f, 4.474875f, 1.474281f,
 -1.103997f, 4.412683f, 1.616817f,
 -2.387955f, 1.436943f, -2.311775f,
 -0.575356f, 1.436944f, -2.311776f,
 -2.387954f, 2.115812f, 0.114301f,
 -0.575394f, 2.115813f, 0.114300f,
 -2.761382f, 9.296765f, -2.615451f,
 -2.030873f, 9.401154f, -0.673155f,
 -3.195396f, 10.697069f, -2.527475f,
 -2.548578f, 10.789499f, -0.807700f,
 -3.526509f, 8.058436f, -0.964699f,
 -3.266025f, 8.664032f, -1.020196f,
 -4.170360f, 8.346877f, -0.839198f,
 -3.978976f, 8.791822f, -0.879973f,
 -3.058427f, 7.508311f, 1.053389f,
 -2.492566f, 8.823870f, 0.932829f,
 -4.053222f, 7.953972f, 1.247299f,
 -3.585666f, 9.040984f, 1.147683f,
 -2.245591f, 8.841372f, 2.283011f,
 -2.811453f, 7.525813f, 2.403572f,
 -3.806247f, 7.971474f, 2.597480f,
 -3.338691f, 9.058486f, 2.497864f,
 -4.474903f, 6.169918f, -3.564688f,
 -6.078575f, 0.466130f, -0.549611f,
 5.597824f, 3.318025f, -5.747581f,
 0.078843f, 3.304608f, -4.026798f,
 -5.276739f, 3.318025f, -1.616196f,
 3.602179f, 8.408578f, -4.733217f,
 0.078843f, 8.450576f, -3.520961f,
 -3.444494f, 8.408578f, -3.633520f,
 2.574045f, 10.053331f, 0.140388f,
 2.574045f, 10.053331f, 0.140388f,
 1.288510f, 7.191706f, 0.379453f,
 2.571770f, 10.647237f, -4.156497f,
 2.571770f, 10.647237f, -4.156497f,
 0.078843f, 11.049294f, -3.866213f,
 0.078843f, 11.049294f, -3.866213f,
 0.078843f, 11.879307f, -1.128084f,
 1.085087f, 11.844894f, -1.414420f,
 1.085087f, 11.844894f, -1.414420f,
 1.085087f, 11.844894f, -1.414420f,
 1.085087f, 11.636285f, -3.150203f,
 1.491354f, 13.057702f, -1.584090f,
 1.491354f, 13.057702f, -1.584090f,
 1.085087f, 11.636285f, -3.150203f,
 0.078843f, 11.590483f, -3.531311f,
 1.085087f, 11.636285f, -3.150203f,
 1.085087f, 11.636285f, -3.150203f,
 1.491354f, 12.856737f, -3.256258f,
 1.491354f, 13.057702f, -1.584090f,
 1.491354f, 12.856737f, -3.256258f,
 0.078843f, 6.310422f, -1.989979f,
 1.338180f, 6.408457f, -2.015480f,
 1.338180f, 6.408457f, -2.015480f,
 1.338180f, 6.408457f, -2.015480f,
 1.288510f, 7.191706f, 0.379453f,
 2.104232f, 4.151856f, -0.183195f,
 2.104232f, 4.151856f, -0.183195f,
 1.288510f, 7.191706f, 0.379453f,
 0.078843f, 7.191418f, 0.371079f,
 1.288510f, 7.191706f, 0.379453f,
 1.288510f, 7.191706f, 0.379453f,
 0.078843f, 6.310422f, -1.989979f,
 0.078843f, 7.191418f, 0.371079f,
 0.078843f, 7.191418f, 0.371079f,
 1.146240f, 4.278326f, 1.118892f,
 2.104232f, 4.151856f, -0.183195f,
 2.104232f, 4.151856f, -0.183195f,
 2.545638f, -0.025459f, -1.277926f,
 1.146240f, 4.278326f, 1.118892f,
 0.733078f, 1.291012f, 0.870006f,
 0.733078f, 1.291012f, 0.870006f,
 2.545638f, -0.025459f, -1.277926f,
 0.733039f, -0.025459f, -1.277926f,
 0.733039f, -0.025459f, -1.277926f,
 2.545638f, -0.025459f, -1.277926f,
 2.416366f, -0.015118f, 3.254122f,
 2.416366f, -0.015118f, 3.254122f,
 2.244411f, 1.218862f, 1.911984f,
 2.545638f, 1.291012f, 0.870006f,
 0.733078f, 1.291012f, 0.870006f,
 0.733078f, 1.291012f, 0.870006f,
 0.778096f, -0.015118f, 3.254122f,
 0.733078f, 1.291012f, 0.870006f,
 0.733078f, 1.291012f, 0.870006f,
 0.778096f, -0.015118f, 3.254122f,
 0.998903f, 1.218862f, 1.911984f,
 2.574045f, 8.898126f, -2.955545f,
 3.686434f, 9.399751f, -2.305938f,
 2.574045f, 10.053331f, 0.140388f,
 2.574045f, 10.053331f, 0.140388f,
 3.686434f, 9.399751f, -2.305938f,
 3.459840f, 9.848807f, -0.289987f,
 2.571770f, 10.647237f, -4.156497f,
 2.574045f, 8.898126f, -2.955545f,
 2.574045f, 8.898126f, -2.955545f,
 3.686434f, 9.399751f, -2.305938f,
 2.571770f, 10.647237f, -4.156497f,
 2.574045f, 10.053331f, 0.140388f,
 2.574045f, 10.053331f, 0.140388f,
 3.459840f, 9.848807f, -0.289987f,
 3.232455f, 10.751374f, -2.658042f,
 3.686434f, 9.399751f, -2.305938f,
 3.686434f, 9.399751f, -2.305938f,
 5.067820f, 9.485020f, -0.764546f,
 3.232455f, 10.751374f, -2.658042f,
 3.232455f, 10.751374f, -2.658042f,
 3.031820f, 11.148984f, -0.873050f,
 3.031820f, 11.148984f, -0.873050f,
 3.031820f, 11.148984f, -0.873050f,
 5.067820f, 9.485020f, -0.764546f,
 5.067820f, 9.485020f, -0.764546f,
 4.930377f, 10.174297f, 1.260405f,
 4.104818f, 11.104943f, 0.540834f,
 4.930377f, 10.174297f, 1.260405f,
 4.930377f, 10.174297f, 1.260405f,
 5.831318f, 10.747844f, 0.968549f,
 4.930377f, 10.174297f, 1.260405f,
 4.930377f, 10.174297f, 1.260405f,
 5.149181f, 11.516812f, 0.373987f,
 5.831318f, 10.747844f, 0.968549f,
 5.831318f, 10.747844f, 0.968549f,
 5.149181f, 11.516812f, 0.373987f,
 4.104818f, 11.104943f, 0.540834f,
 4.104818f, 11.104943f, 0.540834f,
 0.078843f, 11.049294f, -3.866213f,
 2.571770f, 10.647237f, -4.156497f,
 2.571770f, 10.647237f, -4.156497f,
 -2.416360f, 10.053331f, 0.140388f,
 -2.416360f, 10.053331f, 0.140388f,
 -0.973255f, 7.402222f, 0.369906f,
 -2.414085f, 10.647237f, -3.702353f,
 -2.414085f, 10.647237f, -3.702353f,
 -0.927402f, 11.636285f, -3.150203f,
 -2.414085f, 10.647237f, -3.702353f,
 -0.927402f, 11.636285f, -3.150203f,
 0.078843f, 11.049294f, -3.866213f,
 0.078843f, 11.049294f, -3.866213f,
 -0.927402f, 11.636285f, -3.150203f,
 0.078843f, 11.879307f, -1.128084f,
 -0.927402f, 11.844894f, -1.414420f,
 -0.927402f, 11.844894f, -1.414420f,
 -1.333669f, 13.057702f, -1.584090f,
 -0.927402f, 11.844894f, -1.414420f,
 -1.333669f, 12.856737f, -3.256258f,
 -0.927402f, 11.636285f, -3.150203f,
 -0.927402f, 11.636285f, -3.150203f,
 0.078843f, 11.590483f, -3.531311f,
 -1.333669f, 13.057702f, -1.584090f,
 -1.333669f, 12.856737f, -3.256258f,
 0.078843f, 6.310422f, -1.989979f,
 -1.353469f, 6.300344f, -1.864384f,
 -1.353469f, 6.300344f, -1.864384f,
 -1.353469f, 6.300344f, -1.864384f,
 -1.931097f, 4.886592f, 0.305143f,
 -0.973255f, 7.402222f, 0.369906f,
 -0.973255f, 7.402222f, 0.369906f,
 -1.931097f, 4.886592f, 0.305143f,
 -0.973255f, 7.402222f, 0.369906f,
 -0.973255f, 7.402222f, 0.369906f,
 0.078843f, 7.191418f, 0.371079f,
 -1.103997f, 4.412683f, 1.616817f,
 0.078843f, 7.191418f, 0.371079f,
 0.078843f, 7.191418f, 0.371079f,
 0.078843f, 6.310422f, -1.989979f,
 -2.387955f, 1.436943f, -2.311775f,
 -1.931097f, 4.886592f, 0.305143f,
 -1.931097f, 4.886592f, 0.305143f,
 -1.103997f, 4.412683f, 1.616817f,
 -0.575394f, 2.115813f, 0.114300f,
 -0.575394f, 2.115813f, 0.114300f,
 -0.575356f, 1.436944f, -2.311776f,
 -0.575356f, 1.436944f, -2.311776f,
 -2.387955f, 1.436943f, -2.311775f,
 -2.387955f, 1.436943f, -2.311775f,
 -2.258680f, 0.207470f, 2.050330f,
 -2.258680f, 0.207470f, 2.050330f,
 -2.086726f, 1.761454f, 1.096825f,};

static float VertArrayB[] = new float[]{
 -2.387954f, 2.115812f, 0.114301f,
 -2.086726f, 1.761454f, 1.096825f,
 -0.575394f, 2.115813f, 0.114300f,
 -0.575394f, 2.115813f, 0.114300f,
 -2.086726f, 1.761454f, 1.096825f,
 -0.841218f, 1.761454f, 1.096824f,
 -0.841218f, 1.761454f, 1.096824f,
 -0.620411f, 0.207470f, 2.050329f,
 -0.575394f, 2.115813f, 0.114300f,
 -0.575394f, 2.115813f, 0.114300f,
 -0.620411f, 0.207470f, 2.050329f,
 -0.575356f, 1.436944f, -2.311776f,
 -2.416360f, 10.053331f, 0.140388f,
 -2.030873f, 9.401154f, -0.673155f,
 -2.416360f, 8.898126f, -2.955545f,
 -2.030873f, 9.401154f, -0.673155f,
 -2.761382f, 9.296765f, -2.615451f,
 -2.416360f, 8.898126f, -2.955545f,
 -2.416360f, 8.898126f, -2.955545f,
 -2.761382f, 9.296765f, -2.615451f,
 -2.414085f, 10.647237f, -3.702353f,
 -2.414085f, 10.647237f, -3.702353f,
 -2.761382f, 9.296765f, -2.615451f,
 -3.195396f, 10.697069f, -2.527475f,
 -2.414085f, 10.647237f, -3.702353f,
 -3.195396f, 10.697069f, -2.527475f,
 -2.416360f, 11.688309f, -0.656268f,
 -2.416360f, 11.688309f, -0.656268f,
 -2.548578f, 10.789499f, -0.807700f,
 -2.416360f, 10.053331f, 0.140388f,
 -2.416360f, 10.053331f, 0.140388f,
 -2.548578f, 10.789499f, -0.807700f,
 -2.030873f, 9.401154f, -0.673155f,
 -3.526509f, 8.058436f, -0.964699f,
 -4.170360f, 8.346877f, -0.839198f,
 -2.761382f, 9.296765f, -2.615451f,
 -2.761382f, 9.296765f, -2.615451f,
 -4.170360f, 8.346877f, -0.839198f,
 -3.195396f, 10.697069f, -2.527475f,
 -4.170360f, 8.346877f, -0.839198f,
 -3.978976f, 8.791822f, -0.879973f,
 -3.195396f, 10.697069f, -2.527475f,
 -3.195396f, 10.697069f, -2.527475f,
 -3.978976f, 8.791822f, -0.879973f,
 -2.548578f, 10.789499f, -0.807700f,
 -3.978976f, 8.791822f, -0.879973f,
 -3.266025f, 8.664032f, -1.020196f,
 -2.548578f, 10.789499f, -0.807700f,
 -2.548578f, 10.789499f, -0.807700f,
 -3.266025f, 8.664032f, -1.020196f,
 -2.030873f, 9.401154f, -0.673155f,
 -3.058427f, 7.508311f, 1.053389f,
 -4.053222f, 7.953972f, 1.247299f,
 -3.526509f, 8.058436f, -0.964699f,
 -3.526509f, 8.058436f, -0.964699f,
 -4.053222f, 7.953972f, 1.247299f,
 -4.170360f, 8.346877f, -0.839198f,
 -2.811453f, 7.525813f, 2.403572f,
 -2.245591f, 8.841372f, 2.283011f,
 -3.058427f, 7.508311f, 1.053389f,
 -3.058427f, 7.508311f, 1.053389f,
 -2.245591f, 8.841372f, 2.283011f,
 -2.492566f, 8.823870f, 0.932829f,
 -3.806247f, 7.971474f, 2.597480f,
 -2.811453f, 7.525813f, 2.403572f,
 -4.053222f, 7.953972f, 1.247299f,
 -4.053222f, 7.953972f, 1.247299f,
 -2.811453f, 7.525813f, 2.403572f,
 -3.058427f, 7.508311f, 1.053389f,
 -3.585666f, 9.040984f, 1.147683f,
 -3.338691f, 9.058486f, 2.497864f,
 -4.053222f, 7.953972f, 1.247299f,
 -4.053222f, 7.953972f, 1.247299f,
 -3.338691f, 9.058486f, 2.497864f,
 -3.806247f, 7.971474f, 2.597480f,
 -2.492566f, 8.823870f, 0.932829f,
 -2.245591f, 8.841372f, 2.283011f,
 -3.585666f, 9.040984f, 1.147683f,
 -3.585666f, 9.040984f, 1.147683f,
 -2.245591f, 8.841372f, 2.283011f,
 -3.338691f, 9.058486f, 2.497864f,
 0.078843f, 11.049294f, -3.866213f,
 0.078843f, 8.450576f, -3.520961f,
 -2.414085f, 10.647237f, -3.702353f,
 -2.414085f, 10.647237f, -3.702353f,
 0.078843f, 8.450576f, -3.520961f,
 -3.444494f, 8.408578f, -3.633520f,};

static float[] TextArray = new float[]{
 0.765412f, 0.681378f,
 0.765412f, 0.570335f,
 0.825201f, 0.681378f,
 0.822879f, 0.570299f,
 0.542473f, 0.970289f,
 0.447291f, 0.970289f,
 0.542473f, 0.916457f,
 0.449024f, 0.913521f,
 0.542473f, 0.838197f,
 0.493899f, 0.841133f,
 0.674193f, 0.626883f,
 0.674193f, 0.681378f,
 0.847778f, 0.681378f,
 0.850454f, 0.639527f,
 0.925844f, 0.639527f,
 0.925844f, 0.681379f,
 0.322042f, 0.569516f,
 0.320395f, 0.473878f,
 0.540277f, 0.437890f,
 0.599213f, 0.569510f,
 0.408358f, 0.569764f,
 0.396173f, 0.513666f,
 0.524463f, 0.513667f,
 0.513269f, 0.569764f,
 0.324047f, 0.138784f,
 0.268283f, 0.138970f,
 0.281315f, 0.363513f,
 0.243753f, 0.367658f,
 0.300356f, 0.022362f,
 0.244979f, 0.022659f,
 0.298407f, 0.283420f,
 0.228262f, 0.289756f,
 0.700544f, 0.421993f,
 0.700544f, 0.369959f,
 0.743172f, 0.375421f,
 0.743172f, 0.414980f,
 0.711360f, 0.038998f,
 0.662490f, 0.038998f,
 0.920320f, 0.547872f,
 0.836660f, 0.547841f,
 0.711360f, 0.146332f,
 0.662490f, 0.146332f,
 0.545151f, 0.146332f,
 0.605984f, 0.146332f,
 0.711360f, 0.247785f,
 0.662490f, 0.247785f,
 0.545151f, 0.247785f,
 0.605984f, 0.247785f,
 0.123410f, 0.926820f,
 0.064457f, 0.926366f,
 0.124920f, 0.870927f,
 0.064167f, 0.871384f,
 0.985361f, 0.221742f,
 0.840209f, 0.221742f,
 0.840209f, 0.075484f,
 0.985361f, 0.013481f,
 0.765412f, 0.792421f,
 0.822878f, 0.792457f,
 0.396173f, 0.624501f,
 0.524462f, 0.624500f,
 0.637654f, 0.970289f,
 0.635921f, 0.913521f,
 0.602870f, 0.274197f,
 0.602871f, 0.326231f,
 0.645499f, 0.320769f,
 0.645499f, 0.281210f,
 0.591046f, 0.841133f,
 0.674193f, 0.735873f,
 0.850454f, 0.723230f,
 0.519237f, 0.761523f,
 0.380361f, 0.700279f,
 0.540274f, 0.700278f,
 0.208399f, 0.140511f,
 0.152635f, 0.140325f,
 0.124023f, 0.367959f,
 0.161585f, 0.372104f,
 0.231702f, 0.024200f,
 0.176325f, 0.023903f,
 0.106931f, 0.287866f,
 0.177076f, 0.294203f,
 0.015226f, 0.586251f,
 0.069400f, 0.586251f,
 0.920318f, 0.814883f,
 0.836659f, 0.814916f,
 0.015226f, 0.680055f,
 0.069400f, 0.680055f,
 0.186740f, 0.680055f,
 0.130233f, 0.680055f,
 0.015226f, 0.795038f,
 0.069400f, 0.795038f,
 0.186740f, 0.795038f,
 0.130233f, 0.795038f,
 0.249217f, 0.874910f,
 0.249424f, 0.933539f,
 0.301860f, 0.930908f,
 0.302065f, 0.877358f,
 0.840209f, 0.368000f,
 0.985361f, 0.419507f,
 0.912785f, 0.044483f,
 0.912785f, 0.221742f,
 0.912785f, 0.393753f,
 0.789643f, 0.108579f,
 0.789643f, 0.221742f,
 0.789643f, 0.334905f,
 0.330550f, 0.836015f,
 0.330550f, 0.836015f,
 0.410299f, 0.793373f,
 0.962340f, 0.570236f,
 0.962340f, 0.570236f,
 0.963051f, 0.681379f,
 0.963051f, 0.681379f,
 0.259150f, 0.569083f,
 0.259150f, 0.501261f,
 0.259150f, 0.501261f,
 0.401404f, 0.376641f,
 0.519240f, 0.376645f,
 0.380364f, 0.437885f,
 0.380364f, 0.437885f,
 0.519240f, 0.376645f,
 0.661486f, 0.569087f,
 0.661488f, 0.501265f,
 0.661488f, 0.501265f,
 0.600243f, 0.473879f,
 0.380364f, 0.437885f,
 0.600243f, 0.473879f,
 0.320813f, 0.222669f,
 0.293252f, 0.222819f,
 0.293252f, 0.222819f,
 0.366655f, 0.447487f,
 0.268827f, 0.448535f,
 0.327717f, 0.363533f,
 0.327717f, 0.363533f,
 0.268827f, 0.448535f,
 0.220727f, 0.454545f,
 0.268827f, 0.448535f,
 0.268827f, 0.448535f,
 0.320813f, 0.222669f,
 0.397838f, 0.222717f,
 0.397838f, 0.222717f,
 0.388431f, 0.138763f,
 0.327717f, 0.363533f,
 0.327717f, 0.363533f,
 0.381748f, 0.247125f,
 0.388431f, 0.138763f,
 0.368537f, 0.059658f,
 0.368537f, 0.059658f,
 0.556600f, 0.365850f,
 0.556599f, 0.423421f,
 0.556599f, 0.423421f,
 0.381748f, 0.247125f,
 0.208711f, 0.247418f,
 0.208711f, 0.247418f,
 0.259954f, 0.282383f,
 0.776267f, 0.365854f,
 0.776267f, 0.423423f,
 0.776267f, 0.423423f,
 0.459565f, 0.022649f,
 0.368537f, 0.059658f,
 0.368537f, 0.059658f,
 0.459565f, 0.022649f,
 0.408321f, 0.057613f,
 0.819577f, 0.371917f,
 0.832137f, 0.414748f,
 0.788493f, 0.530101f,
 0.788493f, 0.530101f,
 0.832137f, 0.414748f,
 0.809816f, 0.508397f,
 0.962340f, 0.570236f,
 0.964229f, 0.507208f,
 0.964229f, 0.507208f,
 0.925476f, 0.499804f,
 0.962340f, 0.570236f,
 0.788493f, 0.530101f,
 0.788493f, 0.530101f,
 0.809816f, 0.508397f,
 0.545151f, 0.038998f,
 0.490977f, 0.038998f,
 0.490977f, 0.038998f,
 0.490977f, 0.146332f,
 0.545151f, 0.038998f,
 0.545151f, 0.038998f,
 0.605984f, 0.038998f,
 0.605984f, 0.038998f,
 0.605984f, 0.038998f,
 0.490977f, 0.146332f,
 0.490977f, 0.146332f,
 0.490977f, 0.247785f,
 0.064893f, 0.975472f,
 0.123410f, 0.975472f,
 0.123410f, 0.975472f,
 0.171616f, 0.872795f,
 0.171617f, 0.919755f,
 0.171617f, 0.919755f,
 0.063685f, 0.822293f,
 0.127460f, 0.821833f,
 0.127460f, 0.821833f,
 0.011377f, 0.873096f,
 0.009284f, 0.925250f,
 0.009284f, 0.925250f,
 0.739076f, 0.221742f,
 0.739076f, 0.141674f,
 0.739076f, 0.141674f,
 0.754394f, 0.836011f,
 0.754394f, 0.836011f,
 0.674644f, 0.793372f,
 0.962341f, 0.792524f,
 0.962341f, 0.792524f,
 0.925844f, 0.723230f,
 0.962341f, 0.792524f,
 0.925844f, 0.723230f,
 0.963051f, 0.681379f,
 0.963051f, 0.681379f,
 0.925844f, 0.723230f,
 0.259150f, 0.569083f,
 0.259150f, 0.636906f,
 0.259150f, 0.636906f,
 0.320395f, 0.664289f,
 0.401400f, 0.761524f,
 0.600238f, 0.664291f,
 0.661484f, 0.636909f,
 0.661484f, 0.636909f,
 0.661486f, 0.569087f,
 0.320395f, 0.664289f,
 0.600238f, 0.664291f,
 0.155870f, 0.224211f,
 0.183430f, 0.224360f,
 0.183430f, 0.224360f,
 0.038682f, 0.451933f,
 0.077621f, 0.367980f,
 0.136511f, 0.452982f,
 0.136511f, 0.452982f,
 0.077621f, 0.367980f,
 0.136511f, 0.452982f,
 0.136511f, 0.452982f,
 0.184610f, 0.458992f,
 0.088251f, 0.140305f,
 0.078844f, 0.224258f,
 0.078844f, 0.224258f,
 0.155870f, 0.224211f,
 0.023590f, 0.251572f,
 0.077621f, 0.367980f,
 0.077621f, 0.367980f,
 0.088251f, 0.140305f,
 0.108145f, 0.061199f,
 0.108145f, 0.061199f,
 0.458925f, 0.272771f,
 0.458925f, 0.272771f,
 0.458927f, 0.330342f,
 0.023590f, 0.251572f,
 0.196627f, 0.251865f,
 0.196627f, 0.251865f,
 0.145383f, 0.286830f,};

static float[] TextArrayB = new float[]{
 0.678594f, 0.330337f,
 0.645499f, 0.320769f,
 0.678594f, 0.272767f,
 0.678594f, 0.272767f,
 0.645499f, 0.320769f,
 0.645499f, 0.281210f,
 0.068361f, 0.059155f,
 0.017117f, 0.024190f,
 0.108145f, 0.061199f,
 0.108145f, 0.061199f,
 0.017117f, 0.024190f,
 0.176325f, 0.023903f,
 0.788493f, 0.832655f,
 0.809815f, 0.854360f,
 0.819562f, 0.990842f,
 0.809815f, 0.854360f,
 0.832127f, 0.948011f,
 0.819562f, 0.990842f,
 0.964216f, 0.855555f,
 0.925462f, 0.862950f,
 0.962341f, 0.792524f,
 0.962341f, 0.792524f,
 0.925462f, 0.862950f,
 0.920318f, 0.814883f,
 0.962341f, 0.792524f,
 0.920318f, 0.814883f,
 0.822878f, 0.792457f,
 0.822878f, 0.792457f,
 0.836659f, 0.814916f,
 0.788493f, 0.832655f,
 0.788493f, 0.832655f,
 0.836659f, 0.814916f,
 0.809815f, 0.854360f,
 0.235609f, 0.680055f,
 0.186740f, 0.680055f,
 0.235609f, 0.586251f,
 0.235609f, 0.586251f,
 0.186740f, 0.680055f,
 0.186739f, 0.586251f,
 0.186740f, 0.680055f,
 0.130233f, 0.680055f,
 0.186739f, 0.586251f,
 0.186739f, 0.586251f,
 0.130233f, 0.680055f,
 0.130233f, 0.586251f,
 0.130233f, 0.680055f,
 0.069400f, 0.680055f,
 0.130233f, 0.586251f,
 0.130233f, 0.586251f,
 0.069400f, 0.680055f,
 0.069400f, 0.586251f,
 0.235609f, 0.795038f,
 0.186740f, 0.795038f,
 0.235609f, 0.680055f,
 0.235609f, 0.680055f,
 0.186740f, 0.795038f,
 0.186740f, 0.680055f,
 0.249424f, 0.933539f,
 0.249217f, 0.874910f,
 0.200327f, 0.935933f,
 0.200327f, 0.935933f,
 0.249217f, 0.874910f,
 0.201459f, 0.877993f,
 0.301860f, 0.930908f,
 0.249424f, 0.933539f,
 0.302124f, 0.983361f,
 0.302124f, 0.983361f,
 0.249424f, 0.933539f,
 0.249642f, 0.985999f,
 0.353274f, 0.877965f,
 0.302065f, 0.877358f,
 0.352586f, 0.930336f,
 0.352586f, 0.930336f,
 0.302065f, 0.877358f,
 0.301860f, 0.930908f,
 0.250990f, 0.823806f,
 0.249217f, 0.874910f,
 0.302280f, 0.822266f,
 0.302280f, 0.822266f,
 0.249217f, 0.874910f,
 0.302065f, 0.877358f,
 0.739076f, 0.221742f,
 0.789643f, 0.221742f,
 0.739076f, 0.301810f,
 0.739076f, 0.301810f,
 0.789643f, 0.221742f,
 0.789643f, 0.334905f,};

static float[][] NormArray = new float[][]{
{ 0.001118f, 0.227999f, 0.973661f},
{ 0.630660f, -0.131176f, 0.764892f},
{ 0.000000f, 0.668332f, 0.743863f},
{ 0.352984f, 0.816312f, 0.457206f},
{ 0.707509f, 0.593921f, 0.383000f},
{ 0.688806f, 0.533123f, -0.491249f},
{ 0.001673f, 0.845797f, 0.533503f},
{ 0.001885f, 0.732391f, -0.680882f},
{ -0.089139f, -0.250611f, -0.963975f},
{ 0.422293f, 0.179006f, -0.888609f},
{ -0.031344f, -0.382834f, -0.923285f},
{ 0.662902f, -0.606033f, -0.439641f},
{ -0.279309f, -0.903608f, 0.324776f},
{ 0.261634f, -0.921926f, 0.285658f},
{ -0.338338f, 0.817845f, 0.465464f},
{ 0.334923f, 0.840428f, 0.426036f},
{ 0.770833f, -0.452471f, -0.448427f},
{ -0.130016f, -0.735006f, -0.665479f},
{ 0.757958f, -0.037892f, 0.651201f},
{ -0.009630f, -0.247747f, 0.968777f},
{ 0.504427f, 0.814637f, 0.286215f},
{ -0.000000f, 0.485617f, 0.874172f},
{ 0.524698f, 0.675492f, -0.518076f},
{ -0.032597f, 0.670019f, -0.741628f},
{ -0.000000f, -0.010876f, -0.999941f},
{ -0.001177f, 0.101231f, 0.994862f},
{ 0.900131f, 0.050361f, 0.432699f},
{ 0.911532f, -0.022022f, -0.410640f},
{ -0.001188f, -0.124979f, -0.992159f},
{ -0.886991f, -0.191833f, -0.420056f},
{ 0.828633f, 0.178526f, -0.530562f},
{ 0.778577f, 0.194008f, 0.596807f},
{ -0.566937f, 0.006025f, 0.823739f},
{ -0.521952f, -0.566937f, -0.637298f},
{ 0.512199f, -0.542338f, -0.665974f},
{ 0.968996f, 0.111487f, 0.220494f},
{ -0.962955f, 0.098951f, 0.250850f},
{ 0.564252f, -0.714804f, -0.413128f},
{ 0.376588f, -0.467865f, 0.799552f},
{ 0.664174f, 0.565655f, -0.488782f},
{ 0.575022f, 0.787655f, 0.221243f},
{ -0.469414f, -0.329301f, 0.819275f},
{ -0.054980f, -0.989183f, 0.135997f},
{ 0.904374f, -0.274117f, -0.327060f},
{ 0.399284f, 0.777809f, -0.485372f},
{ -0.958341f, -0.102902f, -0.266448f},
{ -0.210849f, -0.929654f, 0.302135f},
{ 0.956976f, -0.286920f, 0.043284f},
{ 0.304519f, 0.746346f, -0.591808f},
{ 0.965418f, -0.164026f, 0.202644f},
{ 0.924618f, -0.237281f, -0.297960f},
{ 0.312193f, 0.794775f, -0.520450f},
{ 0.271733f, 0.317112f, -0.908626f},
{ -0.996552f, -0.015356f, -0.081541f},
{ -0.814805f, -0.124945f, -0.566111f},
{ -0.264793f, -0.804549f, 0.531588f},
{ -0.217614f, -0.975590f, -0.029458f},
{ -0.090437f, -0.131158f, -0.987228f},
{ -0.277391f, 0.037044f, -0.960043f},
{ -0.136990f, -0.073933f, -0.987810f},
{ -0.338066f, -0.009452f, -0.941075f},
{ -0.151041f, 0.110934f, -0.982283f},
{ -0.314343f, 0.109943f, -0.942922f},
{ -0.293144f, -0.107860f, -0.949965f},
{ -0.252021f, -0.213794f, -0.943810f},
{ -0.690600f, -0.056582f, 0.721020f},
{ -0.392519f, 0.832391f, 0.391222f},
{ -0.692683f, 0.531533f, -0.487507f},
{ -0.709630f, 0.593991f, 0.378945f},
{ -0.373817f, 0.228412f, -0.898938f},
{ -0.679466f, -0.492988f, -0.543404f},
{ 0.305047f, -0.950211f, 0.063604f},
{ 0.329266f, 0.660789f, 0.674493f},
{ -0.285389f, -0.958198f, 0.020234f},
{ -0.327172f, 0.694457f, 0.640850f},
{ -0.755228f, -0.534293f, -0.379685f},
{ -0.664309f, -0.010269f, 0.747387f},
{ -0.531683f, 0.841715f, 0.093966f},
{ -0.666250f, 0.491023f, -0.561255f},
{ -0.902786f, 0.069867f, 0.424377f},
{ -0.912986f, 0.000728f, -0.407991f},
{ 0.941898f, -0.160314f, -0.295173f},
{ -0.825404f, 0.355362f, -0.438664f},
{ -0.711847f, 0.083405f, 0.697365f},
{ 0.371452f, -0.108965f, 0.922036f},
{ 0.419732f, -0.356869f, -0.834547f},
{ -0.421611f, -0.323002f, -0.847298f},
{ -0.979325f, 0.025160f, 0.200724f},
{ 0.974755f, 0.000492f, 0.223275f},
{ 0.753669f, 0.058640f, 0.654633f},
{ -0.683344f, -0.513075f, -0.519417f},
{ -0.826493f, 0.459950f, -0.324585f},
{ -0.869109f, 0.241904f, 0.431430f},
{ 0.867164f, -0.300201f, 0.397373f},
{ 0.157372f, -0.870491f, -0.466347f},
{ -0.868615f, -0.368810f, -0.330888f},
{ -0.667038f, 0.683153f, 0.297258f},
{ 0.857554f, 0.358434f, -0.368953f},
{ 0.390042f, -0.861425f, -0.325290f},
{ -0.945281f, -0.326151f, -0.008348f},
{ -0.479686f, 0.877369f, -0.011190f},
{ -0.494321f, 0.723632f, -0.481668f},
{ -0.904938f, -0.295191f, -0.306511f},
{ -0.479323f, 0.874312f, 0.076344f},
{ -0.928821f, -0.327058f, 0.174139f},
{ 0.742156f, 0.290253f, -0.604118f},
{ 0.927091f, 0.332061f, -0.173888f},
{ 0.469261f, -0.879917f, -0.074431f},
{ 0.273418f, -0.714331f, -0.644185f},
{ 0.011353f, -0.069487f, -0.997518f},
{ 0.043255f, -0.054926f, -0.997553f},
{ -0.230835f, -0.285682f, -0.930108f},
{ -0.381372f, -0.307202f, -0.871884f},
{ -0.332949f, -0.281680f, -0.899890f},
{ -0.203812f, -0.402712f, -0.892348f},
{ -0.382319f, -0.227454f, -0.895599f}};

static int[] FaceArray = new int[]{
0, 1, 2,
2, 1, 3,
21, 22, 20,
20, 22, 23,
4, 5, 6,
6, 5, 7,
32, 33, 35,
35, 33, 34,
7, 9, 6,
6, 9, 8,
7, 104, 9,
9, 105, 106,
1, 0, 10,
10, 0, 11,
3, 13, 2,
2, 13, 12,
107, 14, 3,
3, 14, 13,
108, 109, 14,
14, 110, 15,
111, 112, 16,
16, 113, 17,
114, 115, 116,
117, 118, 18,
119, 19, 120,
121, 19, 122,
17, 21, 16,
16, 21, 20,
123, 18, 21,
21, 18, 22,
124, 19, 22,
22, 19, 23,
125, 126, 24,
24, 127, 25,
128, 129, 130,
131, 132, 26,
133, 27, 134,
135, 27, 26,
136, 24, 137,
138, 24, 139,
24, 25, 28,
28, 25, 29,
26, 30, 140,
141, 30, 142,
26, 27, 30,
30, 27, 31,
143, 24, 144,
145, 24, 28,
146, 33, 147,
148, 33, 32,
149, 30, 150,
151, 30, 152,
153, 154, 34,
34, 155, 35,
28, 156, 157,
158, 159, 160,
161, 162, 163,
164, 165, 166,
167, 38, 168,
169, 38, 170,
171, 3, 38,
38, 3, 39,
3, 172, 39,
39, 173, 174,
37, 36, 41,
41, 36, 40,
175, 42, 176,
177, 42, 178,
42, 179, 43,
180, 181, 43,
37, 41, 182,
183, 41, 43,
41, 40, 45,
45, 40, 44,
42, 46, 184,
185, 46, 186,
43, 47, 42,
42, 47, 46,
43, 41, 47,
47, 41, 45,
187, 49, 188,
189, 49, 48,
190, 191, 50,
50, 192, 48,
193, 194, 51,
51, 195, 50,
196, 51, 197,
198, 51, 49,
49, 51, 48,
48, 51, 50,
199, 200, 102,
102, 201, 101,
53, 54, 99,
99, 54, 98,
0, 2, 56,
56, 2, 57,
23, 59, 20,
20, 59, 58,
4, 6, 60,
60, 6, 61,
62, 65, 63,
63, 65, 64,
8, 66, 6,
6, 66, 61,
61, 66, 202,
203, 66, 204,
56, 67, 0,
0, 67, 11,
12, 68, 2,
2, 68, 57,
57, 68, 205,
206, 68, 207,
208, 209, 210,
211, 212, 15,
213, 16, 214,
215, 16, 216,
217, 70, 69,
69, 70, 71,
218, 19, 219,
220, 19, 221,
20, 58, 16,
16, 58, 222,
70, 58, 71,
71, 58, 59,
223, 59, 19,
19, 59, 23,
224, 73, 225,
226, 73, 72,
227, 228, 229,
230, 231, 74,
74, 75, 232,
233, 75, 234,
235, 73, 236,
237, 73, 238,
73, 77, 72,
72, 77, 76,
239, 78, 240,
241, 78, 74,
74, 78, 75,
75, 78, 79,
242, 243, 73,
73, 244, 77,
62, 63, 245,
246, 63, 247,
248, 249, 78,
78, 250, 251,
57, 82, 83,
81, 85, 80,
80, 85, 84,
85, 89, 84,
84, 89, 88,
90, 91, 86,
86, 91, 87,
87, 91, 85,
85, 91, 89,
94, 95, 93,
93, 95, 92,
53, 99, 96,
96, 99, 100,
99, 98, 52,
52, 98, 55,
99, 52, 100,
100, 52, 97,
102, 101, 53,
53, 101, 54,
102, 53, 103,
103, 53, 96, };

static int[] FaceArrayB = new int[]{
0, 1, 2,
3, 4, 5,
6, 7, 8,
9, 10, 11,
12, 13, 14,
15, 16, 17,
18, 19, 20,
21, 22, 23,
24, 25, 26,
27, 28, 29,
30, 31, 32,
33, 34, 35,
36, 37, 38,
39, 40, 41,
42, 43, 44,
45, 46, 47,
48, 49, 50,
51, 52, 53,
54, 55, 56,
57, 58, 59,
60, 61, 62,
63, 64, 65,
66, 67, 68,
69, 70, 71,
72, 73, 74,
75, 76, 77,
78, 79, 80,
81, 82, 83,
84, 85, 86,};

static int[] textures = new int[1];
static Bitmap ModelTexture;
private static FloatBuffer mFVertexBuffer;
private static FloatBuffer mFTextureBuffer;
private static ByteBuffer  mModel;

private static FloatBuffer mFVertexBufferB;
private static FloatBuffer mFTextureBufferB;
private static ByteBuffer  mModelB;

public static void SetupBuffers(){
byte tModel[] = new byte[FaceArray.length]; 	
for (int i = 0; i < FaceArray.length; i++){
tModel[i] = (byte) (FaceArray[i]);
}
 for (int i = 0; i < TextArray.length; i+= 2){
TextArray[i+1] = TextArray[i+1] * -1;
}
byte tModelB[] = new byte[FaceArrayB.length]; 	
for (int i = 0; i < FaceArrayB.length; i++){
tModelB[i] = (byte) (FaceArrayB[i]);
}
 for (int i = 0; i < TextArrayB.length; i+= 2){
TextArrayB[i+1] = TextArrayB[i+1] * -1;
}
ByteBuffer vbb = ByteBuffer.allocateDirect(VertArray.length * 4);
vbb.order(ByteOrder.nativeOrder());
mFVertexBuffer = vbb.asFloatBuffer();
mFVertexBuffer.put(VertArray);
mFVertexBuffer.position(0);
ByteBuffer tbb = ByteBuffer.allocateDirect(TextArray.length * 4);
tbb.order(ByteOrder.nativeOrder());
mFTextureBuffer = tbb.asFloatBuffer();
mFTextureBuffer.put(TextArray);
mFTextureBuffer.position(0);
mModel = ByteBuffer.allocateDirect(FaceArray.length);
mModel.put(tModel);
mModel.position(0);
Faces = FaceArray.length;
VertArray = null;
TextArray = null;
FaceArray = null;
ByteBuffer vBbb = ByteBuffer.allocateDirect(VertArrayB.length * 4);
vBbb.order(ByteOrder.nativeOrder());
mFVertexBufferB = vBbb.asFloatBuffer();
mFVertexBufferB.put(VertArrayB);
mFVertexBufferB.position(0);
ByteBuffer tBbb = ByteBuffer.allocateDirect(TextArrayB.length * 4);
tBbb.order(ByteOrder.nativeOrder());
mFTextureBufferB = tBbb.asFloatBuffer();
mFTextureBufferB.put(TextArrayB);
mFTextureBufferB.position(0);
mModelB = ByteBuffer.allocateDirect(FaceArrayB.length);
mModelB.put(tModelB);
mModelB.position(0);
FacesB = FaceArrayB.length;
VertArrayB = null;
TextArrayB = null;
FaceArrayB = null;
}

public static void TextureSetup(GL10 gl, Bitmap Texture){
ModelTexture = Texture;
gl.glGenTextures(1, textures, 0);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, ModelTexture, 0);
}

public static void draw(GL10 gl){
gl.glAlphaFunc(gl.GL_GREATER, 0.1f);
gl.glEnable(gl.GL_ALPHA_TEST);
gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBuffer);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBuffer);
gl.glDrawElements( gl.GL_TRIANGLES, Faces, gl.GL_UNSIGNED_BYTE, mModel);
gl.glVertexPointer(3, GL11.GL_FLOAT, 0, mFVertexBufferB);
gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, mFTextureBufferB);
gl.glDrawElements( gl.GL_TRIANGLES, FacesB, gl.GL_UNSIGNED_BYTE, mModelB);
}

}


//Vertices: 339  Texture Co-ords: 202  Normals: 116  Texture: Hurt Faces: 196 Smooth Groups: 6 sucess: 80 Doubles: 116 Redos needed: 148 Correct: 113